<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.1011.1414                               -->
<workbook original-version='18.1' source-build='2024.2.4 (20242.24.1011.1414)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Total Number of Deaths' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='184885'>
        <calculation class='tableau' formula='184885' />
      </column>
    </datasource>
    <datasource caption='deaths_by_age_group (deaths_by_age_group)' inline='true' name='federated.1lto3re04ogau519m0v7512vjmbt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deaths_by_age_group' name='excel-direct.0xutiz106xhsp811hs7kr07f7y1w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/deaths_by_age_group.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0xutiz106xhsp811hs7kr07f7y1w' name='deaths_by_age_group Table1' table='[deaths_by_age_group$Table1]' type='table'>
          <columns gridOrigin='A1:C10:no:A1:C10:0' header='yes' outcome='2'>
            <column datatype='string' name='Age Group' ordinal='0' />
            <column datatype='real' name='Percentage of deaths' ordinal='1' />
            <column datatype='integer' name='Count of deaths' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0xutiz106xhsp811hs7kr07f7y1w' name='deaths_by_age_group Table1' table='[deaths_by_age_group$Table1]' type='table'>
          <columns gridOrigin='A1:C10:no:A1:C10:0' header='yes' outcome='2'>
            <column datatype='string' name='Age Group' ordinal='0' />
            <column datatype='real' name='Percentage of deaths' ordinal='1' />
            <column datatype='integer' name='Count of deaths' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deaths_by_age_group Table1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C10:no:A1:C10:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[deaths_by_age_group Table1]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths!by!age!group$Table1_903379B625EB4A2FBD782F2131ACEFB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of deaths]</local-name>
            <parent-name>[deaths_by_age_group Table1]</parent-name>
            <remote-alias>Percentage of deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths!by!age!group$Table1_903379B625EB4A2FBD782F2131ACEFB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count of deaths]</local-name>
            <parent-name>[deaths_by_age_group Table1]</parent-name>
            <remote-alias>Count of deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths!by!age!group$Table1_903379B625EB4A2FBD782F2131ACEFB5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deaths_by_age_group Table1' datatype='table' name='[__tableau_internal_object_id__].[deaths!by!age!group$Table1_903379B625EB4A2FBD782F2131ACEFB5]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deaths_by_age_group Table1' id='deaths!by!age!group$Table1_903379B625EB4A2FBD782F2131ACEFB5'>
            <properties context=''>
              <relation connection='excel-direct.0xutiz106xhsp811hs7kr07f7y1w' name='deaths_by_age_group Table1' table='[deaths_by_age_group$Table1]' type='table'>
                <columns gridOrigin='A1:C10:no:A1:C10:0' header='yes' outcome='2'>
                  <column datatype='string' name='Age Group' ordinal='0' />
                  <column datatype='real' name='Percentage of deaths' ordinal='1' />
                  <column datatype='integer' name='Count of deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='deaths_by_race_ethnicity (deaths_by_race_ethnicity)' inline='true' name='federated.1mvdm73058cqbd19rb6ke12ej7ct' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deaths_by_race_ethnicity' name='excel-direct.1jd3t6m0gufoz6120n31u105z6nn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/deaths_by_race_ethnicity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jd3t6m0gufoz6120n31u105z6nn' name='deaths_by_race_ethnicity Table1' table='[deaths_by_race_ethnicity$Table1]' type='table'>
          <columns gridOrigin='A1:C7:no:A1:C7:0' header='yes' outcome='2'>
            <column datatype='string' name='Race/Ethnicity' ordinal='0' />
            <column datatype='real' name='Percentage of deaths' ordinal='1' />
            <column datatype='integer' name='Count of deaths' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jd3t6m0gufoz6120n31u105z6nn' name='deaths_by_race_ethnicity Table1' table='[deaths_by_race_ethnicity$Table1]' type='table'>
          <columns gridOrigin='A1:C7:no:A1:C7:0' header='yes' outcome='2'>
            <column datatype='string' name='Race/Ethnicity' ordinal='0' />
            <column datatype='real' name='Percentage of deaths' ordinal='1' />
            <column datatype='integer' name='Count of deaths' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deaths_by_race_ethnicity Table1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C7:no:A1:C7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Race/Ethnicity</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Race/Ethnicity]</local-name>
            <parent-name>[deaths_by_race_ethnicity Table1]</parent-name>
            <remote-alias>Race/Ethnicity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths!by!race!ethnicity$Table1_E4DE151ED64546C1B2672887B38E14CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of deaths]</local-name>
            <parent-name>[deaths_by_race_ethnicity Table1]</parent-name>
            <remote-alias>Percentage of deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths!by!race!ethnicity$Table1_E4DE151ED64546C1B2672887B38E14CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Count of deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Count of deaths]</local-name>
            <parent-name>[deaths_by_race_ethnicity Table1]</parent-name>
            <remote-alias>Count of deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deaths!by!race!ethnicity$Table1_E4DE151ED64546C1B2672887B38E14CE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deaths_by_race_ethnicity Table1' datatype='table' name='[__tableau_internal_object_id__].[deaths!by!race!ethnicity$Table1_E4DE151ED64546C1B2672887B38E14CE]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deaths_by_race_ethnicity Table1' id='deaths!by!race!ethnicity$Table1_E4DE151ED64546C1B2672887B38E14CE'>
            <properties context=''>
              <relation connection='excel-direct.1jd3t6m0gufoz6120n31u105z6nn' name='deaths_by_race_ethnicity Table1' table='[deaths_by_race_ethnicity$Table1]' type='table'>
                <columns gridOrigin='A1:C7:no:A1:C7:0' header='yes' outcome='2'>
                  <column datatype='string' name='Race/Ethnicity' ordinal='0' />
                  <column datatype='real' name='Percentage of deaths' ordinal='1' />
                  <column datatype='integer' name='Count of deaths' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' inline='true' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='united_states_governors_1775_2020' name='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/united_states_governors_1775_2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us_states_covid19_daily_revised' name='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us_states_covid19_daily_revised.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us-airports' name='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us-airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19_state' name='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/COVID19_state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017' name='excel-direct.0nwqjag1pmirqe14ajkis19u24pf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='deaths_by_age_group' name='excel-direct.0o4xdo10bnxd66111o85p15pswtk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/deaths_by_age_group.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='deaths_by_race_ethnicity' name='excel-direct.0iu83jf170f1ey1d851vb095ebbc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/deaths_by_race_ethnicity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
          <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Tested' ordinal='1' />
            <column datatype='integer' name='Infected' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='real' name='Pop Density' ordinal='5' />
            <column datatype='real' name='Gini' ordinal='6' />
            <column datatype='integer' name='ICU Beds' ordinal='7' />
            <column datatype='integer' name='Income' ordinal='8' />
            <column datatype='integer' name='GDP' ordinal='9' />
            <column datatype='real' name='Unemployment' ordinal='10' />
            <column datatype='real' name='Sex Ratio' ordinal='11' />
            <column datatype='real' name='Smoking Rate' ordinal='12' />
            <column datatype='real' name='Flu Deaths' ordinal='13' />
            <column datatype='real' name='Respiratory Deaths' ordinal='14' />
            <column datatype='integer' name='Physicians' ordinal='15' />
            <column datatype='integer' name='Hospitals' ordinal='16' />
            <column datatype='integer' name='Health Spending' ordinal='17' />
            <column datatype='real' name='Pollution' ordinal='18' />
            <column datatype='integer' name='Med-Large Airports' ordinal='19' />
            <column datatype='real' name='Temperature' ordinal='20' />
            <column datatype='real' name='Urban' ordinal='21' />
            <column datatype='real' name='Age 0-25' ordinal='22' />
            <column datatype='real' name='Age 26-54' ordinal='23' />
            <column datatype='real' name='Age 55+' ordinal='24' />
            <column datatype='date' name='School Closure Date' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
            <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Governor(6)' ordinal='1' />
              <column datatype='string' name='Party(6)' ordinal='2' />
              <column datatype='string' name='State Abbreviations' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
            <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
              <column datatype='date' name='Data As Of' ordinal='0' />
              <column datatype='date' name='Start Date' ordinal='1' />
              <column datatype='date' name='End Date' ordinal='2' />
              <column datatype='string' name='Group' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='integer' name='Month' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='Condition Group' ordinal='7' />
              <column datatype='string' name='Condition' ordinal='8' />
              <column datatype='string' name='ICD10_codes' ordinal='9' />
              <column datatype='string' name='Age Group' ordinal='10' />
              <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
              <column datatype='integer' name='Number of Mentions' ordinal='12' />
              <column datatype='string' name='Flag' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
            <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='2'>
              <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='positive' ordinal='2' />
              <column datatype='integer' name='probableCases' ordinal='3' />
              <column datatype='integer' name='negative' ordinal='4' />
              <column datatype='integer' name='pending' ordinal='5' />
              <column datatype='integer' name='totalTestResults' ordinal='6' />
              <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
              <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
              <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
              <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
              <column datatype='integer' name='recovered' ordinal='11' />
              <column datatype='integer' name='death' ordinal='12' />
              <column datatype='integer' name='hospitalized' ordinal='13' />
              <column datatype='integer' name='deathConfirmed' ordinal='14' />
              <column datatype='integer' name='deathProbable' ordinal='15' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='ident' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
              <column datatype='real' name='latitude_deg' ordinal='4' />
              <column datatype='real' name='longitude_deg' ordinal='5' />
              <column datatype='integer' name='elevation_ft' ordinal='6' />
              <column datatype='string' name='continent' ordinal='7' />
              <column datatype='string' name='country_name' ordinal='8' />
              <column datatype='string' name='iso_country' ordinal='9' />
              <column datatype='string' name='region_name' ordinal='10' />
              <column datatype='string' name='local_region' ordinal='11' />
              <column datatype='string' name='municipality' ordinal='12' />
              <column datatype='integer' name='scheduled_service' ordinal='13' />
              <column datatype='string' name='gps_code' ordinal='14' />
              <column datatype='string' name='iata_code' ordinal='15' />
              <column datatype='string' name='local_code' ordinal='16' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age 0-25 (COVID19!state1)]' value='[COVID19_state1].[Age 0-25]' />
          <map key='[Age 0-25]' value='[COVID19_state].[Age 0-25]' />
          <map key='[Age 26-54 (COVID19!state1)]' value='[COVID19_state1].[Age 26-54]' />
          <map key='[Age 26-54]' value='[COVID19_state].[Age 26-54]' />
          <map key='[Age 55+ (COVID19!state1)]' value='[COVID19_state1].[Age 55+]' />
          <map key='[Age 55+]' value='[COVID19_state].[Age 55+]' />
          <map key='[Age Group]' value='[Conditions_Contributing_to_COVI].[Age Group]' />
          <map key='[COVID-19 Deaths]' value='[Conditions_Contributing_to_COVI].[COVID-19 Deaths]' />
          <map key='[Condition Group]' value='[Conditions_Contributing_to_COVI].[Condition Group]' />
          <map key='[Condition]' value='[Conditions_Contributing_to_COVI].[Condition]' />
          <map key='[Data As Of]' value='[Conditions_Contributing_to_COVI].[Data As Of]' />
          <map key='[Deaths (COVID19!state1)]' value='[COVID19_state1].[Deaths]' />
          <map key='[Deaths]' value='[COVID19_state].[Deaths]' />
          <map key='[End Date]' value='[Conditions_Contributing_to_COVI].[End Date]' />
          <map key='[Flag]' value='[Conditions_Contributing_to_COVI].[Flag]' />
          <map key='[Flu Deaths (COVID19!state1)]' value='[COVID19_state1].[Flu Deaths]' />
          <map key='[Flu Deaths]' value='[COVID19_state].[Flu Deaths]' />
          <map key='[GDP (COVID19!state1)]' value='[COVID19_state1].[GDP]' />
          <map key='[GDP]' value='[COVID19_state].[GDP]' />
          <map key='[Gini (COVID19!state1)]' value='[COVID19_state1].[Gini]' />
          <map key='[Gini]' value='[COVID19_state].[Gini]' />
          <map key='[Governor(6)]' value='[united_states_governors_1775_20].[Governor(6)]' />
          <map key='[Group]' value='[Conditions_Contributing_to_COVI].[Group]' />
          <map key='[Health Spending (COVID19!state1)]' value='[COVID19_state1].[Health Spending]' />
          <map key='[Health Spending]' value='[COVID19_state].[Health Spending]' />
          <map key='[Hospitals (COVID19!state1)]' value='[COVID19_state1].[Hospitals]' />
          <map key='[Hospitals]' value='[COVID19_state].[Hospitals]' />
          <map key='[ICD10_codes]' value='[Conditions_Contributing_to_COVI].[ICD10_codes]' />
          <map key='[ICU Beds (COVID19!state1)]' value='[COVID19_state1].[ICU Beds]' />
          <map key='[ICU Beds]' value='[COVID19_state].[ICU Beds]' />
          <map key='[Income (COVID19!state1)]' value='[COVID19_state1].[Income]' />
          <map key='[Income]' value='[COVID19_state].[Income]' />
          <map key='[Infected (COVID19!state1)]' value='[COVID19_state1].[Infected]' />
          <map key='[Infected]' value='[COVID19_state].[Infected]' />
          <map key='[Med-Large Airports (COVID19!state1)]' value='[COVID19_state1].[Med-Large Airports]' />
          <map key='[Med-Large Airports]' value='[COVID19_state].[Med-Large Airports]' />
          <map key='[Month]' value='[Conditions_Contributing_to_COVI].[Month]' />
          <map key='[Number of Mentions]' value='[Conditions_Contributing_to_COVI].[Number of Mentions]' />
          <map key='[Party(6)]' value='[united_states_governors_1775_20].[Party(6)]' />
          <map key='[Physicians (COVID19!state1)]' value='[COVID19_state1].[Physicians]' />
          <map key='[Physicians]' value='[COVID19_state].[Physicians]' />
          <map key='[Pollution (COVID19!state1)]' value='[COVID19_state1].[Pollution]' />
          <map key='[Pollution]' value='[COVID19_state].[Pollution]' />
          <map key='[Pop Density (COVID19!state1)]' value='[COVID19_state1].[Pop Density]' />
          <map key='[Pop Density]' value='[COVID19_state].[Pop Density]' />
          <map key='[Population (COVID19!state1)]' value='[COVID19_state1].[Population]' />
          <map key='[Population]' value='[COVID19_state].[Population]' />
          <map key='[Respiratory Deaths (COVID19!state1)]' value='[COVID19_state1].[Respiratory Deaths]' />
          <map key='[Respiratory Deaths]' value='[COVID19_state].[Respiratory Deaths]' />
          <map key='[School Closure Date (COVID19!state1)]' value='[COVID19_state1].[School Closure Date]' />
          <map key='[School Closure Date]' value='[COVID19_state].[School Closure Date]' />
          <map key='[Sex Ratio (COVID19!state1)]' value='[COVID19_state1].[Sex Ratio]' />
          <map key='[Sex Ratio]' value='[COVID19_state].[Sex Ratio]' />
          <map key='[Smoking Rate (COVID19!state1)]' value='[COVID19_state1].[Smoking Rate]' />
          <map key='[Smoking Rate]' value='[COVID19_state].[Smoking Rate]' />
          <map key='[Start Date]' value='[Conditions_Contributing_to_COVI].[Start Date]' />
          <map key='[State (COVID19!state)]' value='[COVID19_state].[State]' />
          <map key='[State (COVID19!state1)]' value='[COVID19_state1].[State]' />
          <map key='[State (Conditions!Contributing!to!COVI)]' value='[Conditions_Contributing_to_COVI].[State]' />
          <map key='[State Abbreviations]' value='[united_states_governors_1775_20].[State Abbreviations]' />
          <map key='[State]' value='[united_states_governors_1775_20].[State]' />
          <map key='[Temperature (COVID19!state1)]' value='[COVID19_state1].[Temperature]' />
          <map key='[Temperature]' value='[COVID19_state].[Temperature]' />
          <map key='[Tested (COVID19!state1)]' value='[COVID19_state1].[Tested]' />
          <map key='[Tested]' value='[COVID19_state].[Tested]' />
          <map key='[Unemployment (COVID19!state1)]' value='[COVID19_state1].[Unemployment]' />
          <map key='[Unemployment]' value='[COVID19_state].[Unemployment]' />
          <map key='[Urban (COVID19!state1)]' value='[COVID19_state1].[Urban]' />
          <map key='[Urban]' value='[COVID19_state].[Urban]' />
          <map key='[Year]' value='[Conditions_Contributing_to_COVI].[Year]' />
          <map key='[continent]' value='[us-airports].[continent]' />
          <map key='[country_name]' value='[us-airports].[country_name]' />
          <map key='[date]' value='[us_states_covid19_daily].[date]' />
          <map key='[deathConfirmed]' value='[us_states_covid19_daily].[deathConfirmed]' />
          <map key='[deathProbable]' value='[us_states_covid19_daily].[deathProbable]' />
          <map key='[death]' value='[us_states_covid19_daily].[death]' />
          <map key='[elevation_ft]' value='[us-airports].[elevation_ft]' />
          <map key='[gps_code]' value='[us-airports].[gps_code]' />
          <map key='[hospitalizedCumulative]' value='[us_states_covid19_daily].[hospitalizedCumulative]' />
          <map key='[hospitalizedCurrently]' value='[us_states_covid19_daily].[hospitalizedCurrently]' />
          <map key='[hospitalized]' value='[us_states_covid19_daily].[hospitalized]' />
          <map key='[iata_code]' value='[us-airports].[iata_code]' />
          <map key='[id]' value='[us-airports].[id]' />
          <map key='[ident]' value='[us-airports].[ident]' />
          <map key='[iso_country]' value='[us-airports].[iso_country]' />
          <map key='[latitude_deg]' value='[us-airports].[latitude_deg]' />
          <map key='[local_code]' value='[us-airports].[local_code]' />
          <map key='[local_region]' value='[us-airports].[local_region]' />
          <map key='[longitude_deg]' value='[us-airports].[longitude_deg]' />
          <map key='[municipality]' value='[us-airports].[municipality]' />
          <map key='[name]' value='[us-airports].[name]' />
          <map key='[negative]' value='[us_states_covid19_daily].[negative]' />
          <map key='[onVentilatorCumulative]' value='[us_states_covid19_daily].[onVentilatorCumulative]' />
          <map key='[onVentilatorCurrently]' value='[us_states_covid19_daily].[onVentilatorCurrently]' />
          <map key='[pending]' value='[us_states_covid19_daily].[pending]' />
          <map key='[positive]' value='[us_states_covid19_daily].[positive]' />
          <map key='[probableCases]' value='[us_states_covid19_daily].[probableCases]' />
          <map key='[recovered]' value='[us_states_covid19_daily].[recovered]' />
          <map key='[region_name]' value='[us-airports].[region_name]' />
          <map key='[scheduled_service]' value='[us-airports].[scheduled_service]' />
          <map key='[state]' value='[us_states_covid19_daily].[state]' />
          <map key='[totalTestResults]' value='[us_states_covid19_daily].[totalTestResults]' />
          <map key='[type]' value='[us-airports].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D51:no:A1:D51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N10001:no:A1:N10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P14304:no:A1:P14304:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Governor(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Governor(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Governor(6)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Party(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Party(6)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Abbreviations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Abbreviations]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State Abbreviations</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25 (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54 (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+ (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state)]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>55</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data As Of</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data As Of]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Data As Of</remote-alias>
            <ordinal>56</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>57</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[End Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>End Date</remote-alias>
            <ordinal>58</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Conditions!Contributing!to!COVI)]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition Group</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICD10_codes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICD10_codes]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>ICD10_codes</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COVID-19 Deaths]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>COVID-19 Deaths</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Mentions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Mentions]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Number of Mentions</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>70</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>probableCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[probableCases]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>probableCases</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalTestResults</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalTestResults]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>totalTestResults</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCurrently</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCumulative</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCurrently</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCumulative</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>82</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathConfirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathConfirmed]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathConfirmed</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathProbable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathProbable]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathProbable</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>86</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ident</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ident]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>ident</remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>88</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>latitude_deg</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>longitude_deg</remote-alias>
            <ordinal>91</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation_ft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elevation_ft]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>elevation_ft</remote-alias>
            <ordinal>92</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>93</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_country]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iso_country</remote-alias>
            <ordinal>95</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>region_name</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_region]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_region</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>municipality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[municipality]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>municipality</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[scheduled_service]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>scheduled_service</remote-alias>
            <ordinal>99</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gps_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gps_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>gps_code</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iata_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iata_code</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_code</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]&quot;' value='Death' />
        </aliases>
      </column>
      <column datatype='real' name='[Age 0-25]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 26-54]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 55+]' role='measure' type='quantitative' />
      <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
      </column>
      <column caption='Total Death Count' datatype='integer' name='[Calculation_340584739213651968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_SUM(MAX([death]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Total Deaths' datatype='integer' name='[Calculation_340584739235155969]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='string' name='[Condition (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Condition]' new-bin='true' />
      </column>
      <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
      <column caption='ICD10 codes' datatype='string' name='[ICD10_codes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Party (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (COVID19!state) (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' new-bin='true' />
      </column>
      <column datatype='string' name='[State (COVID19!state) (group) 2]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' new-bin='true' />
      </column>
      <column datatype='string' name='[State (COVID19!state) (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska&quot;'>
            <value>&quot;Alaska&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (COVID19!state1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Abbreviations (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State Abbreviations]' new-bin='true'>
          <bin default-name='false' value='&quot;States that have a Democratic Governor&quot;'>
            <value>&quot;CA&quot;</value>
            <value>&quot;CO&quot;</value>
            <value>&quot;CT&quot;</value>
            <value>&quot;DE&quot;</value>
            <value>&quot;HI&quot;</value>
            <value>&quot;IL&quot;</value>
            <value>&quot;KS&quot;</value>
            <value>&quot;KY&quot;</value>
            <value>&quot;LA&quot;</value>
            <value>&quot;ME&quot;</value>
            <value>&quot;MI&quot;</value>
            <value>&quot;MN&quot;</value>
            <value>&quot;MT&quot;</value>
            <value>&quot;NC&quot;</value>
            <value>&quot;NJ&quot;</value>
            <value>&quot;NM&quot;</value>
            <value>&quot;NV&quot;</value>
            <value>&quot;NY&quot;</value>
            <value>&quot;OR&quot;</value>
            <value>&quot;PA&quot;</value>
            <value>&quot;RI&quot;</value>
            <value>&quot;VA&quot;</value>
            <value>&quot;WA&quot;</value>
            <value>&quot;WI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;States that have a Republican Governor&quot;'>
            <value>&quot;AK&quot;</value>
            <value>&quot;AL&quot;</value>
            <value>&quot;AR&quot;</value>
            <value>&quot;AZ&quot;</value>
            <value>&quot;FL&quot;</value>
            <value>&quot;GA&quot;</value>
            <value>&quot;IA&quot;</value>
            <value>&quot;ID&quot;</value>
            <value>&quot;IN&quot;</value>
            <value>&quot;MA&quot;</value>
            <value>&quot;MD&quot;</value>
            <value>&quot;MO&quot;</value>
            <value>&quot;MS&quot;</value>
            <value>&quot;ND&quot;</value>
            <value>&quot;NE&quot;</value>
            <value>&quot;NH&quot;</value>
            <value>&quot;OH&quot;</value>
            <value>&quot;OK&quot;</value>
            <value>&quot;SC&quot;</value>
            <value>&quot;SD&quot;</value>
            <value>&quot;TN&quot;</value>
            <value>&quot;TX&quot;</value>
            <value>&quot;UT&quot;</value>
            <value>&quot;VT&quot;</value>
            <value>&quot;WV&quot;</value>
            <value>&quot;WY&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State1 (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;IN&quot;'>
            <value>&quot;IN&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state1' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Conditions_Contributing_to_COVI' datatype='table' name='[__tableau_internal_object_id__].[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='united_states_governors_1775_20' datatype='table' name='[__tableau_internal_object_id__].[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_states_covid19_daily' datatype='table' name='[__tableau_internal_object_id__].[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
      <column caption='Death Confirmed' datatype='integer' name='[deathConfirmed]' role='measure' type='quantitative' />
      <column caption='Death Probable' datatype='integer' name='[deathProbable]' role='measure' type='quantitative' />
      <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Elevation Ft' datatype='integer' name='[elevation_ft]' role='measure' type='quantitative' />
      <column caption='Gps Code' datatype='string' name='[gps_code]' role='dimension' type='nominal' />
      <column caption='Hospitalized Cumulative' datatype='integer' name='[hospitalizedCumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalized Currently' datatype='integer' name='[hospitalizedCurrently]' role='measure' type='quantitative' />
      <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
      <column caption='Iata Code' datatype='string' name='[iata_code]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Ident' datatype='string' name='[ident]' role='dimension' type='nominal' />
      <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude Deg' datatype='real' name='[latitude_deg]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Code' datatype='string' name='[local_code]' role='dimension' type='nominal' />
      <column caption='Local Region' datatype='string' name='[local_region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Longitude Deg' datatype='real' name='[longitude_deg]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Municipality' datatype='string' name='[municipality]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Cumulative' datatype='integer' name='[onVentilatorCumulative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Currently' datatype='integer' name='[onVentilatorCurrently]' role='measure' type='quantitative' />
      <column caption='Pending' datatype='integer' name='[pending]' role='measure' type='quantitative' />
      <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Probable Cases' datatype='integer' name='[probableCases]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Scheduled Service' datatype='integer' name='[scheduled_service]' role='measure' type='quantitative' />
      <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Test Results' datatype='integer' name='[totalTestResults]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[Age 0-25]' derivation='Attribute' name='[attr:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Avg' name='[avg:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Avg' name='[avg:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Avg' name='[avg:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Avg' name='[avg:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
      <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='5' column='[Age 0-25]' derivation='Percentile' name='[prc5:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Sum' name='[sum:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Sum' name='[sum:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Sum' name='[sum:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state))' hidden='true' name='[Action (State (COVID19!state))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),MONTH(Date),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),MONTH(Date),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State Abbrev)' hidden='true' name='[Action (State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State Name)' hidden='true' name='[Action (State Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
        </groupfilter>
      </group>
      <group caption='Action (State Name,State Abbrev)' hidden='true' name='[Action (State Name,State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State1)' hidden='true' name='[Action (State1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Governor(6),State Abbreviations)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Governor(6):nk]' />
          <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (COVID19!state),WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State1,WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group caption='United States' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
            <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='US' name='[State (COVID19!state) (group) 2 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Alaska&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Hawaii&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Maryland&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Massachusetts&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;South Dakota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;West Virginia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Wisconsin&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.701058' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.298942' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[prc5:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Party(6):nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party(6) (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Total Number of Deaths' datatype='integer' default-format='N' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='184885'>
          <calculation class='tableau' formula='184885' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID19_state1' id='COVID19!state_17C8D48792824FAEAA08A29DB41F75A3'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='COVID19_state' id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Conditions_Contributing_to_COVI' id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B'>
            <properties context=''>
              <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
                <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Data As Of' ordinal='0' />
                  <column datatype='date' name='Start Date' ordinal='1' />
                  <column datatype='date' name='End Date' ordinal='2' />
                  <column datatype='string' name='Group' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='integer' name='Month' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='Condition Group' ordinal='7' />
                  <column datatype='string' name='Condition' ordinal='8' />
                  <column datatype='string' name='ICD10_codes' ordinal='9' />
                  <column datatype='string' name='Age Group' ordinal='10' />
                  <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
                  <column datatype='integer' name='Number of Mentions' ordinal='12' />
                  <column datatype='string' name='Flag' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='united_states_governors_1775_20' id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE'>
            <properties context=''>
              <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
                <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Governor(6)' ordinal='1' />
                  <column datatype='string' name='Party(6)' ordinal='2' />
                  <column datatype='string' name='State Abbreviations' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_states_covid19_daily' id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B'>
            <properties context=''>
              <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
                <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='positive' ordinal='2' />
                  <column datatype='integer' name='probableCases' ordinal='3' />
                  <column datatype='integer' name='negative' ordinal='4' />
                  <column datatype='integer' name='pending' ordinal='5' />
                  <column datatype='integer' name='totalTestResults' ordinal='6' />
                  <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
                  <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
                  <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
                  <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
                  <column datatype='integer' name='recovered' ordinal='11' />
                  <column datatype='integer' name='death' ordinal='12' />
                  <column datatype='integer' name='hospitalized' ordinal='13' />
                  <column datatype='integer' name='deathConfirmed' ordinal='14' />
                  <column datatype='integer' name='deathProbable' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us-airports' id='us-airports_65636316B8D74AF2A1176E9E7E31D698'>
            <properties context=''>
              <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
                <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='ident' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='name' ordinal='3' />
                  <column datatype='real' name='latitude_deg' ordinal='4' />
                  <column datatype='real' name='longitude_deg' ordinal='5' />
                  <column datatype='integer' name='elevation_ft' ordinal='6' />
                  <column datatype='string' name='continent' ordinal='7' />
                  <column datatype='string' name='country_name' ordinal='8' />
                  <column datatype='string' name='iso_country' ordinal='9' />
                  <column datatype='string' name='region_name' ordinal='10' />
                  <column datatype='string' name='local_region' ordinal='11' />
                  <column datatype='string' name='municipality' ordinal='12' />
                  <column datatype='integer' name='scheduled_service' ordinal='13' />
                  <column datatype='string' name='gps_code' ordinal='14' />
                  <column datatype='string' name='iata_code' ordinal='15' />
                  <column datatype='string' name='local_code' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state1)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_17C8D48792824FAEAA08A29DB41F75A3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (Conditions!Contributing!to!COVI)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Abbreviations]' />
              <expression op='[state]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[region_name]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us-airports_65636316B8D74AF2A1176E9E7E31D698' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Map to Graph Highlighter' name='[Action12_1D61D4D5D8154735890BFE3305330EA6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Airports Dashboard' type='sheet'>
        <exclude-sheet name='Airport Per State to Positive Cases' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='# of Airports within each State,Alaska # Airports,Hawaii # Airports' />
        <param name='special-fields' value='all' />
        <param name='target' value='Airports Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='Total Monthly Death Toll' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_F5B03D4E998D46849F7CCDD52D58732E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Maps to Chart/Metrics' name='[Action4_7D098748666743099FF1FB542282EA34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet'>
        <exclude-sheet name='Death/Infected/Population Metrics' />
        <exclude-sheet name='Total Monthly Death Toll' />
        <exclude-sheet name='Total Monthly Infected Toll' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,Hawaii Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Highlight1' name='[Action7_7BCC75453A1848B9BD3596C398C56B67]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet'>
        <exclude-sheet name='Alaska Death Map Chart' />
        <exclude-sheet name='Hawaii Death Map Chart' />
        <exclude-sheet name='Death/Infected/Population Metrics' />
        <exclude-sheet name='US Death Map Chart' />
      </source>
      <command command='tsc:brush'>
        <param name='exclude' value='Alaska Death Map Chart,Hawaii Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Chart to Map/Metric' name='[Action8_877A04CF49694692A9616BFB0322BD02]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet'>
        <exclude-sheet name='Alaska Death Map Chart' />
        <exclude-sheet name='Hawaii Death Map Chart' />
        <exclude-sheet name='Death/Infected/Population Metrics' />
        <exclude-sheet name='US Death Map Chart' />
      </source>
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Total Monthly Death Toll,Total Monthly Infected Toll' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Graph to Map Filter' name='[Action9_CB82F9F80CEC44708384537A2E226415]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Airports Dashboard' type='sheet' worksheet='Airport Per State to Positive Cases' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Airport Per State to Positive Cases' />
        <param name='special-fields' value='all' />
        <param name='target' value='Airports Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='# of Airports within each State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[region_name]' derivation='None' name='[none:region_name:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:region_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:region_name:nk]' member='&quot;Alaska&quot;' />
                <groupfilter function='member' level='[none:region_name:nk]' member='&quot;Hawaii&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1AD2B499-30E1-4F3C-861C-407A8AC34176}' />
    </worksheet>
    <worksheet name='Age Group 2020-2024'>
      <table>
        <view>
          <datasources>
            <datasource caption='deaths_by_age_group (deaths_by_age_group)' name='federated.1lto3re04ogau519m0v7512vjmbt' />
          </datasources>
          <datasource-dependencies datasource='federated.1lto3re04ogau519m0v7512vjmbt'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='real' name='[Percentage of deaths]' role='measure' type='quantitative' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentage of deaths]' derivation='Sum' name='[sum:Percentage of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]' scope='rows' value='% of deaths' />
            <encoding attr='space' class='1' field='[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='font-family' id='refline0' value='Times New Roman' />
            <format attr='font-size' id='refline0' value='12' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#75a1c7' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='center' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Verdana' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.076464056968689' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='vertical-align' value='bottom' />
                <format attr='text-align' value='center' />
                <format attr='wrap' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-family' value='Verdana' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.55972373485565186' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Verdana' />
                <format attr='font-size' value='10' />
                <format attr='color' value='#ffffff' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.4832596778869629' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#75a1c7' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk] + [federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk])</rows>
        <cols>[federated.1lto3re04ogau519m0v7512vjmbt].[none:Age Group:nk]</cols>
      </table>
      <simple-id uuid='{FCBB13B7-1C22-47DA-8173-B2B3F992DF91}' />
    </worksheet>
    <worksheet name='Airport Per State to Positive Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Airport Per State to Total Positive Cases Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]'>
            <groupfilter function='level-members' level='[State (COVID19!state)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='cols' value='Total Positive Cases in 2020' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US airports' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' max='1419311' min='-72542' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' field-type='quantitative' max='1986' min='-117' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</cols>
      </table>
      <simple-id uuid='{B636ABC4-D851-432E-BFF8-8C4FF51DD856}' />
    </worksheet>
    <worksheet name='Alaska # Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[region_name]' derivation='None' name='[none:region_name:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]'>
            <groupfilter function='member' level='[none:region_name:nk]' member='&quot;Alaska&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{62450015-FF3D-4B16-8F92-2AC1D82800C4}' />
    </worksheet>
    <worksheet name='Alaska Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DCF9831441914AD8A8798BF49F0B92F3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{727F25AB-ABE1-4441-AAED-AC2E60C2ECDC}' />
    </worksheet>
    <worksheet name='Alaska Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='%null%' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;District of Columbia&quot;' />
                    <groupfilter function='member' level='[state]' member='%null%' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='#2020-01-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='#2020-02-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-03-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-04-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-05-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-06-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-07-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-08-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-09-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-10-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-11-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-12-01 00:00:00#' />
                  </groupfilter>
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
                      <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[State (COVID19!state)]' />
                <hierarchy name='[tmn:date:ok]' />
                <hierarchy name='[state]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alabama&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;AL&quot;' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-03-01 00:00:00#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-04-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-05-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-06-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-07-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-08-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-09-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-10-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-11-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-12-01 00:00:00#' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tmn:date:ok]' />
                <hierarchy name='[none:State (COVID19!state):nk]' />
                <hierarchy name='[none:state:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' max='27000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{A9713877-2563-459B-84FD-DC41AFB4C7A5}' />
    </worksheet>
    <worksheet name='Death Rate by State and Political Affiliations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759'>Death Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
            </column>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Party (group)]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[Party (group)]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' included-values='in-range'>
            <min>0.0040033594624860024</min>
            <max>0.047100000000000003</max>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' value='Party'>
              <formatted-text>
                <run fontalignment='1'>Party</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{49BEE33E-2AC3-422C-B54B-D12DF3E86875}' />
    </worksheet>
    <worksheet name='Death by GDP and Pop Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]' field-type='quantitative' max='90765' min='40000' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk])</cols>
      </table>
      <simple-id uuid='{FA052490-9185-4859-B657-2A8F61E89A58}' />
    </worksheet>
    <worksheet name='Death/Infected/Population Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='Attribute' name='[attr:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action8_877A04CF49694692A9616BFB0322BD02]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Name,State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_7D098748666743099FF1FB542282EA34]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-12-06#' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Name,State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' value='191' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-decoration' data-class='total' value='none' />
            <format attr='text-decoration' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]' value='true' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-decoration' value='underline' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' value='12' />
            <format attr='color' value='#4e79a7' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A5F8D895-4944-4C1A-AB30-16F5F9E2D43A}' />
    </worksheet>
    <worksheet name='Deaths Per Gini Coefficient'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Gini]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gini]' derivation='Sum' name='[sum:Gini:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' field-type='quantitative' max='0.55776000000000003' min='0.40000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' scope='rows' value='Gini Coefficient' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{A4D1A66D-7C3F-4FFB-94E8-6B2AEB2923CC}' />
    </worksheet>
    <worksheet name='Hawaii # Airports'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[region_name]' derivation='None' name='[none:region_name:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]'>
            <groupfilter function='member' level='[none:region_name:nk]' member='&quot;Hawaii&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E2689853-F067-4F63-8A23-B9E9BAF6C197}' />
    </worksheet>
    <worksheet name='Hawaii Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{C8CED8A6-1A24-4BCE-9663-53590EC1CAE7}' />
    </worksheet>
    <worksheet name='Hawaii Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-16809713.700985081' min='-18259911.136666499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='2776465.8887046324' min='1907409.8083608563' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{92D5A6CD-0930-4D7A-8DDF-96577DA4A74F}' />
    </worksheet>
    <worksheet name='Infected to Hospital'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]</cols>
      </table>
      <simple-id uuid='{A179A824-76BB-42F9-87B2-4F3E728606C8}' />
    </worksheet>
    <worksheet name='Other Medical Conditions that Contributed to Death Along With Covid'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontsize='10'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Conditions!Contributing!to!COVI)]' derivation='None' name='[none:State (Conditions!Contributing!to!COVI):nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;All Ages&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Condition:nk]' />
              <groupfilter function='member' level='[none:Condition:nk]' member='&quot;COVID-19&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]'>
            <groupfilter function='member' level='[none:State (Conditions!Contributing!to!COVI):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]' />
              <text column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{C882F5DD-BA72-4DB0-9AE7-73C9B4D92D14}' />
    </worksheet>
    <worksheet name='Political Affiliations and its Impact on Infection/Death Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Political Afflications Of Each State and its Impact on Covid Infection and Death Rate
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Republican&quot;'>
                  <value>&quot;Republican&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='member' level='[mn:date:ok]' member='9' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Governor(6):nk]' />
                <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Governor(6):nk]' member='%null%' />
                <groupfilter function='member' level='[none:State Abbreviations:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk])</cols>
      </table>
      <simple-id uuid='{74B9E1EC-6DEA-4693-906F-9CE3514BB839}' />
    </worksheet>
    <worksheet name='Pop Density by State and Political Afflications'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7'>Population Density</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Party (group)]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[Party (group)]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' included-values='in-range'>
            <min>1.2863</min>
            <max>11814.540999999999</max>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' value='68' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' value='Party'>
              <formatted-text>
                <run fontalignment='1'>Party</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{25DC3E0F-48AA-499F-AD4D-F337B6B27B65}' />
    </worksheet>
    <worksheet name='Race/Ethnicity 2020-2024'>
      <table>
        <view>
          <datasources>
            <datasource caption='deaths_by_race_ethnicity (deaths_by_race_ethnicity)' name='federated.1mvdm73058cqbd19rb6ke12ej7ct' />
          </datasources>
          <datasource-dependencies datasource='federated.1mvdm73058cqbd19rb6ke12ej7ct'>
            <column datatype='real' name='[Percentage of deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Race/Ethnicity]' role='dimension' type='nominal' />
            <column-instance column='[Race/Ethnicity]' derivation='None' name='[none:Race/Ethnicity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Percentage of deaths]' derivation='Sum' name='[sum:Percentage of deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[none:Race/Ethnicity:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk]' scope='rows' value='false' />
            <format attr='render-fold-reversed' value='false' />
            <format attr='title' class='0' field='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk]' scope='rows' value='% of deaths' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[none:Race/Ethnicity:nk]' value='95' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' data-class='total' scope='rows' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='stroke-color' id='refline0' value='#e15759' />
            <format attr='font-family' id='refline0' value='Times New Roman' />
            <format attr='font-size' id='refline0' value='12' />
            <format attr='text-align' id='refline0' value='center' />
            <format attr='vertical-align' id='refline0' value='top' />
            <format attr='stroke-size' id='refline0' value='1' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='12' />
                <format attr='font-family' value='Verdana' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-size' value='12' />
                <format attr='font-family' value='Verdana' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.52674031257629395' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#f17b79' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='text-orientation' value='0' />
                <format attr='wrap' value='auto' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-family' value='Verdana' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#f17b79' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk] + [federated.1mvdm73058cqbd19rb6ke12ej7ct].[sum:Percentage of deaths:qk])</rows>
        <cols>[federated.1mvdm73058cqbd19rb6ke12ej7ct].[none:Race/Ethnicity:nk]</cols>
      </table>
      <simple-id uuid='{BB697074-CFE8-4206-8006-797C08070E26}' />
    </worksheet>
    <worksheet name='Total Monthly Death Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#e15759'>Total Monthly Death Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Day' name='[dy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Name,State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_7D098748666743099FF1FB542282EA34]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:date:ok]' member='#2020-01-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-02-29#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-03-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-05-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-06-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-07-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-08-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-09-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-10-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-11-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-12-06#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Name,State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='#75a1c7' />
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' value='#75a1c7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='color' data-class='subtotal' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[dy:date:ok]' value='#000000' />
            <format attr='color' data-class='total' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[dy:date:ok]' value='#000000' />
            <format attr='color' data-class='subtotal' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#000000' />
            <format attr='color' data-class='total' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[dy:date:ok]' value='#75a1c7' />
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#75a1c7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#4e79a7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='#75a1c7' />
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' value='#75a1c7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.88955801725387573' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{070A88E5-483E-4C2A-81FE-BD5E2569370A}' />
    </worksheet>
    <worksheet name='Total Monthly Infected Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#f1ce63'>Total Monthly Infected Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[positive]' derivation='Sum' name='[sum:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Name,State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_7D098748666743099FF1FB542282EA34]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[mn:date:ok]' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:date:ok]' member='#2020-01-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-02-29#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-03-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-05-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-06-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-07-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-08-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-09-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-10-31#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-11-30#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-12-06#' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Name,State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#4e79a7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.95552486181259155' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:positive:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5A6A41C2-B505-4668-8919-C1CBD1AE00AC}' />
    </worksheet>
    <worksheet name='US Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='Search&#10;'>
              <formatted-text>
                <run>Search&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{71A4E8A4-1896-4475-8F52-2EFAD3C2A21A}' />
    </worksheet>
    <worksheet name='US Mainland Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='State Name' datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State Abbreviations (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State Abbreviations]' new-bin='true'>
                <bin default-name='false' value='&quot;States that have a Democratic Governor&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;OR&quot;</value>
                  <value>&quot;PA&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WA&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;States that have a Republican Governor&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;SD&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;TX&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;VT&quot;</value>
                  <value>&quot;WV&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death Count' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;DC&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State Abbreviations (group)]' member='%null%' />
              <groupfilter function='member' level='[State Abbreviations (group)]' member='&quot;States that have a Democratic Governor&quot;' />
              <groupfilter function='member' level='[State Abbreviations (group)]' member='&quot;States that have a Republican Governor&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='35492410.964236289' min='18405721.483045068' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='11653306.313701561' min='1760377.9652471868' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.64999997615814209' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' value='State Filter&#10;'>
              <formatted-text>
                <run fontalignment='1'>State Filter&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]' value='Political Party&#10;'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#ffffff'>Political Party</run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{1397F377-72EE-4189-AD53-4A43FE85925B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airports Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88325' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='10826'>
            <zone h='88325' id='6' type-v2='layout-basic' w='99064' x='468' y='10826'>
              <zone h='44270' id='3' name='Airport Per State to Positive Cases' show-title='false' w='49526' x='468' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
              <zone h='88325' id='5' name='# of Airports within each State' show-title='false' w='49538' x='49994' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='44055' id='47' type-v2='text' w='28745' x='21249' y='55096'>
                <formatted-text>
                  <run>Æ&#10;&#10;&#10;</run>
                  <run bold='true' fontcolor='#ffffff' fontsize='12'>Airports and ports generally act as the gateway for the spread of foreign diseases. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontcolor='#ffffff' fontsize='12'>In the chart above, the trend line analysis displayed shows a </run>
                  <run fontcolor='#e15759' fontsize='12'>R-squared value</run>
                  <run fontcolor='#ffffff' fontsize='12'>Æ </run>
                  <run fontcolor='#ffffff'>(significance of model)</run>
                  <run fontcolor='#ffffff' fontsize='12'> of </run>
                  <run fontcolor='#e15759' fontsize='12'>.5</run>
                  <run fontcolor='#ffffff' fontsize='12'> and a </run>
                  <run fontcolor='#f1ce63' fontsize='12'>P-value</run>
                  <run fontcolor='#ffffff'> (probability of null hypothesis)</run>
                  <run fontcolor='#ffffff' fontsize='12'> of </run>
                  <run fontcolor='#f1ce63' fontsize='12'>.0001</run>
                  <run fontcolor='#ffffff' fontsize='12'>. Therefore, it can be assume that airports do play a considerable part in the spread of COVID-19.</run>
                  <run>Æ&#10;&#10;&#10;&#10;</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
              <zone h='44055' id='95' is-scaled='1' param='C:/Users/wwwye/Downloads/Airport Travel.jpg' type-v2='bitmap' w='20781' x='468' y='55096'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9977' id='10' type-v2='text' w='99064' x='468' y='849'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#72b966' fontname='Times New Roman' fontsize='20'>Airport Correlation to Infection</run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='10' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='16985' id='96' name='Alaska # Airports' show-title='false' w='9581' x='51138' y='72399'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='10' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone h='16985' id='97' name='Hawaii # Airports' show-title='false' w='9596' x='60152' y='72399'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='10' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone h='6794' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='8383' x='89880' y='5732' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='139' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='138' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='9977' id='10' type-v2='text' w='99064' x='468' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#72b966' fontname='Times New Roman' fontsize='20'>Airport Correlation to Infection</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44270' id='3' is-fixed='true' name='Airport Per State to Positive Cases' show-title='false' w='49526' x='468' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88325' id='5' is-fixed='true' name='# of Airports within each State' show-title='false' w='49538' x='49994' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6794' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='8383' x='89880' y='5732'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44055' id='95' is-fixed='true' is-scaled='1' param='C:/Users/wwwye/Downloads/Airport Travel.jpg' type-v2='bitmap' w='20781' x='468' y='55096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44055' id='47' type-v2='text' w='28745' x='21249' y='55096'>
                  <formatted-text>
                    <run>Æ&#10;&#10;&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontsize='12'>Airports and ports generally act as the gateway for the spread of foreign diseases. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#ffffff' fontsize='12'>In the chart above, the trend line analysis displayed shows a </run>
                    <run fontcolor='#e15759' fontsize='12'>R-squared value</run>
                    <run fontcolor='#ffffff' fontsize='12'>Æ </run>
                    <run fontcolor='#ffffff'>(significance of model)</run>
                    <run fontcolor='#ffffff' fontsize='12'> of </run>
                    <run fontcolor='#e15759' fontsize='12'>.5</run>
                    <run fontcolor='#ffffff' fontsize='12'> and a </run>
                    <run fontcolor='#f1ce63' fontsize='12'>P-value</run>
                    <run fontcolor='#ffffff'> (probability of null hypothesis)</run>
                    <run fontcolor='#ffffff' fontsize='12'> of </run>
                    <run fontcolor='#f1ce63' fontsize='12'>.0001</run>
                    <run fontcolor='#ffffff' fontsize='12'>. Therefore, it can be assume that airports do play a considerable part in the spread of COVID-19.</run>
                    <run>Æ&#10;&#10;&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='16985' id='96' is-fixed='true' name='Alaska # Airports' show-title='false' w='9581' x='51138' y='72399'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='114' h='16985' id='97' is-fixed='true' name='Hawaii # Airports' show-title='false' w='9596' x='60152' y='72399'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7DE4F89-6482-48AC-BCEB-DD05B978FDE1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 8'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='32767' id='3' param='horz' type-v2='layout-flow' w='19602' x='79930' y='66384'>
            <zone h='32767' id='7' param='horz' type-v2='layout-flow' w='19602' x='79930' y='66384' />
          </zone>
          <zone h='98302' id='5' param='vert' type-v2='layout-flow' w='59860' x='468' y='849' />
          <zone h='32767' id='6' param='horz' type-v2='layout-flow' w='19602' x='79930' y='849'>
            <zone h='32767' id='13' type-v2='dashboard-object' w='19602' x='79930' y='849'>
              <button action='tabdoc:goto-sheet window-id=&quot;{351FF79C-F4B4-45B1-9734-FDEE4AA23B08}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/wwwye/Downloads/map.png</image-path>
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='border-color' value='#000000' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='32768' id='8' param='horz' type-v2='layout-flow' w='19602' x='79930' y='33616'>
            <zone h='32768' id='16' type-v2='dashboard-object' w='19602' x='79930' y='33616'>
              <button action='tabdoc:goto-sheet window-id=&quot;{7DB3422D-D731-4527-80EB-2C3B4120B23D}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/wwwye/Downloads/public-speaker.png</image-path>
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='border-color' value='#000000' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='32732' id='10' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='19602' x='60328' y='33652'>
            <zone fixed-size='257' h='32696' id='12' is-fixed='true' type-v2='dashboard-object' w='19602' x='60328' y='33652'>
              <button action='tabdoc:goto-sheet window-id=&quot;{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/wwwye/Downloads/commercial-airplane.png</image-path>
                  <tooltip-text>Airport Relevance</tooltip-text>
                  <format attr='background-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='border-color' value='#000000' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='32767' id='11' layout-strategy-id='distribute-evenly' param='vert' type-v2='layout-flow' w='19602' x='60328' y='66384'>
            <zone fixed-size='256' h='32803' id='27' is-fixed='true' type-v2='dashboard-object' w='19602' x='60328' y='66348'>
              <button action='tabdoc:goto-sheet window-id=&quot;{1841F085-1DEC-47FD-BD4C-FDF7E33E9D65}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/wwwye/Downloads/Book.png</image-path>
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='border-color' value='#000000' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='32803' id='14' param='horz' type-v2='layout-flow' w='19602' x='60328' y='849'>
            <zone h='32803' id='15' type-v2='dashboard-object' w='19602' x='60328' y='849'>
              <button action='tabdoc:goto-sheet window-id=&quot;{240C9E87-1CC3-4E69-A5B2-CCBBBB493FEA}&quot;'>
                <button-visual-state>
                  <image-path>C:/Users/wwwye/Downloads/Graph.png</image-path>
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='border-color' value='#000000' />
                </button-visual-state>
              </button>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='31' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='30' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone h='32803' id='15' type-v2='dashboard-object' w='19602' x='60328' y='849'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{240C9E87-1CC3-4E69-A5B2-CCBBBB493FEA}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/wwwye/Downloads/Graph.png</image-path>
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32767' id='13' type-v2='dashboard-object' w='19602' x='79930' y='849'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{351FF79C-F4B4-45B1-9734-FDEE4AA23B08}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/wwwye/Downloads/map.png</image-path>
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='32768' id='16' type-v2='dashboard-object' w='19602' x='79930' y='33616'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{7DB3422D-D731-4527-80EB-2C3B4120B23D}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/wwwye/Downloads/public-speaker.png</image-path>
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='257' h='32696' id='12' type-v2='dashboard-object' w='19602' x='60328' y='33652'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/wwwye/Downloads/commercial-airplane.png</image-path>
                      <tooltip-text>Airport Relevance</tooltip-text>
                      <format attr='background-color' value='#ffffff' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='256' h='32803' id='27' type-v2='dashboard-object' w='19602' x='60328' y='66348'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{1841F085-1DEC-47FD-BD4C-FDF7E33E9D65}&quot;'>
                    <button-visual-state>
                      <image-path>C:/Users/wwwye/Downloads/Book.png</image-path>
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='1' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8FFE2CCB-FF95-43D9-8910-8DB7CD4414C0}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death Report (old)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='9' param='horz' type-v2='layout-flow' w='99064' x='468' y='50000'>
            <zone h='49151' id='7' type-v2='layout-basic' w='89702' x='468' y='50000' />
            <zone fixed-size='160' h='49151' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='50000'>
              <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49151' id='54' param='horz' type-v2='layout-flow' w='99064' x='468' y='849' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100000' id='3' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='713' h='100000' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='41720' x='0' y='0'>
            <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
              <formatted-text>
                <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7643' id='17' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
              <layout-cache fixed-size-h='64' fixed-size-w='574' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='87899' id='12' name='Total Monthly Death Toll' w='41720' x='0' y='12101'>
              <layout-cache cell-count-w='11' minheight='164' non-cell-size-w='59' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='100000' id='5' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
            <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='142' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='141' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='5' is-fixed='true' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='7643' id='17' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
                  <layout-cache fixed-size-h='64' fixed-size-w='574' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87899' id='12' is-fixed='true' name='Total Monthly Death Toll' w='41720' x='0' y='12101'>
                  <layout-cache cell-count-w='11' minheight='164' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E79A1F6F-B349-4E2D-9E5C-1053EADE6491}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death/Infection Report'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98302' id='17' param='horz' type-v2='layout-flow' w='99064' x='468' y='849'>
            <zone h='98302' id='15' type-v2='layout-basic' w='99064' x='468' y='849'>
              <zone h='83008' id='5' param='vert' type-v2='layout-flow' w='60468' x='39064' y='16143'>
                <zone h='83008' id='10' name='US Death Map Chart' show-title='false' w='60468' x='39064' y='16143'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='10981' id='7' name='Death/Infected/Population Metrics' show-title='false' w='99064' x='468' y='5162'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='margin-top' value='5' />
                  <format attr='margin-bottom' value='5' />
                  <format attr='padding' value='10' />
                  <format attr='padding-top' value='5' />
                  <format attr='padding-bottom' value='5' />
                </zone-style>
              </zone>
              <zone h='83008' id='8' param='vert' type-v2='layout-flow' w='38596' x='468' y='16143'>
                <zone h='41504' id='9' name='Total Monthly Death Toll' w='38596' x='468' y='16143'>
                  <layout-cache cell-count-w='11' minheight='164' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
                <zone h='41504' id='11' name='Total Monthly Infected Toll' w='38596' x='468' y='57647'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='4313' id='14' type-v2='text' w='99064' x='468' y='849'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Times New Roman' fontsize='18'>2020 COVID Death and Infection Report</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19108' id='13' name='Hawaii Death Map Chart' show-title='false' w='8777' x='51902' y='75159'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone h='19141' id='12' name='Alaska Death Map Chart' show-title='false' w='8785' x='42020' y='75000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone friendly-name='Search ' h='9245' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11859' x='85578' y='19401' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='100' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='99' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='4313' id='14' type-v2='text' w='99064' x='468' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Times New Roman' fontsize='18'>2020 COVID Death and Infection Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='10981' id='7' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='99064' x='468' y='5162'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41504' id='9' is-fixed='true' name='Total Monthly Death Toll' w='38596' x='468' y='16143'>
                  <layout-cache cell-count-w='11' minheight='164' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Search ' h='9245' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11859' x='85578' y='19401'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83008' id='10' is-fixed='true' name='US Death Map Chart' show-title='false' w='60468' x='39064' y='16143'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41504' id='11' is-fixed='true' name='Total Monthly Infected Toll' w='38596' x='468' y='57647'>
                  <layout-cache minheight='164' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='19141' id='12' is-fixed='true' name='Alaska Death Map Chart' show-title='false' w='8785' x='42020' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='151' h='19108' id='13' is-fixed='true' name='Hawaii Death Map Chart' show-title='false' w='8777' x='51902' y='75159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F000C517-4B7D-4B1A-A5FC-BCAFB59B1AA2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Disease Mobility Time Series Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
      </datasources>
      <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
        <column datatype='string' name='[State Abbreviations (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[State Abbreviations]' new-bin='true'>
            <bin default-name='false' value='&quot;States that have a Democratic Governor&quot;'>
              <value>&quot;CA&quot;</value>
              <value>&quot;CO&quot;</value>
              <value>&quot;CT&quot;</value>
              <value>&quot;DE&quot;</value>
              <value>&quot;HI&quot;</value>
              <value>&quot;IL&quot;</value>
              <value>&quot;KS&quot;</value>
              <value>&quot;KY&quot;</value>
              <value>&quot;LA&quot;</value>
              <value>&quot;ME&quot;</value>
              <value>&quot;MI&quot;</value>
              <value>&quot;MN&quot;</value>
              <value>&quot;MT&quot;</value>
              <value>&quot;NC&quot;</value>
              <value>&quot;NJ&quot;</value>
              <value>&quot;NM&quot;</value>
              <value>&quot;NV&quot;</value>
              <value>&quot;NY&quot;</value>
              <value>&quot;OR&quot;</value>
              <value>&quot;PA&quot;</value>
              <value>&quot;RI&quot;</value>
              <value>&quot;VA&quot;</value>
              <value>&quot;WA&quot;</value>
              <value>&quot;WI&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;States that have a Republican Governor&quot;'>
              <value>&quot;AK&quot;</value>
              <value>&quot;AL&quot;</value>
              <value>&quot;AR&quot;</value>
              <value>&quot;AZ&quot;</value>
              <value>&quot;FL&quot;</value>
              <value>&quot;GA&quot;</value>
              <value>&quot;IA&quot;</value>
              <value>&quot;ID&quot;</value>
              <value>&quot;IN&quot;</value>
              <value>&quot;MA&quot;</value>
              <value>&quot;MD&quot;</value>
              <value>&quot;MO&quot;</value>
              <value>&quot;MS&quot;</value>
              <value>&quot;ND&quot;</value>
              <value>&quot;NE&quot;</value>
              <value>&quot;NH&quot;</value>
              <value>&quot;OH&quot;</value>
              <value>&quot;OK&quot;</value>
              <value>&quot;SC&quot;</value>
              <value>&quot;SD&quot;</value>
              <value>&quot;TN&quot;</value>
              <value>&quot;TX&quot;</value>
              <value>&quot;UT&quot;</value>
              <value>&quot;VT&quot;</value>
              <value>&quot;WV&quot;</value>
              <value>&quot;WY&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89385' id='7' param='vert' type-v2='layout-flow' w='83607' x='468' y='9766'>
            <zone h='89385' id='10' name='US Mainland Time Series Map Chart' show-title='false' w='83607' x='468' y='9766'>
              <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='0' />
              </zone-style>
            </zone>
          </zone>
          <zone h='8917' id='24' param='horz' type-v2='layout-flow' w='83607' x='468' y='849'>
            <zone fixed-size='1437' forceUpdate='true' h='8917' id='25' is-fixed='true' type-v2='text' w='83607' x='468' y='849'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Times New Roman' fontsize='20'>Covid-19 Disease Mobility Through 2020</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
                <format attr='padding-right' value='10' />
                <format attr='padding-left' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='98302' id='27' is-fixed='true' type-v2='layout-basic' w='15457' x='84075' y='849'>
            <zone h='8917' id='26' param='vert' type-v2='layout-flow' w='15457' x='84075' y='849'>
              <zone fixed-size='61' h='8599' id='11' is-fixed='true' name='US Mainland Time Series Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type-v2='color' w='15457' x='84075' y='849'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
            </zone>
            <zone h='89385' id='28' param='vert' type-v2='layout-flow' w='15457' x='84075' y='9766'>
              <zone h='13163' id='12' name='US Mainland Time Series Map Chart' synchronized='1' type-v2='currpage' w='15457' x='84075' y='9766'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                </zone-style>
              </zone>
              <zone h='7006' id='29' mode='dropdown' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]' show-morefewerbutton='true' type-v2='filter' values='relevant' w='15457' x='84075' y='22929'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                </zone-style>
              </zone>
              <zone h='69216' id='23' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type-v2='filter' values='relevant' w='15457' x='84075' y='29935'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='background-color' value='#898989' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='93' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='92' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone fixed-size='1437' forceUpdate='true' h='8917' id='25' type-v2='text' w='83607' x='468' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Times New Roman' fontsize='20'>Covid-19 Disease Mobility Through 2020</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7006' id='29' mode='dropdown' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]' show-morefewerbutton='true' type-v2='filter' values='relevant' w='15457' x='84075' y='22929'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='69216' id='23' mode='checkdropdown' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type-v2='filter' values='relevant' w='15457' x='84075' y='29935'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#898989' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89385' id='10' is-fixed='true' name='US Mainland Time Series Map Chart' show-title='false' w='83607' x='468' y='9766'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='61' h='8599' id='11' name='US Mainland Time Series Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type-v2='color' w='15457' x='84075' y='849'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13163' id='12' name='US Mainland Time Series Map Chart' synchronized='1' type-v2='currpage' w='15457' x='84075' y='9766'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{202F6B54-0778-43F1-B68A-AC1CA3BF13CE}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Economic Factors Dashboard'>
      <style />
      <size maxheight='868' maxwidth='1324' minheight='868' minwidth='1324' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98156' id='3' param='vert' type-v2='layout-flow' w='49396' x='50000' y='922' />
          <zone h='49078' id='5' param='horz' type-v2='layout-flow' w='49396' x='604' y='50000' />
          <zone h='49078' id='6' param='horz' type-v2='layout-flow' w='49396' x='604' y='922'>
            <zone h='49078' id='7' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
              <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='101' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='100' param='vert' type-v2='layout-flow' w='98792' x='604' y='922'>
                <zone fixed-size='280' h='49078' id='7' is-fixed='true' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
                  <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BA36339-ACCC-451D-9381-DE03DB3DB634}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='General Statistics for Covid-19 Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98302' id='19' param='horz' type-v2='layout-flow' w='49532' x='468' y='849'>
            <zone h='98302' id='17' type-v2='layout-basic' w='49532' x='468' y='849'>
              <zone h='49151' id='6' param='vert' type-v2='layout-flow' w='49532' x='468' y='50000'>
                <zone h='49151' id='9' name='Age Group 2020-2024' show-title='false' w='49532' x='468' y='50000'>
                  <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='80' />
                    <format attr='margin-top' value='0' />
                    <format attr='padding' value='20' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='49151' id='7' param='vert' type-v2='layout-flow' w='49532' x='468' y='849'>
                <zone h='49151' id='8' name='Race/Ethnicity 2020-2024' show-title='false' w='49532' x='468' y='849'>
                  <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='80' />
                    <format attr='margin-bottom' value='0' />
                    <format attr='margin-left' value='80' />
                    <format attr='padding' value='20' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone h='49151' id='41' layout-strategy-id='distribute-evenly' param='horz' type-v2='layout-flow' w='49532' x='50000' y='849'>
            <zone h='49151' id='42' name='Other Medical Conditions that Contributed to Death Along With Covid' w='49503' x='50029' y='849'>
              <layout-cache fixed-size-h='326' fixed-size-w='412' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='80' />
                <format attr='margin-top' value='50' />
                <format attr='margin-right' value='50' />
                <format attr='margin-bottom' value='0' />
                <format attr='margin-left' value='50' />
                <format attr='padding' value='20' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='44' param='horz' type-v2='layout-flow' w='49532' x='50000' y='50000'>
            <zone forceUpdate='true' h='49151' id='45' type-v2='text' w='49532' x='50000' y='50000'>
              <formatted-text>
                <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16'>Majority of deaths due to Covid-19 have these </run>
                <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16' underline='true'>contributable factors</run>
                <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16'>:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>   - Non-Hispanic White</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>   - 50+ years old</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>   - Have influenza/pneumonia, residual conditions, or respiratory failure</run>
                <run>Æ&#10;&#10;</run>
                <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16'>Also, people who are at risk of severe outcomes from Covid-19 includes: </run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>  - Immunocompromised conditions</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>  - Pregnant or recently pregnant</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>  - Children who are at risk of Multisystem Inflammatory Syndrome</run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>(According to cdc.gov)</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='48' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone fixed-size='273' h='49151' id='8' is-fixed='true' name='Race/Ethnicity 2020-2024' show-title='false' w='49532' x='468' y='849'>
                  <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49151' id='42' is-fixed='true' name='Other Medical Conditions that Contributed to Death Along With Covid' w='49503' x='50029' y='849'>
                  <layout-cache fixed-size-h='326' fixed-size-w='412' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='273' h='49151' id='9' is-fixed='true' name='Age Group 2020-2024' show-title='false' w='49532' x='468' y='50000'>
                  <layout-cache minheight='161' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='49151' id='45' type-v2='text' w='49532' x='50000' y='50000'>
                  <formatted-text>
                    <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16'>Majority of deaths due to Covid-19 have these </run>
                    <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16' underline='true'>contributable factors</run>
                    <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16'>:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>   - Non-Hispanic White</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>   - 50+ years old</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>   - Have influenza/pneumonia, residual conditions, or respiratory failure</run>
                    <run>Æ&#10;&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontname='Times New Roman' fontsize='16'>Also, people who are at risk of severe outcomes from Covid-19 includes: </run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>  - Immunocompromised conditions</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>  - Pregnant or recently pregnant</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>  - Children who are at risk of Multisystem Inflammatory Syndrome</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>(According to cdc.gov)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{414B499E-E114-4AC6-8825-47BA42788086}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Political Stats Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
      </datasources>
      <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
        <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
        </column>
        <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
            <bin default-name='true' value='&quot;Democratic&quot;'>
              <value>&quot;Democratic&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
        <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='6' param='horz' type-v2='layout-flow' w='58568' x='31716' y='849'>
            <zone h='49151' id='9' name='Death Rate by State and Political Affiliations' w='58568' x='31716' y='849'>
              <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='74' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#ffffff' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='13' param='vert' type-v2='layout-flow' w='9248' x='90284' y='50000'>
            <zone h='7006' id='19' name='Pop Density by State and Political Afflications' pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9248' x='90284' y='50000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9448' id='18' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9248' x='90284' y='57006'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7325' id='17' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9248' x='90284' y='66454'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='25372' id='21' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9248' x='90284' y='73779'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='14' param='vert' type-v2='layout-flow' w='9248' x='90284' y='849'>
            <zone h='7006' id='12' name='Death Rate by State and Political Affiliations' pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9248' x='90284' y='849'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9448' id='11' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9248' x='90284' y='7855'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7325' id='10' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9248' x='90284' y='17303'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='25372' id='20' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9248' x='90284' y='24628'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='15' param='horz' type-v2='layout-flow' w='58568' x='31716' y='50000'>
            <zone h='49151' id='16' name='Pop Density by State and Political Afflications' w='58568' x='31716' y='50000'>
              <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='69' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#ffffff' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='36413' id='8' param='vert' type-v2='layout-flow' w='31248' x='468' y='19850'>
            <zone fixed-size='264' forceUpdate='true' h='30148' id='45' is-fixed='true' type-v2='text' w='31248' x='468' y='19850'>
              <formatted-text>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>The </run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12' underline='true'>general consensus</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> on Covid-19 policy by political affiliation:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>-  </run>
                <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>Democratic</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states tend to have more restrictive policies in place.</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>-  </run>
                <run fontcolor='#e15759' fontname='Times New Roman' fontsize='12'>Republican</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states generally had less restrictive policies in place. </run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>Other </run>
                <run fontcolor='#b6992d' fontname='Times New Roman' fontsize='12'>points of focus</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> include:</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- </run>
                <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>Democratic</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states on average, have higher population density.</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- </run>
                <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>Democratic</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states on average, have higher death rates.</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- Higher population density </run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12' underline='true'>generally</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> translates to higher death rates. </run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- Death Rate % Average = 1.74% ( </run>
                <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>1.92% </run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>: </run>
                <run fontcolor='#e15759' fontname='Times New Roman' fontsize='12'>1.57% </run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>)</run>
                <run>Æ&#10;</run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- Population Density Average = 204 ( </run>
                <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>260 </run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>: </run>
                <run fontcolor='#e15759' fontname='Times New Roman' fontsize='12'>152 </run>
                <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>)</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='19001' id='22' param='horz' type-v2='layout-flow' w='31248' x='468' y='849'>
            <zone forceUpdate='true' h='19001' id='24' type-v2='text' w='31248' x='468' y='849'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='20'>Covid-19 Stats Through the Lenses of Political Affiliations (2020)</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone forceUpdate='' h='42888' id='46' param='https://wallethub.com/edu/states-coronavirus-restrictions/73818' type-v2='web' w='31248' x='468' y='56263'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='10' />
              <format attr='padding' value='10' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='3291' id='23' type-v2='text' w='12036' x='75150' y='2760'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759'>Death Rate % = Death/Infected</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5626' id='49' type-v2='text' w='28862' x='1677' y='91401'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>This website ranks US states based on 13 key metrics to determine how restrictive each state&apos;s Covid-19 policy was .</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#333333' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='91' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='90' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='19001' id='24' type-v2='text' w='31248' x='468' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='20'>Covid-19 Stats Through the Lenses of Political Affiliations (2020)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9448' id='11' mode='checkdropdown' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9248' x='90284' y='7855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7325' id='10' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9248' x='90284' y='17303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25372' id='20' mode='checkdropdown' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9248' x='90284' y='24628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49151' id='9' is-fixed='true' name='Death Rate by State and Political Affiliations' w='58568' x='31716' y='849'>
                  <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='74' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7006' id='12' name='Death Rate by State and Political Affiliations' pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9248' x='90284' y='849'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3291' id='23' type-v2='text' w='12036' x='75150' y='2760'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#e15759'>Death Rate % = Death/Infected</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' forceUpdate='true' h='30148' id='45' type-v2='text' w='31248' x='468' y='19850'>
                  <formatted-text>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>The </run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12' underline='true'>general consensus</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> on Covid-19 policy by political affiliation:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>-  </run>
                    <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>Democratic</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states tend to have more restrictive policies in place.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>-  </run>
                    <run fontcolor='#e15759' fontname='Times New Roman' fontsize='12'>Republican</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states generally had less restrictive policies in place. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>Other </run>
                    <run fontcolor='#b6992d' fontname='Times New Roman' fontsize='12'>points of focus</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> include:</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- </run>
                    <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>Democratic</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states on average, have higher population density.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- </run>
                    <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>Democratic</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> states on average, have higher death rates.</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- Higher population density </run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12' underline='true'>generally</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'> translates to higher death rates. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- Death Rate % Average = 1.74% ( </run>
                    <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>1.92% </run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>: </run>
                    <run fontcolor='#e15759' fontname='Times New Roman' fontsize='12'>1.57% </run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>)</run>
                    <run>Æ&#10;</run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>- Population Density Average = 204 ( </run>
                    <run fontcolor='#4e79a7' fontname='Times New Roman' fontsize='12'>260 </run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>: </run>
                    <run fontcolor='#e15759' fontname='Times New Roman' fontsize='12'>152 </run>
                    <run fontcolor='#ffffff' fontname='Times New Roman' fontsize='12'>)</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9448' id='18' mode='checkdropdown' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9248' x='90284' y='57006'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7325' id='17' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9248' x='90284' y='66454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25372' id='21' mode='checkdropdown' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9248' x='90284' y='73779'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49151' id='16' is-fixed='true' name='Pop Density by State and Political Afflications' w='58568' x='31716' y='50000'>
                  <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='69' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7006' id='19' name='Pop Density by State and Political Afflications' pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9248' x='90284' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' forceUpdate='' h='42888' id='46' is-fixed='true' param='https://wallethub.com/edu/states-coronavirus-restrictions/73818' type-v2='web' w='31248' x='468' y='56263'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5626' id='49' type-v2='text' w='28862' x='1677' y='91401'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>This website ranks US states based on 13 key metrics to determine how restrictive each state&apos;s Covid-19 policy was .</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#333333' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9B3293BD-CCD1-4950-8755-A08CFE04DD5B}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
        </style-rule>
        <style-rule element='story-point-caption'>
          <format attr='background-color' value='#ffffff' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98302' id='1' param='vert' removable='false' type-v2='layout-flow' w='99064' x='468' y='849'>
            <zone fixed-size='100' h='6688' id='4' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99064' x='468' y='849' />
            <zone h='91614' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99064' x='468' y='7537'>
              <flipboard active-id='8' nav-type='dot' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='Death/Infection Report' id='8' />
                  <story-point caption='Covid-19 Disease Mobility Map' captured-sheet='Disease Mobility Time Series Dashboard' id='6'>
                    <capturedDeltas>
                      <worksheet name='US Mainland Time Series Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]'>
                          <groupfilter function='level-members' level='[State Abbreviations (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Airport Correlation To Infection' captured-sheet='Airports Dashboard' id='1'>
                    <capturedDeltas>
                      <worksheet name='# of Airports within each State'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>144</value>
                                <value>36317</value>
                                <value>&quot;Wyoming&quot;</value>
                                <value>&quot;POLYGON((-111.049 44.4741,-111.0553 44.6663,-111.0552 45.0013,-110.785 45.003,-110.7053 44.9923,-110.4029 44.9938,-110.3627 45.0006,-110.1995 44.9962,-110.1101 45.0039,-109.7987 45.0022,-109.1034 45.0059,-109.083 44.9996,-108.6213 45.0003,-108.2493 44.9995,-107.9118 45.0013,-107.2828 45.0012,-107.0849 44.9966,-106.2636 44.9938,-105.9282 44.9936,-105.9134 45.0009,-105.0384 45.0003,-104.0577 44.9974,-104.0545 44.1804,-104.0555 43.8535,-104.0548 43.4778,-104.053 43.0006,-104.0523 41.3932,-104.0532 41.0014,-104.6255 41.0014,-104.9434 40.9982,-105.2771 40.9982,-105.7304 40.9969,-106.1906 40.9976,-106.4396 41.002,-107.3178 41.0029,-107.9184 41.002,-108.2507 41.0001,-109.0501 41.0007,-110.0007 40.9974,-110.2379 40.9954,-111.0467 40.998,-111.0458 41.5798,-111.0467 42.0016,-111.0467 42.5131,-111.0435 42.7195,-111.0446 43.3157,-111.047 43.9835,-111.0491 44.0201,-111.049 44.4741))&quot;</value>
                                <value>43.0</value>
                                <value>-107.5</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>398</value>
                                <value>175793</value>
                                <value>&quot;Washington&quot;</value>
                                <value>&quot;MULTIPOLYGON(((-122.4036 47.6705,-122.3731 47.7292,-122.3945 47.7779,-122.3398 47.8469,-122.3071 47.9491,-122.2535 47.9585,-122.2345 48.0294,-122.3432 48.0976,-122.3951 48.2293,-122.4513 48.2316,-122.479 48.1761,-122.3795 48.0874,-122.5111 48.1325,-122.531 48.2498,-122.4044 48.25,-122.3636 48.2976,-122.4718 48.3519,-122.5031 48.4348,-122.5322 48.3752,-122.5772 48.4466,-122.6572 48.4083,-122.6784 48.4944,-122.6065 48.5212,-122.5119 48.4583,-122.4754 48.462,-122.4925 48.5594,-122.4257 48.6004,-122.4882 48.6454,-122.5193 48.7127,-122.4903 48.7424,-122.6007 48.773,-122.6513 48.7145,-122.6474 48.774,-122.706 48.799,-122.7227 48.8528,-122.7868 48.8858,-122.7471 48.9164,-122.8182 48.9391,-122.758 49.0022,-122.1168 49.0022,-121.9959 49,-121.7602 49.0011,-120.8521 49.0001,-118.1968 49.0002,-117.4295 49.0006,-117.0324 49.0001,-117.0324 48.8466,-117.0351 48.3852,-117.0422 47.9774,-117.0399 47.366,-117.0398 46.4254,-117.0517 46.3438,-116.9879 46.298,-116.956 46.226,-116.963 46.1997,-116.924 46.1709,-116.9347 46.1367,-116.9789 46.08,-116.9427 46.061,-116.916 45.9954,-117.3377 45.9987,-117.4801 45.9979,-117.9969 46.0008,-118.7679 46.001,-118.9871 45.9999,-119.0086 45.9793,-119.1261 45.9329,-119.1955 45.9279,-119.2572 45.9399,-119.3644 45.9216,-119.4319 45.9183,-119.4878 45.9063,-119.5716 45.9255,-119.6234 45.9056,-119.6699 45.8569,-119.9657 45.8244,-120.0702 45.7852,-120.1705 45.762,-120.2108 45.726,-120.2838 45.7212,-120.404 45.6993,-120.5059 45.7,-120.5595 45.7383,-120.5912 45.7465,-120.6536 45.7372,-120.6894 45.7158,-120.8557 45.6715,-120.9159 45.6413,-120.944 45.6564,-121.0849 45.6479,-121.132 45.6098,-121.1838 45.6064,-121.2158 45.6712,-121.3378 45.7049,-121.4017 45.6929,-121.4411 45.6973,-121.5224 45.7247,-121.6312 45.7047,-121.7351 45.694,-121.8113 45.7068,-121.8672 45.6933,-121.9222 45.6491,-122.0037 45.6159,-122.0444 45.6095,-122.1017 45.5835,-122.1838 45.5776,-122.249 45.5477,-122.3315 45.5482,-122.3803 45.5759,-122.4387 45.5636,-122.475 45.5784,-122.6077 45.6081,-122.675 45.618,-122.7638 45.6571,-122.7745 45.6804,-122.7626 45.7282,-122.7695 45.7806,-122.7956 45.81,-122.7855 45.8505,-122.8115 45.9127,-122.814 45.961,-122.8781 46.0313,-122.9041 46.0837,-122.9627 46.1048,-123.0042 46.1338,-123.1159 46.1853,-123.1664 46.189,-123.2131 46.1725,-123.2838 46.151,-123.4989 46.2738,-123.6126 46.2601,-123.7279 46.2896,-123.8755 46.2398,-124.0206 46.3157,-124.0807 46.2672,-124.0561 46.4546,-124.0679 46.635,-124.0236 46.5826,-124.0143 46.3786,-123.9538 46.3781,-123.9052 46.4297,-123.9435 46.4744,-123.8961 46.5498,-123.9589 46.6331,-123.8399 46.7129,-123.8931 46.7502,-123.9682 46.7069,-124.0881 46.7343,-124.0983 46.7942,-124.136 46.9053,-124.0493 46.8913,-123.8231 46.9577,-123.9983 46.9809,-124.0263 47.0302,-124.1514 47.0224,-124.1275 46.9451,-124.175 46.9278,-124.1714 47.0439,-124.2382 47.2887,-124.3208 47.3549,-124.3545 47.5336,-124.4314 47.7469,-124.498 47.8226,-124.6108 47.8807,-124.6752 47.9654,-124.6869 48.095,-124.7335 48.1617,-124.6652 48.3378,-124.7317 48.3814,-124.6367 48.388,-124.3809 48.2847,-124.2513 48.2646,-124.1018 48.2169,-124.0507 48.1778,-123.865 48.1545,-123.6724 48.1627,-123.3759 48.1142,-123.2486 48.1157,-123.1635 48.166,-123.0675 48.1212,-123.0405 48.0808,-122.9179 48.0958,-122.9274 48.0651,-122.8332 48.0104,-122.8912 48.0776,-122.8389 48.1357,-122.7553 48.1443,-122.8004 48.0855,-122.674 47.9172,-122.6105 47.8871,-122.6915 47.8687,-122.7436 47.8091,-122.7725 47.6909,-122.8323 47.6914,-122.7865 47.8043,-122.8752 47.7453,-122.9033 47.6458,-122.9874 47.6061,-123.1124 47.457,-123.1594 47.354,-123.0193 47.3546,-122.9133 47.3886,-122.843 47.4364,-123.0129 47.3791,-123.1194 47.3902,-123.0233 47.5203,-122.9168 47.622,-122.752 47.6672,-122.7482 47.719,-122.6075 47.8569,-122.5658 47.8207,-122.596 47.9201,-122.526 47.9124,-122.4885 47.7436,-122.5609 47.7503,-122.5496 47.721,-122.4797 47.5846,-122.5769 47.6008,-122.5861 47.6401,-122.6074 47.5468,-122.5549 47.5905,-122.5479 47.5245,-122.4948 47.5105,-122.5508 47.4032,-122.5761 47.2571,-122.6735 47.2876,-122.6271 47.4035,-122.6344 47.4035,-122.7282 47.3385,-122.7664 47.2698,-122.7205 47.2211,-122.7685 47.1671,-122.8309 47.2457,-122.7885 47.2998,-122.8021 47.359,-122.819 47.4064,-122.846 47.3114,-122.9274 47.2806,-122.9674 47.1686,-123.0749 47.0974,-122.9188 47.1734,-123.0179 47.0665,-122.9492 47.0993,-122.9044 47.045,-122.9071 47.1405,-122.8149 47.1781,-122.7865 47.1275,-122.6969 47.0975,-122.5905 47.1769,-122.5292 47.2926,-122.4363 47.262,-122.4176 47.3208,-122.3248 47.3485,-122.3284 47.4006,-122.3831 47.4505,-122.3613 47.4814,-122.4211 47.5764,-122.35 47.5576,-122.339 47.6039,-122.4169 47.6421,-122.4036 47.6705),(-122.3722 47.6635,-122.2783 47.6428,-122.2619 47.5214,-122.2186 47.5003,-122.1884 47.5782,-122.2778 47.6482,-122.3722 47.6635)),((-122.5955 48.3973,-122.5984 48.358,-122.5062 48.3093,-122.6606 48.2803,-122.7215 48.2143,-122.6284 48.2225,-122.5679 48.1486,-122.5368 48.0411,-122.5245 48.0971,-122.3763 48.0343,-122.3507 47.9532,-122.3764 47.9072,-122.4315 47.9141,-122.4821 47.9919,-122.607 48.0316,-122.6116 48.1546,-122.6796 48.1551,-122.7699 48.2276,-122.6737 48.3547,-122.6641 48.4022,-122.5955 48.3973)),((-122.4499 47.4797,-122.4273 47.4021,-122.3736 47.3887,-122.528 47.3449,-122.4768 47.5101,-122.4499 47.4797)),((-122.5811 48.5498,-122.6493 48.5288,-122.652 48.5851,-122.5811 48.5498)),((-122.6939 48.7352,-122.6091 48.6404,-122.719 48.7171,-122.6939 48.7352)),((-122.904 48.7146,-122.7421 48.6607,-122.8306 48.6004,-122.9492 48.598,-123.0099 48.6551,-122.904 48.7146)),((-122.8551 47.2943,-122.8421 47.2077,-122.8747 47.1642,-122.9256 47.2365,-122.8551 47.2943)),((-122.8838 48.5727,-122.8462 48.4461,-122.9455 48.4654,-122.8838 48.5727)),((-123.1453 48.6236,-123.0058 48.5521,-123.0056 48.4696,-123.1321 48.498,-123.1763 48.5621,-123.1453 48.6236)),((-123.9722 46.4856,-123.9401 46.4115,-123.9923 46.4478,-123.9722 46.4856)))&quot;</value>
                                <value>47.5</value>
                                <value>-120.5</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>391</value>
                                <value>84496</value>
                                <value>&quot;Oregon&quot;</value>
                                <value>&quot;POLYGON((-124.3356 43.3611,-124.2869 43.4363,-124.2184 43.6103,-124.1586 43.8635,-124.1224 44.1051,-124.1159 44.2763,-124.0834 44.4293,-124.0578 44.7378,-124.0654 44.8303,-124.0251 44.9282,-124.0051 45.045,-123.9719 45.1634,-123.9734 45.3548,-123.9318 45.4026,-123.9785 45.4858,-123.886 45.4864,-123.9051 45.5556,-123.9564 45.5699,-123.9164 45.7067,-123.9693 45.7832,-123.9676 45.9078,-123.9924 45.9471,-123.9375 45.9773,-123.9337 46.0736,-124.0107 46.2247,-123.9008 46.1661,-123.7643 46.2029,-123.7243 46.1701,-123.5872 46.188,-123.5007 46.2351,-123.3637 46.1431,-123.2291 46.1404,-123.2131 46.1725,-123.1664 46.189,-123.1159 46.1853,-123.0042 46.1338,-122.9627 46.1048,-122.9041 46.0837,-122.8781 46.0313,-122.814 45.961,-122.8115 45.9127,-122.7855 45.8505,-122.7956 45.81,-122.7695 45.7806,-122.7626 45.7282,-122.7745 45.6804,-122.7638 45.6571,-122.675 45.618,-122.6077 45.6081,-122.475 45.5784,-122.4387 45.5636,-122.3803 45.5759,-122.3315 45.5482,-122.249 45.5477,-122.1838 45.5776,-122.1017 45.5835,-122.0444 45.6095,-122.0037 45.6159,-121.9222 45.6491,-121.8672 45.6933,-121.8113 45.7068,-121.7351 45.694,-121.6312 45.7047,-121.5224 45.7247,-121.4411 45.6973,-121.4017 45.6929,-121.3378 45.7049,-121.2158 45.6712,-121.1838 45.6064,-121.132 45.6098,-121.0849 45.6479,-120.944 45.6564,-120.9159 45.6413,-120.8557 45.6715,-120.6894 45.7158,-120.6536 45.7372,-120.5912 45.7465,-120.5595 45.7383,-120.5059 45.7,-120.404 45.6993,-120.2838 45.7212,-120.2108 45.726,-120.1705 45.762,-120.0702 45.7852,-119.9657 45.8244,-119.6699 45.8569,-119.6234 45.9056,-119.5716 45.9255,-119.4878 45.9063,-119.4319 45.9183,-119.3644 45.9216,-119.2572 45.9399,-119.1955 45.9279,-119.1261 45.9329,-119.0086 45.9793,-118.9871 45.9999,-118.7679 46.001,-117.9969 46.0008,-117.4801 45.9979,-117.3377 45.9987,-116.916 45.9954,-116.876 45.9548,-116.8665 45.917,-116.7946 45.856,-116.7827 45.8254,-116.6972 45.8201,-116.6653 45.782,-116.5942 45.7791,-116.5357 45.7342,-116.5351 45.6913,-116.4879 45.6498,-116.4636 45.6028,-116.5242 45.5486,-116.556 45.507,-116.5548 45.4629,-116.5889 45.4414,-116.6738 45.3215,-116.687 45.2679,-116.7037 45.2399,-116.7288 45.1444,-116.7748 45.1055,-116.7839 45.079,-116.8479 45.0226,-116.8576 44.9826,-116.832 44.933,-116.8653 44.8706,-116.8997 44.8406,-116.9347 44.7839,-117.0442 44.7451,-117.0959 44.6647,-117.1442 44.5456,-117.2241 44.4837,-117.2151 44.4272,-117.2427 44.3965,-117.2351 44.3739,-117.1898 44.335,-117.22 44.3014,-117.1703 44.2589,-117.1042 44.2799,-117.0461 44.2307,-117.0319 44.2486,-116.9754 44.2424,-116.9673 44.1946,-116.9036 44.18,-116.8978 44.1525,-116.9337 44.1,-116.976 44.0829,-116.9732 44.0494,-116.9434 44.0356,-116.9358 43.9909,-116.9773 43.9582,-116.9615 43.9184,-116.9838 43.88,-117.026 43.8408,-117.0266 43.6809,-117.0262 42.0003,-118.1972 41.997,-118.501 41.9954,-118.6964 41.9918,-119.3242 41.9939,-119.8867 41.9975,-119.9992 41.9945,-120.3101 41.9932,-120.8795 41.9938,-121.4476 41.9975,-122.1627 42.0078,-122.3782 42.0095,-122.6347 42.0049,-123.0453 42.0031,-123.146 42.0092,-123.3476 41.9991,-123.5179 42.0009,-123.657 41.9951,-123.8215 41.9955,-124.2116 41.9985,-124.3501 42.1002,-124.3778 42.2188,-124.4326 42.3236,-124.4346 42.4411,-124.39 42.5748,-124.4158 42.6611,-124.5135 42.7417,-124.556 42.8386,-124.4795 42.955,-124.4427 43.0438,-124.3762 43.3384,-124.3356 43.3611),(-124.3311 43.3636,-124.2226 43.4243,-124.2306 43.456,-124.3311 43.3636))&quot;</value>
                                <value>44.0</value>
                                <value>-120.5</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>296</value>
                                <value>67875</value>
                                <value>&quot;Montana&quot;</value>
                                <value>&quot;POLYGON((-116.0492 49,-114.0693 49.0001,-110.005 49.0001,-104.0487 49,-104.0479 48.634,-104.0441 47.9961,-104.0414 47.8627,-104.0454 47.3301,-104.0454 45.9453,-104.044 45.882,-104.04 45.2129,-104.0401 45,-104.0577 44.9974,-105.0384 45.0003,-105.9134 45.0009,-105.9282 44.9936,-106.2636 44.9938,-107.0849 44.9966,-107.2828 45.0012,-107.9118 45.0013,-108.2493 44.9995,-108.6213 45.0003,-109.083 44.9996,-109.1034 45.0059,-109.7987 45.0022,-110.1101 45.0039,-110.1995 44.9962,-110.3627 45.0006,-110.4029 44.9938,-110.7053 44.9923,-110.785 45.003,-111.0552 45.0013,-111.0553 44.6663,-111.049 44.4741,-111.1314 44.4999,-111.1318 44.5326,-111.1807 44.5542,-111.1808 44.569,-111.228 44.5767,-111.2425 44.6124,-111.2192 44.6226,-111.2948 44.7001,-111.3777 44.7517,-111.3939 44.7526,-111.4143 44.7107,-111.4729 44.7092,-111.4688 44.6793,-111.5258 44.6049,-111.5091 44.5632,-111.4693 44.5576,-111.468 44.5399,-111.5153 44.537,-111.548 44.5574,-111.6173 44.5508,-111.7042 44.5602,-111.8215 44.5093,-111.8661 44.5628,-111.9479 44.5568,-111.9788 44.5359,-112.0327 44.5466,-112.0963 44.5232,-112.1365 44.5399,-112.1839 44.5331,-112.2217 44.5435,-112.2289 44.564,-112.2862 44.5685,-112.3192 44.5391,-112.3518 44.5379,-112.3664 44.4674,-112.3869 44.4476,-112.4732 44.48,-112.5003 44.4631,-112.5494 44.4847,-112.6645 44.4865,-112.7179 44.5043,-112.7813 44.4849,-112.8366 44.4261,-112.8138 44.3769,-112.8449 44.3582,-112.9012 44.3987,-112.9511 44.4167,-113.0035 44.4508,-113.0271 44.4957,-113.007 44.5259,-113.0455 44.5439,-113.0398 44.5668,-113.0878 44.5992,-113.0568 44.6187,-113.0678 44.6795,-113.0981 44.6975,-113.1021 44.729,-113.1348 44.7528,-113.1311 44.7724,-113.1794 44.7871,-113.2472 44.823,-113.3405 44.7847,-113.3772 44.8349,-113.4222 44.8378,-113.4551 44.8654,-113.4944 44.9486,-113.4438 44.9599,-113.452 45.0592,-113.4849 45.0634,-113.5201 45.093,-113.5133 45.1152,-113.5563 45.1152,-113.5897 45.1554,-113.5925 45.1847,-113.6369 45.213,-113.6928 45.2643,-113.6789 45.2761,-113.7387 45.3297,-113.7344 45.3924,-113.7741 45.4067,-113.7618 45.4236,-113.7842 45.4549,-113.76 45.4801,-113.766 45.5206,-113.8346 45.5207,-113.8067 45.6021,-113.8622 45.6238,-113.9047 45.6246,-113.938 45.6957,-113.9881 45.7059,-114.0193 45.6929,-114.0138 45.6582,-114.0676 45.6277,-114.0821 45.597,-114.1223 45.5843,-114.1353 45.5575,-114.1928 45.5366,-114.2481 45.5459,-114.249 45.5206,-114.2792 45.4806,-114.345 45.4599,-114.3656 45.4904,-114.4239 45.5096,-114.464 45.5455,-114.5261 45.5708,-114.5648 45.5577,-114.5381 45.6068,-114.561 45.6399,-114.4996 45.669,-114.5152 45.685,-114.5043 45.7217,-114.5479 45.7436,-114.5662 45.7739,-114.5115 45.8296,-114.5093 45.8455,-114.4377 45.8626,-114.4096 45.8515,-114.3882 45.8823,-114.4312 45.9357,-114.4023 45.9578,-114.4116 45.9775,-114.4877 46.0044,-114.467 46.0655,-114.4743 46.1132,-114.5213 46.1253,-114.5148 46.1677,-114.4452 46.1679,-114.4432 46.2029,-114.4667 46.2723,-114.4273 46.2836,-114.4138 46.3359,-114.4225 46.3871,-114.3685 46.4379,-114.4008 46.4785,-114.4003 46.5021,-114.3421 46.5197,-114.3442 46.5901,-114.3226 46.6108,-114.3329 46.6608,-114.358 46.6689,-114.4244 46.6606,-114.4669 46.6317,-114.5418 46.65,-114.5947 46.6335,-114.6357 46.6594,-114.6209 46.7074,-114.675 46.7369,-114.699 46.7402,-114.7511 46.6974,-114.7887 46.714,-114.7651 46.7581,-114.8307 46.7836,-114.8653 46.8143,-114.8961 46.8027,-114.9286 46.8548,-114.927 46.9196,-114.9593 46.9329,-115.0013 46.9719,-115.0479 46.9695,-115.0714 47.0262,-115.1071 47.049,-115.1427 47.1018,-115.1856 47.1298,-115.2437 47.1503,-115.2619 47.1817,-115.3 47.1876,-115.2922 47.2105,-115.3407 47.2628,-115.4093 47.264,-115.4266 47.2802,-115.5293 47.2993,-115.5511 47.3499,-115.6172 47.3825,-115.6438 47.3775,-115.6622 47.4026,-115.7497 47.4404,-115.6929 47.4572,-115.6464 47.4567,-115.6287 47.4796,-115.6867 47.4856,-115.7105 47.5231,-115.7553 47.5514,-115.6876 47.5947,-115.6943 47.6235,-115.7363 47.6548,-115.7226 47.6952,-115.7835 47.7293,-115.8039 47.7585,-115.8246 47.7522,-115.847 47.7843,-115.8523 47.828,-115.9014 47.8431,-115.9832 47.9166,-116.0308 47.9734,-116.0488 47.9772,-116.0498 48.2151,-116.0492 49))&quot;</value>
                                <value>47.0</value>
                                <value>-109.75</value>
                              </tuple>
                            </tuple-reference>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>335</value>
                                <value>109705</value>
                                <value>&quot;Idaho&quot;</value>
                                <value>&quot;POLYGON((-116.916 45.9954,-116.9427 46.061,-116.9789 46.08,-116.9347 46.1367,-116.924 46.1709,-116.963 46.1997,-116.956 46.226,-116.9879 46.298,-117.0517 46.3438,-117.0398 46.4254,-117.0399 47.366,-117.0422 47.9774,-117.0351 48.3852,-117.0324 48.8466,-117.0324 49.0001,-116.0492 49,-116.0498 48.2151,-116.0488 47.9772,-116.0308 47.9734,-115.9832 47.9166,-115.9014 47.8431,-115.8523 47.828,-115.847 47.7843,-115.8246 47.7522,-115.8039 47.7585,-115.7835 47.7293,-115.7226 47.6952,-115.7363 47.6548,-115.6943 47.6235,-115.6876 47.5947,-115.7553 47.5514,-115.7105 47.5231,-115.6867 47.4856,-115.6287 47.4796,-115.6464 47.4567,-115.6929 47.4572,-115.7497 47.4404,-115.6622 47.4026,-115.6438 47.3775,-115.6172 47.3825,-115.5511 47.3499,-115.5293 47.2993,-115.4266 47.2802,-115.4093 47.264,-115.3407 47.2628,-115.2922 47.2105,-115.3 47.1876,-115.2619 47.1817,-115.2437 47.1503,-115.1856 47.1298,-115.1427 47.1018,-115.1071 47.049,-115.0714 47.0262,-115.0479 46.9695,-115.0013 46.9719,-114.9593 46.9329,-114.927 46.9196,-114.9286 46.8548,-114.8961 46.8027,-114.8653 46.8143,-114.8307 46.7836,-114.7651 46.7581,-114.7887 46.714,-114.7511 46.6974,-114.699 46.7402,-114.675 46.7369,-114.6209 46.7074,-114.6357 46.6594,-114.5947 46.6335,-114.5418 46.65,-114.4669 46.6317,-114.4244 46.6606,-114.358 46.6689,-114.3329 46.6608,-114.3226 46.6108,-114.3442 46.5901,-114.3421 46.5197,-114.4003 46.5021,-114.4008 46.4785,-114.3685 46.4379,-114.4225 46.3871,-114.4138 46.3359,-114.4273 46.2836,-114.4667 46.2723,-114.4432 46.2029,-114.4452 46.1679,-114.5148 46.1677,-114.5213 46.1253,-114.4743 46.1132,-114.467 46.0655,-114.4877 46.0044,-114.4116 45.9775,-114.4023 45.9578,-114.4312 45.9357,-114.3882 45.8823,-114.4096 45.8515,-114.4377 45.8626,-114.5093 45.8455,-114.5115 45.8296,-114.5662 45.7739,-114.5479 45.7436,-114.5043 45.7217,-114.5152 45.685,-114.4996 45.669,-114.561 45.6399,-114.5381 45.6068,-114.5648 45.5577,-114.5261 45.5708,-114.464 45.5455,-114.4239 45.5096,-114.3656 45.4904,-114.345 45.4599,-114.2792 45.4806,-114.249 45.5206,-114.2481 45.5459,-114.1928 45.5366,-114.1353 45.5575,-114.1223 45.5843,-114.0821 45.597,-114.0676 45.6277,-114.0138 45.6582,-114.0193 45.6929,-113.9881 45.7059,-113.938 45.6957,-113.9047 45.6246,-113.8622 45.6238,-113.8067 45.6021,-113.8346 45.5207,-113.766 45.5206,-113.76 45.4801,-113.7842 45.4549,-113.7618 45.4236,-113.7741 45.4067,-113.7344 45.3924,-113.7387 45.3297,-113.6789 45.2761,-113.6928 45.2643,-113.6369 45.213,-113.5925 45.1847,-113.5897 45.1554,-113.5563 45.1152,-113.5133 45.1152,-113.5201 45.093,-113.4849 45.0634,-113.452 45.0592,-113.4438 44.9599,-113.4944 44.9486,-113.4551 44.8654,-113.4222 44.8378,-113.3772 44.8349,-113.3405 44.7847,-113.2472 44.823,-113.1794 44.7871,-113.1311 44.7724,-113.1348 44.7528,-113.1021 44.729,-113.0981 44.6975,-113.0678 44.6795,-113.0568 44.6187,-113.0878 44.5992,-113.0398 44.5668,-113.0455 44.5439,-113.007 44.5259,-113.0271 44.4957,-113.0035 44.4508,-112.9511 44.4167,-112.9012 44.3987,-112.8449 44.3582,-112.8138 44.3769,-112.8366 44.4261,-112.7813 44.4849,-112.7179 44.5043,-112.6645 44.4865,-112.5494 44.4847,-112.5003 44.4631,-112.4732 44.48,-112.3869 44.4476,-112.3664 44.4674,-112.3518 44.5379,-112.3192 44.5391,-112.2862 44.5685,-112.2289 44.564,-112.2217 44.5435,-112.1839 44.5331,-112.1365 44.5399,-112.0963 44.5232,-112.0327 44.5466,-111.9788 44.5359,-111.9479 44.5568,-111.8661 44.5628,-111.8215 44.5093,-111.7042 44.5602,-111.6173 44.5508,-111.548 44.5574,-111.5153 44.537,-111.468 44.5399,-111.4693 44.5576,-111.5091 44.5632,-111.5258 44.6049,-111.4688 44.6793,-111.4729 44.7092,-111.4143 44.7107,-111.3939 44.7526,-111.3777 44.7517,-111.2948 44.7001,-111.2192 44.6226,-111.2425 44.6124,-111.228 44.5767,-111.1808 44.569,-111.1807 44.5542,-111.1318 44.5326,-111.1314 44.4999,-111.049 44.4741,-111.0491 44.0201,-111.047 43.9835,-111.0446 43.3157,-111.0435 42.7195,-111.0467 42.5131,-111.0467 42.0016,-111.5073 41.9995,-112.1095 41.9976,-112.193 42.0012,-113.0008 41.9983,-113.8933 41.9881,-114.0417 41.9937,-114.5983 41.9945,-114.8072 42.0019,-115.0383 41.996,-116.3328 41.9973,-116.3685 41.9963,-117.0183 41.9994,-117.0262 42.0003,-117.0266 43.6809,-117.026 43.8408,-116.9838 43.88,-116.9615 43.9184,-116.9773 43.9582,-116.9358 43.9909,-116.9434 44.0356,-116.9732 44.0494,-116.976 44.0829,-116.9337 44.1,-116.8978 44.1525,-116.9036 44.18,-116.9673 44.1946,-116.9754 44.2424,-117.0319 44.2486,-117.0461 44.2307,-117.1042 44.2799,-117.1703 44.2589,-117.22 44.3014,-117.1898 44.335,-117.2351 44.3739,-117.2427 44.3965,-117.2151 44.4272,-117.2241 44.4837,-117.1442 44.5456,-117.0959 44.6647,-117.0442 44.7451,-116.9347 44.7839,-116.8997 44.8406,-116.8653 44.8706,-116.832 44.933,-116.8576 44.9826,-116.8479 45.0226,-116.7839 45.079,-116.7748 45.1055,-116.7288 45.1444,-116.7037 45.2399,-116.687 45.2679,-116.6738 45.3215,-116.5889 45.4414,-116.5548 45.4629,-116.556 45.507,-116.5242 45.5486,-116.4636 45.6028,-116.4879 45.6498,-116.5351 45.6913,-116.5357 45.7342,-116.5942 45.7791,-116.6653 45.782,-116.6972 45.8201,-116.7827 45.8254,-116.7946 45.856,-116.8665 45.917,-116.876 45.9548,-116.916 45.9954))&quot;</value>
                                <value>44.073900000000002</value>
                                <value>-114.542</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                      <worksheet name='Airport Per State to Positive Cases'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US Airports' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Political Affiliations' captured-sheet='Political Stats Dashboard' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{44A79766-1119-4F82-BDBE-4F7EF583F60D}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Airport Per State to Positive Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D3038513-041A-4A1D-B829-DFD6ABD9DBC5}' />
    </window>
    <window class='worksheet' name='Political Affiliations and its Impact on Infection/Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{506A2545-3A3B-43E5-A3F8-91C2E5B1D6C2}' />
    </window>
    <window class='worksheet' name='Death Rate by State and Political Affiliations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='filter' />
            <card pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3D732364-654D-4095-9ACF-A45179BBCC58}' />
    </window>
    <window class='worksheet' name='Pop Density by State and Political Afflications'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{93506E30-213B-49E6-92DA-554099C5D6E5}' />
    </window>
    <window class='worksheet' name='Deaths Per Gini Coefficient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1497C8DF-4485-47A1-AA4F-B81F1243F789}' />
    </window>
    <window class='worksheet' name='Death by GDP and Pop Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DE7FE10-ED05-48F7-AB1C-F5518CE74174}' />
    </window>
    <window class='worksheet' name='US Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F4F0610E-E3BA-4CED-8831-372498677E79}' />
    </window>
    <window class='worksheet' name='Hawaii Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{17F2DF32-A3B6-47BF-AF5F-7A82DE31B089}' />
    </window>
    <window class='worksheet' name='Alaska Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3833707E-FCB3-4321-9E81-C6D6EA98CF37}' />
    </window>
    <window class='worksheet' name='US Mainland Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{12CF59F3-AC08-40CF-9003-A07700D363FA}' />
    </window>
    <window class='worksheet' name='Alaska Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{D1430A37-D62C-4A13-B3C9-CF0D90F41B37}' />
    </window>
    <window class='worksheet' name='Hawaii Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-08-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
      </viewpoint>
      <simple-id uuid='{07815A29-B9E9-4B76-980C-B331F625311B}' />
    </window>
    <window class='worksheet' name='Total Monthly Death Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE1E20EF-C2A3-4A7E-8A6A-D4F0BB32F6BE}' />
    </window>
    <window class='worksheet' name='Total Monthly Infected Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{C1838E95-C246-4D38-BC48-D3BD1F44DBC1}' />
    </window>
    <window class='worksheet' name='Death/Infected/Population Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F7DE0-FBC3-4B2E-BCD6-7D9A25099CCC}' />
    </window>
    <window class='worksheet' name='# of Airports within each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A3B6861-1B43-442B-94A1-1C04A970296E}' />
    </window>
    <window class='worksheet' name='Alaska # Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EC2E9EBC-9B5A-4BBE-9F9D-6BE9F0CB3D1F}' />
    </window>
    <window class='worksheet' name='Hawaii # Airports'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:region_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87B9EBC0-5886-42DC-AFBF-ECEA512CB8E0}' />
    </window>
    <window class='worksheet' name='Infected to Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B6706D4C-D15D-4D55-B522-88BD3A0680D6}' />
    </window>
    <window class='worksheet' name='Other Medical Conditions that Contributed to Death Along With Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C985839-02A7-436E-9C51-FBB5B690285C}' />
    </window>
    <window class='worksheet' name='Race/Ethnicity 2020-2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1lto3re04ogau519m0v7512vjmbt].[none:Age Group:nk]</field>
            <field>[federated.1mvdm73058cqbd19rb6ke12ej7ct].[:Measure Names]</field>
            <field>[federated.1mvdm73058cqbd19rb6ke12ej7ct].[none:F1:nk]</field>
            <field>[federated.1mvdm73058cqbd19rb6ke12ej7ct].[none:F2:nk]</field>
            <field>[federated.1mvdm73058cqbd19rb6ke12ej7ct].[none:Race/Ethnicity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C623FAFE-7B1B-46CC-B4C6-4F2681B17775}' />
    </window>
    <window class='worksheet' name='Age Group 2020-2024'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1lto3re04ogau519m0v7512vjmbt].[sum:Percentage of deaths:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1lto3re04ogau519m0v7512vjmbt].[none:Age Group:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{830D6859-DC22-4538-AFB1-DF71C3E4A442}' />
    </window>
    <window class='dashboard' name='Death Report (old)'>
      <viewpoints>
        <viewpoint name='Death/Infected/Population Metrics' />
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1777F54D-B7AB-4DF6-AEB7-EE97E4599829}' />
    </window>
    <window class='dashboard' name='Economic Factors Dashboard'>
      <viewpoints>
        <viewpoint name='Deaths Per Gini Coefficient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{CD636EFA-5D86-4B7F-ADC4-F57687B237EA}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{67A894E8-08FB-49BB-9AEA-DD5295CA1228}' />
    </window>
    <window class='dashboard' name='Death/Infection Report'>
      <viewpoints>
        <viewpoint name='Alaska Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death/Infected/Population Metrics'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Hawaii Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Infected Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{240C9E87-1CC3-4E69-A5B2-CCBBBB493FEA}' />
    </window>
    <window class='dashboard' name='Airports Dashboard'>
      <viewpoints>
        <viewpoint name='# of Airports within each State'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Airport Per State to Positive Cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Alaska # Airports'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Hawaii # Airports'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}' />
    </window>
    <window class='dashboard' name='Disease Mobility Time Series Dashboard'>
      <viewpoints>
        <viewpoint name='US Mainland Time Series Map Chart'>
          <current-page>
            <multibucket>
              <bucket>#2020-12-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{351FF79C-F4B4-45B1-9734-FDEE4AA23B08}' />
    </window>
    <window class='dashboard' name='Political Stats Dashboard'>
      <viewpoints>
        <viewpoint name='Death Rate by State and Political Affiliations'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pop Density by State and Political Afflications'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='24' />
      <simple-id uuid='{7DB3422D-D731-4527-80EB-2C3B4120B23D}' />
    </window>
    <window class='dashboard' name='General Statistics for Covid-19 Dashboard'>
      <viewpoints>
        <viewpoint name='Age Group 2020-2024'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Other Medical Conditions that Contributed to Death Along With Covid'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Race/Ethnicity 2020-2024'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{1841F085-1DEC-47FD-BD4C-FDF7E33E9D65}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 8'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{6DEACB5F-3515-488D-A313-FE7C89BE2EBA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# of Airports within each State' width='192'>
      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
      P5YnHvlzG7Q6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Age Group 2020-2024' width='192'>
      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
      0CQAItD+D74uGkm5yzWQAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Airport Per State to Positive Cases' width='192'>
      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
      C4y0+ZPtywAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Airports Dashboard' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Alaska # Airports' width='192'>
      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
      PwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Alaska Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Death Rate by State and Political Affiliations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death Report (old)' width='192'>
      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
      /yW2GsFv/IP1AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death by GDP and Pop Density' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='67' name='Death/Infected/Population Metrics' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death/Infection Report' width='192'>
      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
      U6h54/x/KwX5rgQmuaoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Deaths Per Gini Coefficient' width='192'>
      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
      c/9/0d4uBrrZRJMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Disease Mobility Time Series Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Economic Factors Dashboard' width='192'>
      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
      /mZPWevvhYp3tiKxBIG6GqaXgkSia2U9+OHeLRcpqKyEy1/fVGujxqgRS6xTV2MguHCX1USu
      bPUdLjeFXIZUKkWhUGBsoA+jrb5s9Z319VjMZnIFUPOZstc319pxO20kkkkKqkqozL+fvVDx
      ADhtNcxEk/g8jThtFtQyd7hsdXVo+SxWV/nr5zNJFhcXUQsFosk0jc2t1JrLt6RjLRphcSmC
      va6ObDZL14mTpGIrZas/PzdHTlHQ8hlyqqHs9dejSyyupnHYbeSzWRrK/PvZC3INIHRtTzfF
      C3HQSACErkkAKkRJRvjtF5cIr6Y2/flafI25+dl9apV4kFwDVEhm6Raj6QArI5/x+5kQL587
      x8idWTQlTaDRitPTysr8JOff+TH19t3XU4nKqL7FG1XCaKljYXCQzkOdGJyt5NbXaWn2YDEq
      eLyNGNFQ7DUsxdapt7v2u7m6Jd8AQtfkGkDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA
      6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOia
      BEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA
      6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOia
      BEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA
      6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOia
      BEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6JoEQOiaBEDomgRA6Nq/A3Pcq+TOwUbU
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='General Statistics for Covid-19 Dashboard' width='192'>
      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
      /x9T1XRJZc0aYwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hawaii # Airports' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hawaii Death Map Chart' width='192'>
      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
      JgLIZpxtKvMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Infected to Hospital' width='192'>
      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
      U9qBrwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Other Medical Conditions that Contributed to Death Along With Covid' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Political Affiliations and its Impact on Infection/Death Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Political Stats Dashboard' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Pop Density by State and Political Afflications' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Race/Ethnicity 2020-2024' width='192'>
      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
      /R9s4OXGbrV8jgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      W2ihmEKnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Death Toll' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Infected Toll' width='192'>
      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
      Ot1qj2vTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Mainland Time Series Map Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO1dW48syVGOrKquvswcn8XrtWxjL/aDLQuJN+CFF/4ESIjfwd/iByAEvCBk
      WUKyhAS+IIPMehfj5djsTHfdk4c5X3ZUdN6q+joz+UmjmemuysqqintERqof/OAHerfbUULC
      NTAMA9V1TVprIiLzm2O1WlGe50REVNc1dV1nHUspZf7GOPwzDnxf7HY7enh4mH8HJ0Tf90RE
      5mYTXgfquqa6rkkpRcMwHHz/5s0byrKMiPaEOwwD7XY7QzNKKcrznIZhGI2B8/i5nMmK09/O
      NPR9T7vdbjTRPM9puVxecVYJl0RZltQ0zeiz5XJJfd9TWZYj2oBEr+vanJtlGS0WC6qqyqpB
      fNrlqgzQ9z1VVUVE48l1XWdu6rmi6zrK89ypghP2UEpRURTUti0RPRH/arXynrPZbIjoiW66
      rqPdbkfDMBwQudbaSvjA1RgAkt9FIHVdU1EUz5KAtNYEv6osSyrLkojc9mjCXgvc3d1RUYTJ
      UmtNTdNQ13VOnwDH+XA1Bui6zhBElmWGU5VSlGUZlWX5bAkGWo3oidG11lRVFa1Wq5E6T9gj
      z3N6+/Zt1LFaa3p8fDT2/zG4GgNkWUZFURhTp+s60lo/O6kPpiXaRzS4RFqv11RVlXlZwzAY
      VQ8TLzHFNCilTkYjV2MAad/HqL1bQ9u21DQN5XluGFi+mIeHB/PZdrs1Ea62banrugMnLyEO
      m82GdrudESY2ICp0kz7Ac8cwDEbS47ckfqXUyAnTWtNisaCiKGi5XNJ2uyWtNfV9/yJDvzaB
      cCoopUx+gAsVmNCwLoj2wRaYoxyJAWZgGAbabre0XC6paRprAsaFqqqMyUdE1DTNSPv1fU9K
      KfMyV6vVszIJOWDuhSI6c5Fl2Shc7rIi8jynu7s74zvcVB7guaDve8qyjPq+N0RvU78gVhl+
      40QM4sZnfd+PTCjuUzw8PFBZlpTn+bMzE/M8p6ZpqGkaEwk7F/Cs+743ybAsy8zzzPPcaFqu
      CZ7XE70StNZU17XJMHIit0F+L4naJtFtjh3+b9uW2rYdqXW8XPzmc+XnXgIyhwP/DkKjbVta
      LBYHc8L3x8wV4dC2bb1RIZijAJ6jkwHAJVLqbLfbkY31Ghy4tm0P7NlYJrB9PuWF82P7vh+9
      ZLyfoiiMTwIm5fmHcwH3XlUVdV03YlAiGhElZwyifSnDer0+yv+p69paQiPfl9bazA2fK6Xs
      DIC4NSbOIxWo10AqmogOYvZa65G0PPeLOCf6vj8wdSQRT2GCU0rmLMtoGAZqmuZA8uOz5XJ5
      Nmd0GAaqqsqYG6ADrTW1bTvSdn3fjxgAx3GGAc3YiNUFpZTVuZUoisIcx69pZQA4ZpA4OIFL
      Qi4BYdO66jCUUs+2rMEXZrskuNRy1bZIUwum02azMcnGOeBRKrzPuq5N/U6WZbRer400hp0N
      8waRLjAKF7Bt2xoBycsZtNZUlmUwCLBYLIyJ6oMrUld0XTeaLBI5y+WSFouFUS9a6wMHQg7o
      kniIeUMbPCeziZscPjt9LmKJUj5nTig2KcrPgakBIoFDHfsekOsoy9JEUoj2hWhZllHTNCaC
      Bckvn01VVbRer0fzlFWe/JymaYJVAVmWTTahuEYs+r43DwbcipvgDwk3lGXZqIwhBlxbVFVl
      HprNMbpFhOz2U9yDTZrL72yFXr7vJSAFEcmCZnDNB/VMEH7SxwDhw1qwVW3yv+Gw8vcO4oXJ
      Ju8bppRPExRFQYvFIkpby2sUtsn6KuiKovAWH4UA5oJ5dctxbhmuPAd8zjL/WybU5N+hcfj7
      xPFVVVFZlgeBDvh43IbnxLVcLinLMiM4Ub0bc59d15mxlFJGm0izmp8DCwJJr8ViccBsm83m
      YC0AGIhbMXxcIocPAMcCqXuugk5BDLhZTPAWnWQ4v5diztB1eGDB9l3I4bZ9D428XC5HNVgg
      JHkONAG0w9QQps2PCR3Px8e82ra1Ro+UUtZcCSwW21ydYVDuvQ/DMFqSdiqA0dq2nWXLnQqy
      oO3SxO9DjHkzJa9gM7W488rNXikx4ex+8cUXI3N5CmKiZ7I62KYZwIBFUZh1F1VVGXOIM5tv
      jsFEGA8z4fccwvCdB5V4jZVgcOrw0PHAboH4ifYmztRQq0168+OldoBJiqDIarWyJv+qqop+
      Rj6/JoYRXN9xYcVNNVgUTdMYDXGS9QAyATMHIY4mIuNkXdIvwJxCD+rSGdapIUtuVrq+i507
      pKnNf0CkJzQeTDaZDefn+Z677ztJRzxQA0H9+PhI9/f3JlHI/VYEc5RyJMLOAZtzbZMQPEN4
      bmLTWh849C7J6ZNmx1xf/s+fU4zZE/LN5mo0l7lkm7dEzPz5sbE+gWuefE78Ptu2NcsreW0Q
      0T4MexEGcIXvADk5JDaWy+XZmSAmFu6af4wJEPtiY4+V85X/n/p5zdV83OSV5k4sI9k0hcu8
      k8dwp14pdVAmEawFisUUYuCQD0HeIEqOEaY7ByPwqAHi0DZfRdquUyMfc6WbvPaU746B1ERz
      tMepNA4+9wkqaQqt1+uo44lOxAC2m42RaL4Hhc+bpqFhGM66Rhh2Il/OGDItfOA2aizx+5iO
      /++ThK5xj9FEiM5xpjhVkECOA8EXOob/L8O1eZ5HZ7i11sczgOtBxDqVvnFws1j5H+LsY1GW
      pTMGPgWxklOGG12wEVyMZrARvs2c4MfZnNXVamVqd2KfCw9lSsQ8GymAeDTK50gjMoTwqLwu
      fiPUHcUAtgcUMn1ipF+s+cSd481mczZNoNTTCixeuyTnO0UC+kJ4ts9c1wudH3NdDpvfwIlD
      Fs4hC+tKxE0FH9vG2Py+uX+IMLzPJEJggye/+NJIWSsVJU5tkZtYtXoqVYmbkB3ETg2lxuXb
      c+x33z1PYSDcd0ja26T21LFQn2WTziAc+TnOkcQoQ6A2+LSD6zOe5Y2NMGGdhFxxh3uJ0gC2
      hxZjivikHSYYC5yH1UXnriiVla8hApNznWp7T0WsCcTnM3Vcl/2NZ8/9JV+NmLQGfPOxZaF5
      WLUoCmcoXd63hE2Dz2aA2HN8Em/quJwIuSY6lVPGgQfNF2lMnfM55hWag43oj42xA3gWMsEl
      tYPUIsdqUWnjw7afYpK5hNHZ8wBzCMBna/P/sYACEgjVgqcgOt5uA3UyvDTgGgjdly/fMoUI
      tdYHDiQaAuB7Vy6HM4OPCUKOMGcwhMK5KYPvubPN/YZY3NSiePlgXVIXaxX4S0K5hlLKLLo4
      FVCrhKI925xiMFci264lVb/v/6mA5gsRsNQ2eB82oSXn5Hq33MlF2TUfR14bx8rAjOv+5fVu
      ggH4zdi+k3YoPue94QFUc86tLLXZlKvVytif0DB8zWtMFGsubATiOi4mvBhzPUncvutycAHh
      Gtv2NwcqOaXDi7XHADQ08kR4LzyKFcopEFFcFOjckJIfjpYraoGHYVtHoNRTee/UtbyIFux2
      O9putwcPDw+Zr5SLdXLnhDJxHFfvoWv5IkCYR+xYofFDjuwUn08pRcvlktbrtemcx4HcDJ83
      1jDwY/i8eNRrs9k415zchAYAsOYU0QSftMOOIrbviPYL+EOLbXANLP9zRXuQYUSlIdFxTW1D
      ZsqxWiVkNsWMERrfZb74Fu4AWHvAnze0NzencOxmszkwueTqL2hk+CI41xbRA26CAZRSpnU4
      JDF3hG3HE4UdKWgBFxNgbSxXn/w7udUOX/jN5xFzf1MQMjvm+h+xvoHLiYVEjXUyffcBQt3t
      drRYLMyYIFTbSkQ5H6nlQQ/cIUdfUNecb4IBiPbSFCvOuKrmNx8bCdFajzZXk0A/HahW+YD5
      w8X3/Df//ByhTomYa0wN1YYEjOtzHvOfk2sgotECe/6ssaKLCxobeHJOOr+cCeAr3jQDYJJY
      Eca7EfBjfEwA8wTSAw/Ada3Q0k7+YOWCi6kE75KAIYQc4GMZzxY1CREdjlFKjRJhLpPLN54k
      Skh1Vx0PerKiI4Vt3vx/zkSSFlD3dRMMQPTk2N7d3Y0eJtqIo8ETkV9qlWVpXpJrQQ0epAzz
      uexZ+Z3vhcaaGBj/WMjAgWtuPqfX9l2I8aSU5Z/55hiC7AEEf5Dv/sijf2jH4pu79AvwfdM0
      T4509OzODHSOg9dOtH+o8Pixp5gt5o0OaKEOyljYjbyBz2mbQtCnOD/WsXWFi2PGiIHt+cq4
      O/fT+LV9EaDQs+B1Rbz9JhxmMASYTzrB8h5gUUDj8yK/iy+JDKlDm63Oj+cZXmka4XeseaLU
      PnOMvjFTfY2Ya8RGeXwEbZuLT0LHnGeLoMjxeDxdHgcG4MfK60nTwxWbxxiw/eW1UPe12+3M
      nPi2U75wNAgf4yObj/Gjy6GPASbNQ1MckPjHOG64xpy52ZxdOT/+ve1ziXM4xS4J72My13xd
      DGczH3AuP4c7mHIMyTB4N6HW5ehGAWmPZrp5no/WIvBwp+2aEnxvNl5ODZw9EQZpC/tORnem
      tEdcr9cmdswlP3yFqYSH9oy2aI58ULgP32J9mzaKibLEvkx+jblw2fx8JZXtWcjjbfdmOwcE
      y398/gikNo7jO24C3B+c8jy4EAENnVwDyPIATgx939N6vTZ23NQdT7IsM2UJXdeZtQGxJQk2
      2F62rDZETJqfc0rb/phzYuZiM01s0tt2js0fkH1AQ+PYIjUxZp2rBy38jznAeFjmeVIGsE2K
      h8tgxx/bKh1jcDsULRanEttisTCJGJQ5AAij8UiHLYJkm98UxLzMqdEn1/E+R9p2rC28iP/x
      3HhM3zUHrhHnSO1YxN7fMAxPFsWk0SMu7ntRaKLqquOZivV6bVTlsW0VbSubbL0necv4Y3GM
      ORPyR0IBAR+hyECAy+/iezuj9CR0vbmaes7cfSaS1pq22+1lw6BK7asoeb39Mbj0XgNTG8JK
      xBC9zzxxEftUTIl2+a7p83NsPsEx5qrt+nOAvIJSkWuCTw0ZhntuCDEud/RPATiSPHdhA3dO
      fQ79KcDHR8SGCyNfaPcUc3ExUWhsBGNM2fXRM5mJczEAHDQQzLGmls32PcYECoUjXZ/zGDqv
      f7eNewmAAPl7hCnkO4f/dh0TEwnDcdzUwf8hqwArCYmuWAt0LgbgiQ7Eq4/ZXxfRK4x1TIfs
      EPASZW27/BtMyOfAfZhLMgOuBaa05QemjBVD/IjKyc7Q+N4XpODFj0RXYgAeTjv1ngBYDqnU
      Uw/53W5nkiuxOQdupyLC5Frr6kMoXyA/4+l9qeJdyURuW8trXkJD2KJEMQ7o1LnZ8jK8hbst
      7B6aM9EFm+Pa4r51XZ+8CzQfa7VamVBprBZo29bUjaxWq6iwZ2ge0oyS4FlKwBaBciXXQtr0
      EhoB5pBPinPi5DQRej6S+JE1lu/UxQS+8S9SCsFvQKr1c5kTGB8PKfYaKLnVWpviuznzc4UO
      JVzEHxNZ4ce7rnkp4JnBTOSmET4Hpvg+LkAz49qS8eTf8hh0mrhYWxRXEZQvq3jK6085PhTi
      OwVg8ki1DuKX0stF3DGREN89hKSvDS4pzyNQtlDuFK04FUopsxWsbJ3Cr6OUMjVGF1kPAO4v
      y3LUZwcdBI5xUE8JW5Z3zsvxESnXhvwFIbcgr8uZxJZ/kOPye+HHaG3fSNpFJCH4JLXUAq5C
      OBcD2JjH9Rn/jfcH4kZiTgozMADR+w3ho+74CNicT77i51oqWwJ7S8XMJ2Tn8uP45zzCw49x
      Jdf4Cww5dzJ6hM/w0suyNCbdOWFjxBgNP6XLBsaWjjQYDetH+EIqAGHx7Xb7ZCJHXU1cGBf0
      HVMUhTcGfyuED4D4JdHGmBiAzQ512aac6KdEi1zwMRe+t5khUrsc60fgfGys7fKF5OcIM9s0
      RuxzABN0XWfoD+PB2kBzA4w5SwP4boqHHJ8LXPXtNvhMBmm3y79d4/jse1s0w3ZNnwaxMbVc
      UUVkD6XK70N+EcYm2jcYts3R5tvILhz4PlRoJ8es69r4Utj8BEAnEGAyA7guDMK/1l6/x4BL
      hBjYwpF4UZC6odCk9ANcK+IwlpyfbOUCCScjStKM4uAE7zJTZFAgBjiHNxOzMY7PrONZbz6u
      bx5op+g6ZhgG03ABmKUBpETijWmfI2IqPDkhFUUxIkqbWTEX/Bq2dbeAbb6QeHxuPMzKGdTF
      JCHpHgMeCYJwnPtMbJElLGRCghKw7SWHSKNSarSs0pwza1a0f2hTMqy3ilCW1RZVsR3nO4Zf
      yxad4NEyIjIZTtcKKk7Qciy+Iwo/nv/YwpVT/J0YcEHJmc7nZ/jmBK2HBfM4FvRnE8BoZoax
      uBaZ5QTjBnBTl97Z/RxQar81kowESQKwteKQY4W+k4SIcdGrhks4PGduShDtO6hJYraZZxKu
      484pxGymlIvYXUJGPncIh7quTUsdfjyEhC3XhPufzQBYSfVSAPOhbVvTphEqkx8TUwk6xZnG
      ddHTiGeiAeRQ+FJNdEWQ3R34uKF5zI34+Ma2fYdryGZWLo0wJeqD31VVmfXdUnPa/BsjeOQE
      uA2KyfIOYDB7TrGi61SY+yIlcJ/YZXDOdWKIjmhvCqF3DSQZl+Qg7q7rRs8bdUqyg15M9Mk3
      L1tkai6DSPiCAqFrxETBiOgg5u+KPvFxCqInCYN1nZA2/KTFYmGkIaTjLWFqlIKfh85jMDPg
      WNmSYq4oBtG8lWlKHa6Pli+I98+EUIJzvNlsjI3LG8LaALOq6zrzDh8fH2cxzRTm8r0bmHex
      pfEhLRHyZ/A5/66ArVnXtbOZLI8u3BrxE80jPhAOTJq7uzvThnu73R6o51NoGSmp8zwfpeXh
      4MnYOY/cyCpIaI+u64zPwMOneGfb7ZaKoqDNZkO73c65i468b/4Twpzn44qmucazaSab5opF
      gQcbiuGDAV4KQHiSqSGVkRtAz6GqqoLRnxjwF8SrOHkDJ0hGLPqHA9x1nTXogDnz8hIei0f8
      u67rp/qXoqCmaejNmzemJMAXFZrCAL6ImXSEMT/uG9iuI5183zVt/oRv7kaUhGx6W9eE5wyl
      1GhtKAd38PEdViDJMWIdTaxiQn0Kj6DJMGGWZSaqwYk6lGeR7wfnYDxsMUtE9Pj4aPZGaJpm
      VA6xXC7NtcAgU969jHa5juGh3JCdH8sAcgyY7TxncOADnDP8detwSRyJUO9SG7TWhsm01iNT
      k5sx8D8QybD1NzrmHYERcA9gwKZpaLVamQ7cwzDQarUipRRtt9vRpiW+MghbOFbOWWZ0pXbx
      2fc+KR4SQLwb4Ze+9CXTmgc+1W3UIj8DuMKfPsJE2BQFWkT7hRj8paIMe7lcXiSpCHOprmvD
      kJhnnudG6nddR+v1mh4eHkb3Ks2YUDhTSm5u7rgEkE9zSPiONQ2w3tcEcVNSqSt2hXhukLsQ
      Eu2Lw1wvl4gOanNAWFwDXCOTDh+jbVva7Xb09u1bappm5OsgUrTZbOjx8dG5qssWHcPnMHNs
      dnqsw3rMs+n73jAwz+tA274co/4CQNx+tVod+AlwVInGaldKubquR205cP61AJPr8fGRttut
      CZdyux8SkxM2X8QjnWiZx8DzwX3yRJXN3HGVgPCx54BH03CfiQEiobU2xEK0D2HCXl8ul7TZ
      bMzmG/xlSxOBNwKY+zJPCU7c6KUE8wG+CfwZV20Sh80MkoLAxwS2413wJcfkd3hf+Pwi+wO8
      FCDUKMElGxZfwNHCeZxo+P62SD5eu5hQqac9GpBLUEqZjhpIkuLvmGST7zrcZORaUh4X+pvD
      5YRL8B1BTY5k0h0kWGELEdqWOfJIDGLytxJaBoPDL+AED8e9rmuz5ZCvStUXBbL5C/IcW2Qo
      9h5s18BnSBjy72/j6b8g8D5E6/XaMMLd3Z3ZCQfSCkv0bikMjUw0Cu4AWQngSor6iBCfS2d6
      rhkofRJ5/VB+gehGtkl9ScADr6rKqFu+BZTW2tjUcMZuRQsQ7bUUjwQhgVYUBW23W1qv16OI
      is2M8YUm8SMrWY/NdYSubTs+McAJgRgzgGWKeNjoWQPcajl5WZamVgrSVTbkRTQl1DUPRG7L
      Uh/TR/QYvBoT6JK1S13XHUhFvu8WkXjw70shbqUvEgcPW0JTwVzLsoyqqjLFdD4TxhXG5NfB
      b5/zeor7sf1N9MI1wCVNC95pgOgp2uPbcYZvzneLQFuTvu9HtTTL5ZK22+2okC8Wtnv1vSOb
      Mz33Oq4xXjQDXAJYxYWXhepRG6ARbpXoOeCkIyyKsCF2WK+qymSIuX/jc4JlBhhtU2zg0SG5
      kuyU2uJVMMA5JC2cWW4nw1F8KcD6Z7k1LeqIuq6j+/t7aprGaEAbA3AGke8ihphlvdGpoLV+
      2T4AcA6Jy4kf14gh/ucg/TmwEySAqlbE1NFuEdltqQUksfP/edaZH+PyHZB74Blkl5/HNYiP
      aV4FA5wKWo8XruAzuY/wSwIcX5grWDbLo1vIFPPNSThsSS4ATMDb67gYSI4pC+x8BJ/yAEdA
      66fOw1iLixeF2vlzOHK3CGSDsYEIb07lqxHyOaUoGwm1mvFFiuaYuMZnm3TWKwVWcWHhyJR+
      SC+B8AGUS2DdgCxv4EQaygjzMbE4hedI+Pe+c7lfgVAt8jEuR5wjI6LgJsevGVDvePmbzeYs
      DtlzAAiOExjf0ENmY33PR34Hf8qWK3CVM8jrDsMwomXpPNtyEAURmXYgL9WOnQo8SDwkxPQh
      aRDDf23gBI/MMBEZvwCRoFizj2sKn+1uYzBXlInocPWezzQriPZrUhOeElp1XZPWT4upbULh
      JZk1UwFTg7dA571VbbF63/NyEadtDbI0q6TtL69t09TSlzA+QGKAvbO72WyeTcLq0oDDz+lF
      KWWEhqzLl/5ArObkvgQfUx4DuCJCtmNH+xBEzeaFA5JLKWUaZCXit8NFwLIn0ZRzbUB0bU4S
      DFEpuRrPNsarjgLB8fIVSyWMAUmPSleUTvMW5ESHDuiU5yo1hY0JYpnMpgm4Rnm1GkBrTdvt
      NrgtUMIYPNvtk/rc/AGz8O51IXCzCT6GSxvY/nZpIhkVelUMgPodpPNRjpyIPx5wenkZCADm
      kCu+YI60bWsyv1OYAePwMCw+k5jyLrXWr8sEquvaRHVSyHceuG3ON55A52m0kORmDOqGIJWn
      5J14aBMRKL77pM28muJrHK0BZDnwrYEXTS0WixTdOQGQB5GZW2hTnhyzxfddUR3+vfwfP7w7
      tqv2Z8r7PZoBeCOlW8JByjvlOk6KUCmIKzvM/54qNGWiC4LNFfKMGf9oBsBNxjRMOiXk9Xxd
      Cm6NOV8CIPhsz32xWJjemz4m8IE7s7wLHb7ji2RCkR/vfUQdFTPQmU0LSexcChAdqr1E9OeH
      Uu4902wal0vsOdfifgXML4RhJdHHXOPiYVCbtHB9xhc/SFsT9Tgpfn99+Dpb2DZdmcME8j1z
      q4No3KFiCi4eBXJ1UJOQNR8yM5sI/3nAZRWAWGHeEIXLJFwRH3yHcWUpRgg3GQZNBP4ygLCl
      bBFPNI7g2HwF13i2cYj2fVlDRC+jU68qEZZweaDTnCk9EFoB2sBHvK5wpzxGFujZwK0LUw6d
      kHAO1HVt+gqhlQrfVGROKBRwObxYqeZiAF5m/aprgRLODywkwjpiosPuz3NNXFf2d+pWvokB
      Es4KZG1lhIZ3xnY5rT7m8BW7gQlcjMDPSyZQwlkBQkebRUCpp64a2CBwasm0hLTt+eeSsXgF
      cNIACWdHlmVUluVIIqMgDo2xXGHLkBaApJeh89hyiMQACRcDNuCGtIeTvFwuabVaHTjGx5bW
      hHyMFAVKuDh4GXrXdWbfrs1mQ3ro6dOf/YSKPCdFRJoUKUX0xAeSGZ6+q9uOvvG974923wGQ
      pfatJksMkHBxYLdJxP77vqeqqujff/pT+qB6pL/40z+J9gf+87P/pn96987aqkau/rKVSiQT
      KOEqyLKMfvvundludhgG+sUnv6Qf/fRnk8bxJc8AHzMlDZBwPbz7Nd23D/Rp1VGf5/TVD97S
      X//D39NvHx/pg/v70aGhxfC2YzlcjnZigISrQb15S9/92gf0x2+eiP0nb1b0d2/uqWnH1b++
      Mmet6clfYEsk+XG+kGgKgyZcFV/53W/Sj/7jF0RE1A8D/e0P/5m+cn9H7/7vi+gxtN7b9bLG
      yKcJcGzSAAlXQ57n9OvuKQnW9T398F9/TG/u7ujbX/9a9BiaiEjtm+OiRaNtV0obEgMkXBW/
      +GJLP/y3n9Afff979Fd/+ef0nW98jcrFniyDuQC9Pw6LZFz7DXA/AL+TCZRwVXzjm9+iz/73
      N6SUot//zu/R+v1a4lhoOvQPZGm0BM8WJwZIuCq6vqeff/oZffLrz2ft67woChrEWgJfmbX8
      LplACVfFxx9/TB9++CH94+efE/38X+jP/vAPrJGbYRjo08/f0afvfkO/3W5JkSJSRF3X01aV
      RB99NBrXp0V4hCgxQMLVkec5ffmjj+iXVUWf/M/nNGhNP/7sV/TlzYp+s62o1Zp+1Woq3ryl
      N28/ouVH+5YrORF921NIF6orSgyQcBPQWtNXv/51+ptPPqG7zYY+/L3v0n89PNDyd1aUZRkh
      LiSrPTlsi+PxP37LJZmJARJuAiDOb338sSHQO5ENjhkDkC1TXBogOcEJV8Wc3p6TokSWhTa8
      HUvSAAlXR2zhmg2h/j9gAL6XAf+dGCDh6ohdvQVwm56f62IemyMMDZBMoISrwrWWNxayR6wL
      fLVZygMk3AzkQvkQE/AYvixxtmmB0DrjxAAJV4VsfEzkl+aSyGXo0/a5BGecxAAJV8Ocjs6+
      ZsoYk/92HWt6ik66ekLCmTGnEwRPcMU200pRoISrIxS18R0TGs+WW0hdIRJuDmVZHvgBtj7/
      NuLm0lyGOKEV+JaqOJ6XQyQGSLgqsIjFltCSjq2r7YkEb5TLN+Jo29YwhWGGU95MQsJUxO4t
      54r2hID+Q2VZWne2TAyQcHXEEPTc/QRwTtd1Zp9oIK0HSLg6bPa/zzmeWggHoLOp8hcAAAOj
      SURBVA8pdrdPYdCEm4DNruftyzmmbqrBj+MOMUdigISroigKZ4hSgi+PjDWFeOmzjXkSAyRc
      FUqpg72GpxK5b2yZIJMMkHyAhJuDTIRN3TiDjxM6LjFAwtXhSnbZGGFu2bREcoITbgZZltFy
      uTzwA7jTOnX3xxDAYIkBEm4C2FDb1+BqKhPEaIrEAAk3g8ViQUVRnJQJbBjVBR01UkLCCZFl
      GS0WC8rzfGQGzWWC0MIaosQACTcGm7M7lwliTKAUBUq4KSilaL1e0263GxXAgeA5UbuqSDls
      TJIWxSfcNFySGwQvw6UuJgh1iU7t0RNuFq7yBVuGGItf5Pmhsgqi5AMk3CCUUrRarSZFe7hP
      wGuGQkgMkHCTABPIClCfvT8nRJoYIOFmoZSisixHTGAza3jxnKuU2oXkBCfcNJAdllqAf+Zb
      MB9CYoCEmwfW8vZ9T13XOSM/MoMcCpESJQZIuHHw1uZFUVCe59R1HbVta753dYuLcYITAyTc
      PEaNrN4zQZZl1DSN+TzG9OH+QeoLlPCsUZYl5XlOdV0f9APli95DSFGghGcHSG9oAiL3Ahrb
      eRxJAyQ8a6xWq4PNL+AncIfZFUJNDJDwrKG1prquD/IARVHQarUioqfeQ678QDKBEp41eFcJ
      3ky3bVt6eHig3W5HWZbRarUySTWOpAESnj1k2xNIf+QNqqqiLMuoKArDBEZTXHPiCQmnQJZl
      lOe52W8MDIElln3fU1VV1Pf9gSmUTKCEF4GyLInoMAHGm2NxpK4QCS8OWEt84Oi+N39sSAyQ
      8GKAjhJKqdH2q0RPHSdsybHEAAkvBlmWGVOoaZpR6/Usy6w1Q4kBEl4UEAFSSlHTNNS2rfEJ
      oAVG+4lda6IJCeeCUsqUUCMbDKCyFEgMkPAigSZbWmtqmuZpV/iioOVyOTKFEgMkvHhgjzBg
      uVymcuiEl4thGMyeYAiL9n1vdqPBgvuu65IGSHh5QDSIV4gOwzBaQIPjEgMkvEjkeU739/ej
      BFjf92YpJdH7BNk1JpeQcAnA1OEl003TmII5ouQEJ7wCgBFkJShRYoCEVwQ4wYkBEl41uEOc
      GCDh1YC3TmnbNpVDJ7wuoESCl0snBkh4VcCWrOgplBgg4dUBUaE8zxMDJLxeLBaLxAAJrxuJ
      ARJeNRIDHAGt9cHa04TnhcQAR4IvrojpR59wW0jFcEdAtt/APrau7xNuD0kDnBB8wQWyjQm3
      jcQAZ4SrGVPC7eD/AXx/R6xUMafmAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
