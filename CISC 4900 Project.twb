<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.1011.1414                               -->
<workbook original-version='18.1' source-build='2024.2.4 (20242.24.1011.1414)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' inline='true' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='united_states_governors_1775_2020' name='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/united_states_governors_1775_2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us_states_covid19_daily_revised' name='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us_states_covid19_daily_revised.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us-airports' name='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us-airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19_state' name='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/COVID19_state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017' name='excel-direct.0nwqjag1pmirqe14ajkis19u24pf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
          <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Tested' ordinal='1' />
            <column datatype='integer' name='Infected' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='real' name='Pop Density' ordinal='5' />
            <column datatype='real' name='Gini' ordinal='6' />
            <column datatype='integer' name='ICU Beds' ordinal='7' />
            <column datatype='integer' name='Income' ordinal='8' />
            <column datatype='integer' name='GDP' ordinal='9' />
            <column datatype='real' name='Unemployment' ordinal='10' />
            <column datatype='real' name='Sex Ratio' ordinal='11' />
            <column datatype='real' name='Smoking Rate' ordinal='12' />
            <column datatype='real' name='Flu Deaths' ordinal='13' />
            <column datatype='real' name='Respiratory Deaths' ordinal='14' />
            <column datatype='integer' name='Physicians' ordinal='15' />
            <column datatype='integer' name='Hospitals' ordinal='16' />
            <column datatype='integer' name='Health Spending' ordinal='17' />
            <column datatype='real' name='Pollution' ordinal='18' />
            <column datatype='integer' name='Med-Large Airports' ordinal='19' />
            <column datatype='real' name='Temperature' ordinal='20' />
            <column datatype='real' name='Urban' ordinal='21' />
            <column datatype='real' name='Age 0-25' ordinal='22' />
            <column datatype='real' name='Age 26-54' ordinal='23' />
            <column datatype='real' name='Age 55+' ordinal='24' />
            <column datatype='date' name='School Closure Date' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
            <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Governor(6)' ordinal='1' />
              <column datatype='string' name='Party(6)' ordinal='2' />
              <column datatype='string' name='State Abbreviations' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
            <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
              <column datatype='date' name='Data As Of' ordinal='0' />
              <column datatype='date' name='Start Date' ordinal='1' />
              <column datatype='date' name='End Date' ordinal='2' />
              <column datatype='string' name='Group' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='integer' name='Month' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='Condition Group' ordinal='7' />
              <column datatype='string' name='Condition' ordinal='8' />
              <column datatype='string' name='ICD10_codes' ordinal='9' />
              <column datatype='string' name='Age Group' ordinal='10' />
              <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
              <column datatype='integer' name='Number of Mentions' ordinal='12' />
              <column datatype='string' name='Flag' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
            <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='2'>
              <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='positive' ordinal='2' />
              <column datatype='integer' name='probableCases' ordinal='3' />
              <column datatype='integer' name='negative' ordinal='4' />
              <column datatype='integer' name='pending' ordinal='5' />
              <column datatype='integer' name='totalTestResults' ordinal='6' />
              <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
              <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
              <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
              <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
              <column datatype='integer' name='recovered' ordinal='11' />
              <column datatype='integer' name='death' ordinal='12' />
              <column datatype='integer' name='hospitalized' ordinal='13' />
              <column datatype='integer' name='deathConfirmed' ordinal='14' />
              <column datatype='integer' name='deathProbable' ordinal='15' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='ident' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
              <column datatype='real' name='latitude_deg' ordinal='4' />
              <column datatype='real' name='longitude_deg' ordinal='5' />
              <column datatype='integer' name='elevation_ft' ordinal='6' />
              <column datatype='string' name='continent' ordinal='7' />
              <column datatype='string' name='country_name' ordinal='8' />
              <column datatype='string' name='iso_country' ordinal='9' />
              <column datatype='string' name='region_name' ordinal='10' />
              <column datatype='string' name='local_region' ordinal='11' />
              <column datatype='string' name='municipality' ordinal='12' />
              <column datatype='integer' name='scheduled_service' ordinal='13' />
              <column datatype='string' name='gps_code' ordinal='14' />
              <column datatype='string' name='iata_code' ordinal='15' />
              <column datatype='string' name='local_code' ordinal='16' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age 0-25 (COVID19!state1)]' value='[COVID19_state1].[Age 0-25]' />
          <map key='[Age 0-25]' value='[COVID19_state].[Age 0-25]' />
          <map key='[Age 26-54 (COVID19!state1)]' value='[COVID19_state1].[Age 26-54]' />
          <map key='[Age 26-54]' value='[COVID19_state].[Age 26-54]' />
          <map key='[Age 55+ (COVID19!state1)]' value='[COVID19_state1].[Age 55+]' />
          <map key='[Age 55+]' value='[COVID19_state].[Age 55+]' />
          <map key='[Age Group]' value='[Conditions_Contributing_to_COVI].[Age Group]' />
          <map key='[COVID-19 Deaths]' value='[Conditions_Contributing_to_COVI].[COVID-19 Deaths]' />
          <map key='[Condition Group]' value='[Conditions_Contributing_to_COVI].[Condition Group]' />
          <map key='[Condition]' value='[Conditions_Contributing_to_COVI].[Condition]' />
          <map key='[Data As Of]' value='[Conditions_Contributing_to_COVI].[Data As Of]' />
          <map key='[Deaths (COVID19!state1)]' value='[COVID19_state1].[Deaths]' />
          <map key='[Deaths]' value='[COVID19_state].[Deaths]' />
          <map key='[End Date]' value='[Conditions_Contributing_to_COVI].[End Date]' />
          <map key='[Flag]' value='[Conditions_Contributing_to_COVI].[Flag]' />
          <map key='[Flu Deaths (COVID19!state1)]' value='[COVID19_state1].[Flu Deaths]' />
          <map key='[Flu Deaths]' value='[COVID19_state].[Flu Deaths]' />
          <map key='[GDP (COVID19!state1)]' value='[COVID19_state1].[GDP]' />
          <map key='[GDP]' value='[COVID19_state].[GDP]' />
          <map key='[Gini (COVID19!state1)]' value='[COVID19_state1].[Gini]' />
          <map key='[Gini]' value='[COVID19_state].[Gini]' />
          <map key='[Governor(6)]' value='[united_states_governors_1775_20].[Governor(6)]' />
          <map key='[Group]' value='[Conditions_Contributing_to_COVI].[Group]' />
          <map key='[Health Spending (COVID19!state1)]' value='[COVID19_state1].[Health Spending]' />
          <map key='[Health Spending]' value='[COVID19_state].[Health Spending]' />
          <map key='[Hospitals (COVID19!state1)]' value='[COVID19_state1].[Hospitals]' />
          <map key='[Hospitals]' value='[COVID19_state].[Hospitals]' />
          <map key='[ICD10_codes]' value='[Conditions_Contributing_to_COVI].[ICD10_codes]' />
          <map key='[ICU Beds (COVID19!state1)]' value='[COVID19_state1].[ICU Beds]' />
          <map key='[ICU Beds]' value='[COVID19_state].[ICU Beds]' />
          <map key='[Income (COVID19!state1)]' value='[COVID19_state1].[Income]' />
          <map key='[Income]' value='[COVID19_state].[Income]' />
          <map key='[Infected (COVID19!state1)]' value='[COVID19_state1].[Infected]' />
          <map key='[Infected]' value='[COVID19_state].[Infected]' />
          <map key='[Med-Large Airports (COVID19!state1)]' value='[COVID19_state1].[Med-Large Airports]' />
          <map key='[Med-Large Airports]' value='[COVID19_state].[Med-Large Airports]' />
          <map key='[Month]' value='[Conditions_Contributing_to_COVI].[Month]' />
          <map key='[Number of Mentions]' value='[Conditions_Contributing_to_COVI].[Number of Mentions]' />
          <map key='[Party(6)]' value='[united_states_governors_1775_20].[Party(6)]' />
          <map key='[Physicians (COVID19!state1)]' value='[COVID19_state1].[Physicians]' />
          <map key='[Physicians]' value='[COVID19_state].[Physicians]' />
          <map key='[Pollution (COVID19!state1)]' value='[COVID19_state1].[Pollution]' />
          <map key='[Pollution]' value='[COVID19_state].[Pollution]' />
          <map key='[Pop Density (COVID19!state1)]' value='[COVID19_state1].[Pop Density]' />
          <map key='[Pop Density]' value='[COVID19_state].[Pop Density]' />
          <map key='[Population (COVID19!state1)]' value='[COVID19_state1].[Population]' />
          <map key='[Population]' value='[COVID19_state].[Population]' />
          <map key='[Respiratory Deaths (COVID19!state1)]' value='[COVID19_state1].[Respiratory Deaths]' />
          <map key='[Respiratory Deaths]' value='[COVID19_state].[Respiratory Deaths]' />
          <map key='[School Closure Date (COVID19!state1)]' value='[COVID19_state1].[School Closure Date]' />
          <map key='[School Closure Date]' value='[COVID19_state].[School Closure Date]' />
          <map key='[Sex Ratio (COVID19!state1)]' value='[COVID19_state1].[Sex Ratio]' />
          <map key='[Sex Ratio]' value='[COVID19_state].[Sex Ratio]' />
          <map key='[Smoking Rate (COVID19!state1)]' value='[COVID19_state1].[Smoking Rate]' />
          <map key='[Smoking Rate]' value='[COVID19_state].[Smoking Rate]' />
          <map key='[Start Date]' value='[Conditions_Contributing_to_COVI].[Start Date]' />
          <map key='[State (COVID19!state)]' value='[COVID19_state].[State]' />
          <map key='[State (COVID19!state1)]' value='[COVID19_state1].[State]' />
          <map key='[State (Conditions!Contributing!to!COVI)]' value='[Conditions_Contributing_to_COVI].[State]' />
          <map key='[State Abbreviations]' value='[united_states_governors_1775_20].[State Abbreviations]' />
          <map key='[State]' value='[united_states_governors_1775_20].[State]' />
          <map key='[Temperature (COVID19!state1)]' value='[COVID19_state1].[Temperature]' />
          <map key='[Temperature]' value='[COVID19_state].[Temperature]' />
          <map key='[Tested (COVID19!state1)]' value='[COVID19_state1].[Tested]' />
          <map key='[Tested]' value='[COVID19_state].[Tested]' />
          <map key='[Unemployment (COVID19!state1)]' value='[COVID19_state1].[Unemployment]' />
          <map key='[Unemployment]' value='[COVID19_state].[Unemployment]' />
          <map key='[Urban (COVID19!state1)]' value='[COVID19_state1].[Urban]' />
          <map key='[Urban]' value='[COVID19_state].[Urban]' />
          <map key='[Year]' value='[Conditions_Contributing_to_COVI].[Year]' />
          <map key='[continent]' value='[us-airports].[continent]' />
          <map key='[country_name]' value='[us-airports].[country_name]' />
          <map key='[date]' value='[us_states_covid19_daily].[date]' />
          <map key='[deathConfirmed]' value='[us_states_covid19_daily].[deathConfirmed]' />
          <map key='[deathProbable]' value='[us_states_covid19_daily].[deathProbable]' />
          <map key='[death]' value='[us_states_covid19_daily].[death]' />
          <map key='[elevation_ft]' value='[us-airports].[elevation_ft]' />
          <map key='[gps_code]' value='[us-airports].[gps_code]' />
          <map key='[hospitalizedCumulative]' value='[us_states_covid19_daily].[hospitalizedCumulative]' />
          <map key='[hospitalizedCurrently]' value='[us_states_covid19_daily].[hospitalizedCurrently]' />
          <map key='[hospitalized]' value='[us_states_covid19_daily].[hospitalized]' />
          <map key='[iata_code]' value='[us-airports].[iata_code]' />
          <map key='[id]' value='[us-airports].[id]' />
          <map key='[ident]' value='[us-airports].[ident]' />
          <map key='[iso_country]' value='[us-airports].[iso_country]' />
          <map key='[latitude_deg]' value='[us-airports].[latitude_deg]' />
          <map key='[local_code]' value='[us-airports].[local_code]' />
          <map key='[local_region]' value='[us-airports].[local_region]' />
          <map key='[longitude_deg]' value='[us-airports].[longitude_deg]' />
          <map key='[municipality]' value='[us-airports].[municipality]' />
          <map key='[name]' value='[us-airports].[name]' />
          <map key='[negative]' value='[us_states_covid19_daily].[negative]' />
          <map key='[onVentilatorCumulative]' value='[us_states_covid19_daily].[onVentilatorCumulative]' />
          <map key='[onVentilatorCurrently]' value='[us_states_covid19_daily].[onVentilatorCurrently]' />
          <map key='[pending]' value='[us_states_covid19_daily].[pending]' />
          <map key='[positive]' value='[us_states_covid19_daily].[positive]' />
          <map key='[probableCases]' value='[us_states_covid19_daily].[probableCases]' />
          <map key='[recovered]' value='[us_states_covid19_daily].[recovered]' />
          <map key='[region_name]' value='[us-airports].[region_name]' />
          <map key='[scheduled_service]' value='[us-airports].[scheduled_service]' />
          <map key='[state]' value='[us_states_covid19_daily].[state]' />
          <map key='[totalTestResults]' value='[us_states_covid19_daily].[totalTestResults]' />
          <map key='[type]' value='[us-airports].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D51:no:A1:D51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N10001:no:A1:N10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P14304:no:A1:P14304:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Governor(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Governor(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Governor(6)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Party(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Party(6)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Abbreviations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Abbreviations]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State Abbreviations</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25 (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54 (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+ (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state)]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>55</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data As Of</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data As Of]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Data As Of</remote-alias>
            <ordinal>56</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>57</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[End Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>End Date</remote-alias>
            <ordinal>58</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Conditions!Contributing!to!COVI)]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition Group</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICD10_codes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICD10_codes]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>ICD10_codes</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COVID-19 Deaths]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>COVID-19 Deaths</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Mentions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Mentions]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Number of Mentions</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>70</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>probableCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[probableCases]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>probableCases</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalTestResults</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalTestResults]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>totalTestResults</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCurrently</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCumulative</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCurrently</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCumulative</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>82</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathConfirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathConfirmed]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathConfirmed</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathProbable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathProbable]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathProbable</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>86</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ident</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ident]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>ident</remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>88</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>latitude_deg</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>longitude_deg</remote-alias>
            <ordinal>91</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation_ft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elevation_ft]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>elevation_ft</remote-alias>
            <ordinal>92</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>93</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_country]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iso_country</remote-alias>
            <ordinal>95</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>region_name</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_region]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_region</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>municipality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[municipality]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>municipality</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[scheduled_service]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>scheduled_service</remote-alias>
            <ordinal>99</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gps_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gps_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>gps_code</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iata_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iata_code</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_code</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]&quot;' value='Death' />
        </aliases>
      </column>
      <column datatype='real' name='[Age 0-25]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 26-54]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 55+]' role='measure' type='quantitative' />
      <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
      </column>
      <column datatype='string' name='[Condition (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Condition]' new-bin='true' />
      </column>
      <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
      <column caption='ICD10 codes' datatype='string' name='[ICD10_codes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Party (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (COVID19!state) (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' new-bin='true' />
      </column>
      <column datatype='string' name='[State (COVID19!state) (group) 2]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' new-bin='true' />
      </column>
      <column datatype='string' name='[State (COVID19!state) (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska&quot;'>
            <value>&quot;Alaska&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (COVID19!state1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Abbreviations (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State Abbreviations]' new-bin='true'>
          <bin default-name='false' value='&quot;States that have a Democratic Governor&quot;'>
            <value>&quot;CA&quot;</value>
            <value>&quot;CO&quot;</value>
            <value>&quot;CT&quot;</value>
            <value>&quot;DE&quot;</value>
            <value>&quot;HI&quot;</value>
            <value>&quot;IL&quot;</value>
            <value>&quot;KS&quot;</value>
            <value>&quot;KY&quot;</value>
            <value>&quot;LA&quot;</value>
            <value>&quot;ME&quot;</value>
            <value>&quot;MI&quot;</value>
            <value>&quot;MN&quot;</value>
            <value>&quot;MT&quot;</value>
            <value>&quot;NC&quot;</value>
            <value>&quot;NJ&quot;</value>
            <value>&quot;NM&quot;</value>
            <value>&quot;NV&quot;</value>
            <value>&quot;NY&quot;</value>
            <value>&quot;OR&quot;</value>
            <value>&quot;PA&quot;</value>
            <value>&quot;RI&quot;</value>
            <value>&quot;VA&quot;</value>
            <value>&quot;WA&quot;</value>
            <value>&quot;WI&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;States that have a Republican Governor&quot;'>
            <value>&quot;AK&quot;</value>
            <value>&quot;AL&quot;</value>
            <value>&quot;AR&quot;</value>
            <value>&quot;AZ&quot;</value>
            <value>&quot;FL&quot;</value>
            <value>&quot;GA&quot;</value>
            <value>&quot;IA&quot;</value>
            <value>&quot;ID&quot;</value>
            <value>&quot;IN&quot;</value>
            <value>&quot;MA&quot;</value>
            <value>&quot;MD&quot;</value>
            <value>&quot;MO&quot;</value>
            <value>&quot;MS&quot;</value>
            <value>&quot;ND&quot;</value>
            <value>&quot;NE&quot;</value>
            <value>&quot;NH&quot;</value>
            <value>&quot;OH&quot;</value>
            <value>&quot;OK&quot;</value>
            <value>&quot;SC&quot;</value>
            <value>&quot;SD&quot;</value>
            <value>&quot;TN&quot;</value>
            <value>&quot;TX&quot;</value>
            <value>&quot;UT&quot;</value>
            <value>&quot;VT&quot;</value>
            <value>&quot;WV&quot;</value>
            <value>&quot;WY&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State1 (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;IN&quot;'>
            <value>&quot;IN&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state1' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Conditions_Contributing_to_COVI' datatype='table' name='[__tableau_internal_object_id__].[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='united_states_governors_1775_20' datatype='table' name='[__tableau_internal_object_id__].[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_states_covid19_daily' datatype='table' name='[__tableau_internal_object_id__].[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
      <column caption='Death Confirmed' datatype='integer' name='[deathConfirmed]' role='measure' type='quantitative' />
      <column caption='Death Probable' datatype='integer' name='[deathProbable]' role='measure' type='quantitative' />
      <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Elevation Ft' datatype='integer' name='[elevation_ft]' role='measure' type='quantitative' />
      <column caption='Gps Code' datatype='string' name='[gps_code]' role='dimension' type='nominal' />
      <column caption='Hospitalized Cumulative' datatype='integer' name='[hospitalizedCumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalized Currently' datatype='integer' name='[hospitalizedCurrently]' role='measure' type='quantitative' />
      <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
      <column caption='Iata Code' datatype='string' name='[iata_code]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Ident' datatype='string' name='[ident]' role='dimension' type='nominal' />
      <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude Deg' datatype='real' name='[latitude_deg]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Code' datatype='string' name='[local_code]' role='dimension' type='nominal' />
      <column caption='Local Region' datatype='string' name='[local_region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Longitude Deg' datatype='real' name='[longitude_deg]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Municipality' datatype='string' name='[municipality]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Cumulative' datatype='integer' name='[onVentilatorCumulative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Currently' datatype='integer' name='[onVentilatorCurrently]' role='measure' type='quantitative' />
      <column caption='Pending' datatype='integer' name='[pending]' role='measure' type='quantitative' />
      <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Probable Cases' datatype='integer' name='[probableCases]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Scheduled Service' datatype='integer' name='[scheduled_service]' role='measure' type='quantitative' />
      <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Test Results' datatype='integer' name='[totalTestResults]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[Age 0-25]' derivation='Attribute' name='[attr:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Avg' name='[avg:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Avg' name='[avg:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Avg' name='[avg:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
      <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='5' column='[Age 0-25]' derivation='Percentile' name='[prc5:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Sum' name='[sum:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Sum' name='[sum:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Sum' name='[sum:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state))' hidden='true' name='[Action (State (COVID19!state))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),MONTH(Date),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),MONTH(Date),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State Abbrev)' hidden='true' name='[Action (State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State1)' hidden='true' name='[Action (State1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Governor(6),State Abbreviations)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Governor(6):nk]' />
          <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (COVID19!state),WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State1,WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group caption='United States' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
            <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='US' name='[State (COVID19!state) (group) 2 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Alaska&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Hawaii&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Maryland&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Massachusetts&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;South Dakota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;West Virginia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Wisconsin&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[prc5:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Party(6):nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party(6) (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID19_state1' id='COVID19!state_17C8D48792824FAEAA08A29DB41F75A3'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='COVID19_state' id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Conditions_Contributing_to_COVI' id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B'>
            <properties context=''>
              <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
                <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Data As Of' ordinal='0' />
                  <column datatype='date' name='Start Date' ordinal='1' />
                  <column datatype='date' name='End Date' ordinal='2' />
                  <column datatype='string' name='Group' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='integer' name='Month' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='Condition Group' ordinal='7' />
                  <column datatype='string' name='Condition' ordinal='8' />
                  <column datatype='string' name='ICD10_codes' ordinal='9' />
                  <column datatype='string' name='Age Group' ordinal='10' />
                  <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
                  <column datatype='integer' name='Number of Mentions' ordinal='12' />
                  <column datatype='string' name='Flag' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='united_states_governors_1775_20' id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE'>
            <properties context=''>
              <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
                <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Governor(6)' ordinal='1' />
                  <column datatype='string' name='Party(6)' ordinal='2' />
                  <column datatype='string' name='State Abbreviations' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_states_covid19_daily' id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B'>
            <properties context=''>
              <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
                <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='positive' ordinal='2' />
                  <column datatype='integer' name='probableCases' ordinal='3' />
                  <column datatype='integer' name='negative' ordinal='4' />
                  <column datatype='integer' name='pending' ordinal='5' />
                  <column datatype='integer' name='totalTestResults' ordinal='6' />
                  <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
                  <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
                  <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
                  <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
                  <column datatype='integer' name='recovered' ordinal='11' />
                  <column datatype='integer' name='death' ordinal='12' />
                  <column datatype='integer' name='hospitalized' ordinal='13' />
                  <column datatype='integer' name='deathConfirmed' ordinal='14' />
                  <column datatype='integer' name='deathProbable' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us-airports' id='us-airports_65636316B8D74AF2A1176E9E7E31D698'>
            <properties context=''>
              <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
                <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='ident' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='name' ordinal='3' />
                  <column datatype='real' name='latitude_deg' ordinal='4' />
                  <column datatype='real' name='longitude_deg' ordinal='5' />
                  <column datatype='integer' name='elevation_ft' ordinal='6' />
                  <column datatype='string' name='continent' ordinal='7' />
                  <column datatype='string' name='country_name' ordinal='8' />
                  <column datatype='string' name='iso_country' ordinal='9' />
                  <column datatype='string' name='region_name' ordinal='10' />
                  <column datatype='string' name='local_region' ordinal='11' />
                  <column datatype='string' name='municipality' ordinal='12' />
                  <column datatype='integer' name='scheduled_service' ordinal='13' />
                  <column datatype='string' name='gps_code' ordinal='14' />
                  <column datatype='string' name='iata_code' ordinal='15' />
                  <column datatype='string' name='local_code' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state1)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_17C8D48792824FAEAA08A29DB41F75A3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (Conditions!Contributing!to!COVI)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Abbreviations]' />
              <expression op='[state]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[region_name]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us-airports_65636316B8D74AF2A1176E9E7E31D698' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='Total Monthly Death Toll' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_086B8D2789A744D0AE153557B5FD510E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Airports Dashboard' type='sheet' worksheet='# of Airports within each State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Airports Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_F5B03D4E998D46849F7CCDD52D58732E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_7D098748666743099FF1FB542282EA34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,US Death Map Chart,Hawaii Death Map Chart,Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_7DFE20DBD5644CE3AA03C49AFB1E9B89]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='Hawaii Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_BBB13193C6E74EB281DBDA031FD37000]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='Alaska Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,US Death Map Chart,Hawaii Death Map Chart,Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='# of Airports within each State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1AD2B499-30E1-4F3C-861C-407A8AC34176}' />
    </worksheet>
    <worksheet name='Airport Per State to Positive Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Airport Per State to Total Positive Cases Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]'>
            <groupfilter function='level-members' level='[State (COVID19!state)]' user:ui-action-filter='[Action3_086B8D2789A744D0AE153557B5FD510E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='cols' value='Total Positive Cases' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US airports' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' max='1419311' min='-72542' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' field-type='quantitative' max='1986' min='-117' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</cols>
      </table>
      <simple-id uuid='{B636ABC4-D851-432E-BFF8-8C4FF51DD856}' />
    </worksheet>
    <worksheet name='Alaska Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DCF9831441914AD8A8798BF49F0B92F3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{727F25AB-ABE1-4441-AAED-AC2E60C2ECDC}' />
    </worksheet>
    <worksheet name='Alaska Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='%null%' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;District of Columbia&quot;' />
                    <groupfilter function='member' level='[state]' member='%null%' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='#2020-01-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='#2020-02-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-03-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-04-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-05-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-06-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-07-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-08-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-09-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-10-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-11-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-12-01 00:00:00#' />
                  </groupfilter>
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
                      <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[State (COVID19!state)]' />
                <hierarchy name='[tmn:date:ok]' />
                <hierarchy name='[state]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alabama&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;AL&quot;' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-03-01 00:00:00#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-04-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-05-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-06-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-07-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-08-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-09-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-10-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-11-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-12-01 00:00:00#' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tmn:date:ok]' />
                <hierarchy name='[none:State (COVID19!state):nk]' />
                <hierarchy name='[none:state:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' max='27000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{A9713877-2563-459B-84FD-DC41AFB4C7A5}' />
    </worksheet>
    <worksheet name='Death Rate by State and Political Affiliations'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759'>Death Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
            </column>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Party (group)]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[Party (group)]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' included-values='in-range'>
            <min>0.0040033594624860024</min>
            <max>0.047100000000000003</max>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' value='Party'>
              <formatted-text>
                <run fontalignment='1'>Party</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{49BEE33E-2AC3-422C-B54B-D12DF3E86875}' />
    </worksheet>
    <worksheet name='Death by GDP and Pop Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]' field-type='quantitative' max='90765' min='40000' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk])</cols>
      </table>
      <simple-id uuid='{FA052490-9185-4859-B657-2A8F61E89A58}' />
    </worksheet>
    <worksheet name='Death/Infected/Population Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='Attribute' name='[attr:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' value='191' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-decoration' data-class='total' value='none' />
            <format attr='text-decoration' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]' value='true' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-decoration' value='underline' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' value='12' />
            <format attr='color' value='#4e79a7' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A5F8D895-4944-4C1A-AB30-16F5F9E2D43A}' />
    </worksheet>
    <worksheet name='Deaths Per Gini Coefficient'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Gini]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gini]' derivation='Sum' name='[sum:Gini:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' field-type='quantitative' max='0.55776000000000003' min='0.40000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' scope='rows' value='Gini Coefficient' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{A4D1A66D-7C3F-4FFB-94E8-6B2AEB2923CC}' />
    </worksheet>
    <worksheet name='Hawaii Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_BBB13193C6E74EB281DBDA031FD37000]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{C8CED8A6-1A24-4BCE-9663-53590EC1CAE7}' />
    </worksheet>
    <worksheet name='Hawaii Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-16809713.700985081' min='-18259911.136666499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='2776465.8887046324' min='1907409.8083608563' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{92D5A6CD-0930-4D7A-8DDF-96577DA4A74F}' />
    </worksheet>
    <worksheet name='Infected to Hospital'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]</cols>
      </table>
      <simple-id uuid='{A179A824-76BB-42F9-87B2-4F3E728606C8}' />
    </worksheet>
    <worksheet name='Medical Condition that Contributed to Death in relation with Covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Conditions!Contributing!to!COVI)]' derivation='None' name='[none:State (Conditions!Contributing!to!COVI):nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;All Ages&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]'>
            <groupfilter function='member' level='[none:State (Conditions!Contributing!to!COVI):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]</cols>
      </table>
      <simple-id uuid='{C882F5DD-BA72-4DB0-9AE7-73C9B4D92D14}' />
    </worksheet>
    <worksheet name='Political Affiliations and its Impact on Infection/Death Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Political Afflications Of Each State and its Impact on Covid Infection and Death Rate
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Republican&quot;'>
                  <value>&quot;Republican&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='member' level='[mn:date:ok]' member='9' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Governor(6):nk]' />
                <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Governor(6):nk]' member='%null%' />
                <groupfilter function='member' level='[none:State Abbreviations:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk])</cols>
      </table>
      <simple-id uuid='{74B9E1EC-6DEA-4693-906F-9CE3514BB839}' />
    </worksheet>
    <worksheet name='Pop Density by State and Political Afflications'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#4e79a7'>Population Density</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Party (group)]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[Party (group)]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' included-values='in-range'>
            <min>1.2863</min>
            <max>11814.540999999999</max>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' value='Party'>
              <formatted-text>
                <run fontalignment='1'>Party</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' z-order='3' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{25DC3E0F-48AA-499F-AD4D-F337B6B27B65}' />
    </worksheet>
    <worksheet name='Total Monthly Death Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Death Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='Total Deaths' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='#75a1c7' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
            <format attr='color' data-class='subtotal' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#000000' />
            <format attr='color' data-class='total' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#75a1c7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#4e79a7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='axis-title'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='#75a1c7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{070A88E5-483E-4C2A-81FE-BD5E2569370A}' />
    </worksheet>
    <worksheet name='Total Monthly Infected Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Infected Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='rows' value='false' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='color' value='#4e79a7' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5A6A41C2-B505-4668-8919-C1CBD1AE00AC}' />
    </worksheet>
    <worksheet name='US Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_BBB13193C6E74EB281DBDA031FD37000]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='Search&#10;'>
              <formatted-text>
                <run>Search&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{71A4E8A4-1896-4475-8F52-2EFAD3C2A21A}' />
    </worksheet>
    <worksheet name='US Mainland Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State Abbreviations (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State Abbreviations]' new-bin='true'>
                <bin default-name='false' value='&quot;States that have a Democratic Governor&quot;'>
                  <value>&quot;CA&quot;</value>
                  <value>&quot;CO&quot;</value>
                  <value>&quot;CT&quot;</value>
                  <value>&quot;DE&quot;</value>
                  <value>&quot;HI&quot;</value>
                  <value>&quot;IL&quot;</value>
                  <value>&quot;KS&quot;</value>
                  <value>&quot;KY&quot;</value>
                  <value>&quot;LA&quot;</value>
                  <value>&quot;ME&quot;</value>
                  <value>&quot;MI&quot;</value>
                  <value>&quot;MN&quot;</value>
                  <value>&quot;MT&quot;</value>
                  <value>&quot;NC&quot;</value>
                  <value>&quot;NJ&quot;</value>
                  <value>&quot;NM&quot;</value>
                  <value>&quot;NV&quot;</value>
                  <value>&quot;NY&quot;</value>
                  <value>&quot;OR&quot;</value>
                  <value>&quot;PA&quot;</value>
                  <value>&quot;RI&quot;</value>
                  <value>&quot;VA&quot;</value>
                  <value>&quot;WA&quot;</value>
                  <value>&quot;WI&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;States that have a Republican Governor&quot;'>
                  <value>&quot;AK&quot;</value>
                  <value>&quot;AL&quot;</value>
                  <value>&quot;AR&quot;</value>
                  <value>&quot;AZ&quot;</value>
                  <value>&quot;FL&quot;</value>
                  <value>&quot;GA&quot;</value>
                  <value>&quot;IA&quot;</value>
                  <value>&quot;ID&quot;</value>
                  <value>&quot;IN&quot;</value>
                  <value>&quot;MA&quot;</value>
                  <value>&quot;MD&quot;</value>
                  <value>&quot;MO&quot;</value>
                  <value>&quot;MS&quot;</value>
                  <value>&quot;ND&quot;</value>
                  <value>&quot;NE&quot;</value>
                  <value>&quot;NH&quot;</value>
                  <value>&quot;OH&quot;</value>
                  <value>&quot;OK&quot;</value>
                  <value>&quot;SC&quot;</value>
                  <value>&quot;SD&quot;</value>
                  <value>&quot;TN&quot;</value>
                  <value>&quot;TX&quot;</value>
                  <value>&quot;UT&quot;</value>
                  <value>&quot;VT&quot;</value>
                  <value>&quot;WV&quot;</value>
                  <value>&quot;WY&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;DC&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State Abbreviations (group)]' member='%null%' />
              <groupfilter function='member' level='[State Abbreviations (group)]' member='&quot;States that have a Democratic Governor&quot;' />
              <groupfilter function='member' level='[State Abbreviations (group)]' member='&quot;States that have a Republican Governor&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[none:state:nk]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='35492410.964236289' min='18405721.483045068' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='11653306.313701561' min='1760377.9652471868' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.64999997615814209' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' value='State Filter&#10;'>
              <formatted-text>
                <run fontalignment='1'>State Filter&#10;</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]' value='Political Party&#10;'>
              <formatted-text>
                <run fontalignment='1' fontcolor='#ffffff'>Political Party</run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{1397F377-72EE-4189-AD53-4A43FE85925B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airports Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88325' id='8' param='horz' type-v2='layout-flow' w='99070' x='465' y='10826'>
            <zone h='88325' id='6' type-v2='layout-basic' w='89773' x='465' y='10826'>
              <zone h='44162' id='3' name='Airport Per State to Positive Cases' show-title='false' w='44883' x='465' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
              <zone h='88325' id='5' name='# of Airports within each State' show-title='false' w='44890' x='45348' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='44163' id='47' type-v2='text' w='44883' x='465' y='54988'>
                <formatted-text>
                  <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                  <run>


Outliers: Alaska, New Jersey
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='10' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='88325' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9297' x='90238' y='10826'>
              <zone h='6900' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='9297' x='90238' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9977' id='10' type-v2='text' w='99070' x='465' y='849'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#72b966' fontname='Times New Roman' fontsize='20'>Airport Correlation to Infection</run>
              <run fontalignment='1'>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='10' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='84' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='83' param='vert' type-v2='layout-flow' w='99070' x='465' y='849'>
                <zone forceUpdate='true' h='9977' id='10' type-v2='text' w='99070' x='465' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#72b966' fontname='Times New Roman' fontsize='20'>Airport Correlation to Infection</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44162' id='3' is-fixed='true' name='Airport Per State to Positive Cases' show-title='false' w='44883' x='465' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88325' id='5' is-fixed='true' name='# of Airports within each State' show-title='false' w='44890' x='45348' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6900' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='9297' x='90238' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44163' id='47' type-v2='text' w='44883' x='465' y='54988'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                    <run>


Outliers: Alaska, New Jersey
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7DE4F89-6482-48AC-BCEB-DD05B978FDE1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 6'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
      </datasources>
      <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
        <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
          <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
        </column>
        <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
          <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
            <bin default-name='true' value='&quot;Democratic&quot;'>
              <value>&quot;Democratic&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
        <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
        <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
        <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='6' param='horz' type-v2='layout-flow' w='58570' x='31726' y='849'>
            <zone h='49151' id='9' name='Death Rate by State and Political Affiliations' w='58570' x='31726' y='849'>
              <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='74' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='13' param='vert' type-v2='layout-flow' w='9239' x='90296' y='50000'>
            <zone h='7006' id='19' name='Pop Density by State and Political Afflications' pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9239' x='90296' y='50000'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9448' id='18' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9239' x='90296' y='57006'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7325' id='17' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9239' x='90296' y='66454'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='25372' id='21' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9239' x='90296' y='73779'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='14' param='vert' type-v2='layout-flow' w='9239' x='90296' y='849'>
            <zone h='7006' id='12' name='Death Rate by State and Political Affiliations' pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9239' x='90296' y='849'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='9448' id='11' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9239' x='90296' y='7855'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7325' id='10' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9239' x='90296' y='17303'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='25372' id='20' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9239' x='90296' y='24628'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='49151' id='15' param='horz' type-v2='layout-flow' w='58570' x='31726' y='50000'>
            <zone h='49151' id='16' name='Pop Density by State and Political Afflications' w='58570' x='31726' y='50000'>
              <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='67' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='79300' id='8' param='vert' type-v2='layout-flow' w='31261' x='465' y='19851' />
          <zone h='19002' id='22' param='horz' type-v2='layout-flow' w='31261' x='465' y='849'>
            <zone forceUpdate='true' h='19002' id='24' type-v2='text' w='31261' x='465' y='849'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='20'>Covid-19 Stats Through the Lenses of Political Affiliations</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='3291' id='23' type-v2='text' w='10459' x='78268' y='2760'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#e15759'>Death Rate % = Death/Infected</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='35' param='vert' type-v2='layout-flow' w='99070' x='465' y='849'>
                <zone forceUpdate='true' h='19002' id='24' type-v2='text' w='31261' x='465' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='20'>Covid-19 Stats Through the Lenses of Political Affiliations</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9448' id='11' mode='checkdropdown' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9239' x='90296' y='7855'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7325' id='10' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9239' x='90296' y='17303'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25372' id='20' mode='checkdropdown' name='Death Rate by State and Political Affiliations' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9239' x='90296' y='24628'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49151' id='9' is-fixed='true' name='Death Rate by State and Political Affiliations' w='58570' x='31726' y='849'>
                  <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='74' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7006' id='12' name='Death Rate by State and Political Affiliations' pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9239' x='90296' y='849'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='3291' id='23' type-v2='text' w='10459' x='78268' y='2760'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#e15759'>Death Rate % = Death/Infected</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9448' id='18' mode='checkdropdown' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='filter' w='9239' x='90296' y='57006'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7325' id='17' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9239' x='90296' y='66454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25372' id='21' mode='checkdropdown' name='Pop Density by State and Political Afflications' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' type-v2='filter' values='relevant' w='9239' x='90296' y='73779'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49151' id='16' is-fixed='true' name='Pop Density by State and Political Afflications' w='58570' x='31726' y='50000'>
                  <layout-cache cell-count-w='50' minheight='264' non-cell-size-w='67' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7006' id='19' name='Pop Density by State and Political Afflications' pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type-v2='color' w='9239' x='90296' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9B3293BD-CCD1-4950-8755-A08CFE04DD5B}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death Report (old)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='9' param='horz' type-v2='layout-flow' w='99070' x='465' y='50000'>
            <zone h='49151' id='7' type-v2='layout-basic' w='89773' x='465' y='50000' />
            <zone fixed-size='160' h='49151' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9297' x='90238' y='50000'>
              <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9297' x='90238' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49151' id='54' param='horz' type-v2='layout-flow' w='99070' x='465' y='849' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100000' id='3' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='713' h='100000' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='41429' x='0' y='0'>
            <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41429' x='0' y='0'>
              <formatted-text>
                <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7643' id='17' name='Death/Infected/Population Metrics' show-title='false' w='41429' x='0' y='4458'>
              <layout-cache fixed-size-h='64' fixed-size-w='574' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='87899' id='12' name='Total Monthly Death Toll' w='41429' x='0' y='12101'>
              <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='100000' id='5' name='US Death Map Chart' show-title='false' w='58571' x='41429' y='0'>
            <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='90' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='89' param='vert' type-v2='layout-flow' w='99070' x='465' y='849'>
                <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41429' x='0' y='0'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='5' is-fixed='true' name='US Death Map Chart' show-title='false' w='58571' x='41429' y='0'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9297' x='90238' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='7643' id='17' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='41429' x='0' y='4458'>
                  <layout-cache fixed-size-h='64' fixed-size-w='574' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87899' id='12' is-fixed='true' name='Total Monthly Death Toll' w='41429' x='0' y='12101'>
                  <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E79A1F6F-B349-4E2D-9E5C-1053EADE6491}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death/Infection Report'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='17' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='15' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='83911' id='5' param='vert' type-v2='layout-flow' w='60322' x='39092' y='15047'>
                <zone h='83911' id='10' name='US Death Map Chart' show-title='false' w='60322' x='39092' y='15047'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='9708' id='7' name='Death/Infected/Population Metrics' show-title='false' w='98828' x='586' y='5339'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                </zone-style>
              </zone>
              <zone h='83911' id='8' param='vert' type-v2='layout-flow' w='38506' x='586' y='15047'>
                <zone h='41955' id='9' name='Total Monthly Death Toll' show-title='false' w='38506' x='586' y='15047'>
                  <layout-cache cell-count-w='11' minheight='180' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
                <zone h='41955' id='11' name='Total Monthly Infected Toll' show-title='false' w='38506' x='586' y='57002'>
                  <layout-cache minheight='180' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='4297' id='14' type-v2='text' w='98828' x='586' y='1042'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Times New Roman' fontsize='18'>2020 COVID Death and Infection Report</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19141' id='12' name='Alaska Death Map Chart' show-title='false' w='8785' x='42020' y='75000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='19141' id='13' name='Hawaii Death Map Chart' show-title='false' w='8785' x='51903' y='75000'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone friendly-name='Search ' h='9223' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11852' x='85556' y='17314' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='48' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='47' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone forceUpdate='true' h='4297' id='14' type-v2='text' w='98828' x='586' y='1042'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#75a1c7' fontname='Times New Roman' fontsize='18'>2020 COVID Death and Infection Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='9708' id='7' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='98828' x='586' y='5339'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41955' id='9' is-fixed='true' name='Total Monthly Death Toll' show-title='false' w='38506' x='586' y='15047'>
                  <layout-cache cell-count-w='11' minheight='180' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Search ' h='9223' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11852' x='85556' y='17314'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83911' id='10' is-fixed='true' name='US Death Map Chart' show-title='false' w='60322' x='39092' y='15047'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41955' id='11' is-fixed='true' name='Total Monthly Infected Toll' show-title='false' w='38506' x='586' y='57002'>
                  <layout-cache minheight='180' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19141' id='12' is-fixed='true' name='Alaska Death Map Chart' show-title='false' w='8785' x='42020' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19141' id='13' is-fixed='true' name='Hawaii Death Map Chart' show-title='false' w='8785' x='51903' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F000C517-4B7D-4B1A-A5FC-BCAFB59B1AA2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Disease Mobility Time Series Dashboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
      </datasources>
      <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
        <column datatype='string' name='[State Abbreviations (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[State Abbreviations]' new-bin='true'>
            <bin default-name='false' value='&quot;States that have a Democratic Governor&quot;'>
              <value>&quot;CA&quot;</value>
              <value>&quot;CO&quot;</value>
              <value>&quot;CT&quot;</value>
              <value>&quot;DE&quot;</value>
              <value>&quot;HI&quot;</value>
              <value>&quot;IL&quot;</value>
              <value>&quot;KS&quot;</value>
              <value>&quot;KY&quot;</value>
              <value>&quot;LA&quot;</value>
              <value>&quot;ME&quot;</value>
              <value>&quot;MI&quot;</value>
              <value>&quot;MN&quot;</value>
              <value>&quot;MT&quot;</value>
              <value>&quot;NC&quot;</value>
              <value>&quot;NJ&quot;</value>
              <value>&quot;NM&quot;</value>
              <value>&quot;NV&quot;</value>
              <value>&quot;NY&quot;</value>
              <value>&quot;OR&quot;</value>
              <value>&quot;PA&quot;</value>
              <value>&quot;RI&quot;</value>
              <value>&quot;VA&quot;</value>
              <value>&quot;WA&quot;</value>
              <value>&quot;WI&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;States that have a Republican Governor&quot;'>
              <value>&quot;AK&quot;</value>
              <value>&quot;AL&quot;</value>
              <value>&quot;AR&quot;</value>
              <value>&quot;AZ&quot;</value>
              <value>&quot;FL&quot;</value>
              <value>&quot;GA&quot;</value>
              <value>&quot;IA&quot;</value>
              <value>&quot;ID&quot;</value>
              <value>&quot;IN&quot;</value>
              <value>&quot;MA&quot;</value>
              <value>&quot;MD&quot;</value>
              <value>&quot;MO&quot;</value>
              <value>&quot;MS&quot;</value>
              <value>&quot;ND&quot;</value>
              <value>&quot;NE&quot;</value>
              <value>&quot;NH&quot;</value>
              <value>&quot;OH&quot;</value>
              <value>&quot;OK&quot;</value>
              <value>&quot;SC&quot;</value>
              <value>&quot;SD&quot;</value>
              <value>&quot;TN&quot;</value>
              <value>&quot;TX&quot;</value>
              <value>&quot;UT&quot;</value>
              <value>&quot;VT&quot;</value>
              <value>&quot;WV&quot;</value>
              <value>&quot;WY&quot;</value>
            </bin>
          </calculation>
        </column>
        <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
        <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='89385' id='7' param='vert' type-v2='layout-flow' w='83614' x='465' y='9766'>
            <zone h='89385' id='10' name='US Mainland Time Series Map Chart' show-title='false' w='83614' x='465' y='9766'>
              <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='0' />
              </zone-style>
            </zone>
          </zone>
          <zone h='8917' id='24' param='horz' type-v2='layout-flow' w='83614' x='465' y='849'>
            <zone fixed-size='1437' forceUpdate='true' h='8917' id='25' is-fixed='true' type-v2='text' w='83614' x='465' y='849'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Times New Roman' fontsize='20'>Covid-19 Disease Mobility Through 2020</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='10' />
                <format attr='padding' value='10' />
                <format attr='padding-right' value='10' />
                <format attr='padding-left' value='10' />
              </zone-style>
            </zone>
          </zone>
          <zone h='98302' id='27' is-fixed='true' type-v2='layout-basic' w='15456' x='84079' y='849'>
            <zone h='8917' id='26' param='vert' type-v2='layout-flow' w='15456' x='84079' y='849'>
              <zone fixed-size='61' h='8599' id='11' is-fixed='true' name='US Mainland Time Series Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type-v2='color' w='15456' x='84079' y='849'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='padding' value='0' />
                </zone-style>
              </zone>
            </zone>
            <zone h='89385' id='28' param='vert' type-v2='layout-flow' w='15456' x='84079' y='9766'>
              <zone h='13163' id='12' name='US Mainland Time Series Map Chart' synchronized='1' type-v2='currpage' w='15456' x='84079' y='9766'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                </zone-style>
              </zone>
              <zone h='7006' id='29' mode='dropdown' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]' show-morefewerbutton='true' type-v2='filter' values='relevant' w='15456' x='84079' y='22929'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                </zone-style>
              </zone>
              <zone h='69216' id='23' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type-v2='filter' values='relevant' w='15456' x='84079' y='29935'>
                <zone-style>
                  <format attr='border-color' value='#ffffff' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='10' />
                  <format attr='background-color' value='#898989' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='40' param='vert' type-v2='layout-flow' w='99070' x='465' y='849'>
                <zone fixed-size='1437' forceUpdate='true' h='8917' id='25' type-v2='text' w='83614' x='465' y='849'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Times New Roman' fontsize='20'>Covid-19 Disease Mobility Through 2020</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7006' id='29' mode='dropdown' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]' show-morefewerbutton='true' type-v2='filter' values='relevant' w='15456' x='84079' y='22929'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='69216' id='23' mode='checkdropdown' name='US Mainland Time Series Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type-v2='filter' values='relevant' w='15456' x='84079' y='29935'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#898989' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89385' id='10' is-fixed='true' name='US Mainland Time Series Map Chart' show-title='false' w='83614' x='465' y='9766'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='61' h='8599' id='11' name='US Mainland Time Series Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type-v2='color' w='15456' x='84079' y='849'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13163' id='12' name='US Mainland Time Series Map Chart' synchronized='1' type-v2='currpage' w='15456' x='84079' y='9766'>
                  <zone-style>
                    <format attr='border-color' value='#ffffff' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{202F6B54-0778-43F1-B68A-AC1CA3BF13CE}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Economic Factors Dashboard'>
      <style />
      <size maxheight='868' maxwidth='1324' minheight='868' minwidth='1324' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98156' id='3' param='vert' type-v2='layout-flow' w='49396' x='50000' y='922' />
          <zone h='49078' id='5' param='horz' type-v2='layout-flow' w='49396' x='604' y='50000' />
          <zone h='49078' id='6' param='horz' type-v2='layout-flow' w='49396' x='604' y='922'>
            <zone h='49078' id='7' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
              <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='48' param='vert' type-v2='layout-flow' w='98792' x='604' y='922'>
                <zone fixed-size='280' h='49078' id='7' is-fixed='true' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
                  <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BA36339-ACCC-451D-9381-DE03DB3DB634}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98302' id='1' param='vert' removable='false' type-v2='layout-flow' w='99070' x='465' y='849'>
            <zone h='3503' id='3' type-v2='title' w='99070' x='465' y='849' />
            <zone h='10722' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='99070' x='465' y='4352' />
            <zone h='84077' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='99070' x='465' y='15074'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='2020 Death/Infection Report' captured-sheet='Death/Infection Report' id='5'>
                    <capturedDeltas>
                      <worksheet name='Alaska Death Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
                            <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Hawaii Death Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Hawaii&quot;' />
                            <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='US Death Map Chart'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='9545650.4240261111' min='-1433869.925298746' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-7014977.0959144514' min='-16013482.886579752' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Covid-19 Disease Mobility Map' captured-sheet='Disease Mobility Time Series Dashboard' id='6'>
                    <capturedDeltas>
                      <worksheet name='US Mainland Time Series Map Chart'>
                        <current-page>
                          <multibucket>
                            <bucket>#2020-05-01 00:00:00#</bucket>
                          </multibucket>
                        </current-page>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Airport Correlation To Infection' captured-sheet='Airports Dashboard' id='1'>
                    <capturedDeltas>
                      <worksheet name='Airport Per State to Positive Cases'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US Airports' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Political Affiliations' captured-sheet='Dashboard 6' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{44A79766-1119-4F82-BDBE-4F7EF583F60D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Airport Per State to Positive Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State1 (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D3038513-041A-4A1D-B829-DFD6ABD9DBC5}' />
    </window>
    <window class='worksheet' name='Political Affiliations and its Impact on Infection/Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{506A2545-3A3B-43E5-A3F8-91C2E5B1D6C2}' />
    </window>
    <window class='worksheet' name='Death Rate by State and Political Affiliations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='filter' />
            <card pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D732364-654D-4095-9ACF-A45179BBCC58}' />
    </window>
    <window class='worksheet' name='Pop Density by State and Political Afflications'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{93506E30-213B-49E6-92DA-554099C5D6E5}' />
    </window>
    <window class='worksheet' name='Deaths Per Gini Coefficient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{1497C8DF-4485-47A1-AA4F-B81F1243F789}' />
    </window>
    <window class='worksheet' name='Death by GDP and Pop Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DE7FE10-ED05-48F7-AB1C-F5518CE74174}' />
    </window>
    <window class='worksheet' name='US Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4F0610E-E3BA-4CED-8831-372498677E79}' />
    </window>
    <window class='worksheet' name='Hawaii Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17F2DF32-A3B6-47BF-AF5F-7A82DE31B089}' />
    </window>
    <window class='worksheet' name='Alaska Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3833707E-FCB3-4321-9E81-C6D6EA98CF37}' />
    </window>
    <window class='worksheet' name='US Mainland Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State Abbreviations (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12CF59F3-AC08-40CF-9003-A07700D363FA}' />
    </window>
    <window class='worksheet' name='Alaska Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1430A37-D62C-4A13-B3C9-CF0D90F41B37}' />
    </window>
    <window class='worksheet' name='Hawaii Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-08-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07815A29-B9E9-4B76-980C-B331F625311B}' />
    </window>
    <window class='worksheet' name='Total Monthly Death Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CE1E20EF-C2A3-4A7E-8A6A-D4F0BB32F6BE}' />
    </window>
    <window class='worksheet' name='Total Monthly Infected Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C1838E95-C246-4D38-BC48-D3BD1F44DBC1}' />
    </window>
    <window class='worksheet' name='Death/Infected/Population Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group) 2]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state1):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F7DE0-FBC3-4B2E-BCD6-7D9A25099CCC}' />
    </window>
    <window class='worksheet' name='# of Airports within each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A3B6861-1B43-442B-94A1-1C04A970296E}' />
    </window>
    <window class='worksheet' name='Infected to Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6706D4C-D15D-4D55-B522-88BD3A0680D6}' />
    </window>
    <window class='worksheet' name='Medical Condition that Contributed to Death in relation with Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C985839-02A7-436E-9C51-FBB5B690285C}' />
    </window>
    <window class='dashboard' name='Economic Factors Dashboard'>
      <viewpoints>
        <viewpoint name='Deaths Per Gini Coefficient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CD636EFA-5D86-4B7F-ADC4-F57687B237EA}' />
    </window>
    <window class='dashboard' name='Airports Dashboard'>
      <viewpoints>
        <viewpoint name='# of Airports within each State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Airport Per State to Positive Cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}' />
    </window>
    <window class='dashboard' name='Death Report (old)'>
      <viewpoints>
        <viewpoint name='Death/Infected/Population Metrics' />
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1777F54D-B7AB-4DF6-AEB7-EE97E4599829}' />
    </window>
    <window class='dashboard' name='Death/Infection Report'>
      <viewpoints>
        <viewpoint name='Alaska Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death/Infected/Population Metrics'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Hawaii Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Infected Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{240C9E87-1CC3-4E69-A5B2-CCBBBB493FEA}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{67A894E8-08FB-49BB-9AEA-DD5295CA1228}' />
    </window>
    <window class='dashboard' name='Disease Mobility Time Series Dashboard'>
      <viewpoints>
        <viewpoint name='US Mainland Time Series Map Chart'>
          <current-page>
            <multibucket>
              <bucket>#2020-12-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='25' />
      <simple-id uuid='{351FF79C-F4B4-45B1-9734-FDEE4AA23B08}' />
    </window>
    <window class='dashboard' name='Dashboard 6'>
      <viewpoints>
        <viewpoint name='Death Rate by State and Political Affiliations'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Pop Density by State and Political Afflications'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{7DB3422D-D731-4527-80EB-2C3B4120B23D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# of Airports within each State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airport Per State to Positive Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airports Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alaska Death Map Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAYVklEQVR4nO3deXyUVZ7v8U89tadS2VhCFpKwB0SURVlERXDlXpfGcXDU1vbadvfr3pnX
      OPf2vXOnu6fvzB1n5tpOd7+0pae7xw1sRwUFBEFRaRCEsBOEQBIgK9m3SlVqe56q57l/0GaM
      IRiyVKXI7/165Z/UU+ecP55vnXOe5RxTV1eXYbFYEGI0slgsFux2e7zbIURcKPFugBDxJAEQ
      o5oEQIxqEgAxqkkAxKgmARCjmgRAjGoSADGqSQDEqCYBEKOaBECMahIAMapJAMSoJgEQo0pH
      h4dPd+4iHA4DYAqFQoY8Di1Gg517DrD2/T1kuSI4bBbGZRcgb8KIUeH4FyVs3F/JmII5tLY1
      kpw8Fl/AKkMgcfXr6urilfUfYXOlYzKZSB2bhdliBWQOIK5ynV4vP37+ZTpbGwh2tqDr0R6f
      SwDEVSscDvPi2i2QPpUxacmEG0/TUX++xzEyBxBXpXBY5YXXNtKmp2MYOmpYJXnSIqx2R4/j
      pAcQCS8ajVJRWYVhGBiGwZHik/zDmrepD6eimC10eVqobe5EU4O9vis9gEh4n+zax8/WvM7i
      ebNISsukrsuCw53Z/eueNi6HiBoi4POQ5E7v8V0JgEhozS2tvLP9cxzJqfhTZxE0mXG4ex83
      Jnsy3rbGXv+XG2EiIRmGwYkTJ9iyuxiPJWvA5cgcQCSkUCjE7r1FNIScgypHAiASkqIotEVc
      OJPTBlfOELVHiJhRVZWX1r2Pzzx20GVJAETCWb/lE2oDLhTFPOiyJAAi4VTX1GIyDc2pKwEQ
      CUXTNDrCFkyKBECMQhaLBZvFNGTlSQBEQlFVlQ6/NmTlSQBEQik5U4rJOWbIypMAiIQRCARY
      t7UIhytlyMqUAIiEYBgG/77pY0jNG9JyJQAiIRQdKeZ4nTok1/6/Sp4GFSOapmns+MPnfFTc
      jN01uMceLkUCIOJG13U0TevepdQwDPx+P9U1tZw5V0VTexe1zT785jHYhuHkBwmAiKPDR47y
      6pYDOO1W0t1OAmENTyAKNjdJKRmYTCmQlIJ1GNsgARBx43A4MCWPR0lOoxPAAi5XbNsgk2AR
      NzarFUM34toGCYCIm8bmZpzJQ3dNfyAkACJuyqpbhvyy5pWSAIiY03WdxqYmPj94LN5NkUmw
      iL0zpaW89e5WTMmZ8W6KrAoh4sMwDM6dr+R3m4uIOgb/auNAyRBIxIXJZGLa1MmsumUmQV8b
      hhGfq0HSA4i4utgTVLBzfzFf1AZwpI6Paf0SADFiVNde4Fdv70Z3jotZnTIEEiNG/sRc/vtj
      d2ANt8RsSCQBECNKdlYmP3z8blLUOohBCCQAYsQZN24szzz1IE61CT0aGda6ZA4gRqxwOMza
      d7Zwqs2OxTo856j0AGLEstvtPLH6Pujqvaz5UJEAiBHNbrezYv4UNDU0LOVLAMSId/uti/C3
      1g1L2RIAMeI5HA7czuF5alQCIEY8s9mMwzo8p6oEQCSEx+67hWxLG+G2SnztTXQ2VRPRVAAC
      vg662hswDP2Ky5XLoCKhqKrKyVMlRCMRyqrqqW/u4O5bFuBw2PnV7z/ENn7GFZUnPYBIKDab
      jfnz5jJ//jzKqxppbPdTOGMare2dkJJ7xeXJCzEiISmKQlKyG6/NzRvvbqPZE8DmuPKH6KQH
      EAnJZDLx4B0LmZoSpL6prcdzQ4ZhoIV77wp/KRIAMSKpqkrxFyf5dNde3t20heLiE72OmT5t
      Cv/1iQdRwh08et8yzIFG9GiEXEszDy2agM1fi62zHH9nW5/1yCRYjCitra1seG8jpxs0os7x
      mK12wgEvOZYWfvrXz2Ay9d4dprWtjVfWvsU9dy7nt29u4foZeTz9nUdQVRVd1/nRL97sc34g
      PYAYEbq6uvjps8/x2Pee4XSzCevYqThcKVhtdiwWK/evvOOSJz9ARno6VW0qv/y3t/GbUihu
      trJ1xy6sVivt7e2XfYxCJsEirsLhMB9+tIPdJS3gns3M267rfYzfw6T8iX2W0dXVxaxsJ08+
      8T3Onq/kvU+P8PEpK1v2rEFxuLFfZk8BCYCIm3PnzuFyuSgurSFqz8Fq7n06BrztmCO+Pn/9
      AVwuF6sfepC9B49ztKSCgjFWDtd04s6a9o1tkCGQiDnDMHjltbX81d+/yKd7DrD8pnmkGy2X
      PDYajRBUDTRNIxQKEYlECAaD+P3+7mMURSE9PZ2PD5TSZspk064TWJzJ/WqLTIJFTDU3N7Nj
      1z72V4RwujOIRjSi0QhmswWz5dILoRuGgeFrIBgK47AqRFGI6jrTslJw2q1UNHhYODOLXWUB
      7EluDMO4bI/xVRIAETOapvHSml9zpA4y8wsHXd5XX5xvrCwha/LsKy5DAiCGXTQa5b33P+RA
      SQ2K3UXUmdnvX+jhJpNgMaw+27OXDRvW06GnkDnzFnRgZJz6F0kAxLA5c6aUjds+JZhxPWPS
      YrfY1ZWQAIhhk5U1gdRxuUT01GFb1WGwZA4ghpVhGOzZf5gNn5VhS4ntup/9IQEQMdHQ2ETR
      oWO0ePy0eUPUtgWxp+fEfYcYCYCIqUAgQF1dHcluN3/z9/+CkpJD2sRZcWuP3AkWMXX48GEA
      Ptt3kPRZK3BnT49re6QHEDEVjUb58T/+Ep+jAHuSO97NkR5ADB+Pp5O6uvoe/zObzfzFU49g
      Un3DUqdhGEQjWr+PlwCIYZOamkJ2dlav/+fkZPOjp+7B21w9ZHV9+VhE0NvK1GQPQV97v74n
      ARDDxmQy9fnIQ2VVFQ730GyOZxg6aks57lANi6em8OdPPcrSacnoevQbvys3wkRcTMzNQQuV
      YXO6ruh7ejSKYv6PS6ehLg/XZcHKb60iNyenO3DzZk9nb/kxklIyLlueTIJFXBiGwdHik2zd
      fYwLrX6syWNJcqd1f66Gg+BvxmEBu91Kkt1KTWsQh+7DwIQydgZ60MPd83O5Z8XN3Sd+Y2Mj
      UV3njc27aIpkYFIuP8iRAIi4MgwDVVUpLz/LF2VVHCuvJ+Dr4MlVt3PdnNnYbLbuY71eL/+0
      5k2m56Ry6FwnKxdP4/6Vd3R/3tTczF/+46s4HA5SJkzBYrVdqsoeJABiRInqOoauY7FcenTe
      2NREssvF/3vh3/jBd1aTm5Pd/VlrayunS8vZsLsUa1pOv+qTAIiEFI1GMZsv/RjF/kPHeHP3
      eexJKd9YjlwFEgmpr5Mf4MZ5czCHO/pVjgRAXHUURcFu6d9rNxIAcdVRFIVZBf17AUcCIK5K
      C6+fScD7zcMgCYDok8/n4xcv/rrX/0OhENHoN99ljSctEunXi/cSANGnlpZWTtZH+PCjj6mr
      u7hL44atn/A/n/89/+u512ht69/zNsNB0zQ2fbCDxqbmXp/5/X7e+ugQzq/cWOuLXAYVfXpr
      4zYO1ZlRQ360UAAj5ME5tqD7BtPMND9PP7YqLm27UFfHqxs+JupvY/WD9zGr8OJ7Bbqu85t1
      71HudfXrbTMJgOjTJ7v2srW4A4vVTtDTiM0IETCcuDMyAQh5W5g5wcaSebOYf/2VL0o1WF6v
      l//7m800NjYwvSCbkBqh3RvEkpKFzZHUrzIkAKJPmqbxyttbqaxv5y8eW0lOdhZVVdWs/2gf
      DWoaitkChoHf00SGPUL2GBeYFO5dvpCCgvxhb9+vX9/AWZ97UItsSQDEZX35nP1XTzLDMHjm
      714gmlKAze4ELj6l2dXZitXm4Lt3Tmf+vOsHXfe2T/ew8+AZkpMcrLihkFuXLuyu/51N29lb
      7sOenD6oOiQAYkBCoRBHjn3BtqIyfBE7t89OY+7sQhqbmrjxhgWDXvqwpqaWH7+0kXF5F9cQ
      PbP/Ax79T0t49JGH2bnnAJsPXsDWj0cdvom8DyAGxOFwsHTJjXR2+dl3rIz7Vz6EyWQiP7/v
      zSj6KxKJsGnHXrxNlbjHZONwpZCWNZk3th/i42O1uMbm9+sKT39IDyAGxePx4PN1kZubM2QL
      3u4/cJC39jVitTuGpLzLkR5ADEpaWhppaUPza/ylusY2LDb7Fa3zP1ByI0yMOEkOG9WnDxHs
      8gx7XRIAMaJ4fT7qaqtwpaST5B7cFZ7+kCGQGDG6/H7+6bcbOVtRT6CzlXETh3/VOAmAGBEM
      w+CdzTsI2zPJm5lJRFNjUq8MgcSIUFp+liPVwe61hKy22FyZlACIuItGo7y+eS/OlKFZKOtK
      yBBIxFVVVRXVNbX4LWP45kVMhp70ACKuCgoKmDWzEK2rLS71Sw8g4mrDpm0cKW+4+GRpHEgP
      IOLGMAymTs6j7GwlzrTeq0jHggRAxE0gEOAnP3+NzIKZcWuDPAwn4kbXdUpKTnP0ZCkn2pLj
      snu89AAibhRF4ZprZnGkrAEw4tOGuNQqxB8pisL//t4qtNZztNZXxr7+mNcoxNfk5uQwOSsd
      R8RDV0MZDRUl3a9iDjeZA4gRIRwO4/V62bD5Q/aebiRrynUxqVd6ADEi2O12xo4dS+aETOpO
      F3G26H38nhY8DecJ+jrQ1NCw1CsBECOGyWRiyYI5pGRNI2vKHKKeav7y4VuYnNTBbZMV7KHG
      Ia9TAiCIRqOcOlUS72ZgGAYnTp8jb+YCksdPwpl1DT978WUqw+PIyEgnP7P3xtoRTaWpdP+A
      65QACEKhEGteW08oNDzDjP4wDIM1r7zJhj+cxNANDF3n5L5tZBQuw+ZIYuNnJZxq7n26tp8/
      jNl1+Z0gL8f8k5/85O/62o9JjB6qGmbbx7tJdtrJSE/rc4+uoaJpGuFwmIaGBlJTUzGZTORl
      Z2IE26jzKVhsDlLHZuFIcmMyKSjONMwWa48yohGNxoqTTLzmpgG3Q64CiW5Hik/xztadTEix
      8syff/+y2xANlGEYnDh5mnXv78avmbEZAeYUTuJPVi4jPT0dv9/PL1/dSE2HTnLGhD7L0fUo
      RvNJ/LhJmTBlwO2RAIiYaGlp5eUNO7CYFSqb/DgyJnZ/pob8PLl8EvPnze3+3/5Dx3hzVzl2
      16VfjNd1HXNHGeGgH2vOPEymgY3mZQ4gYiIlxU1ZVRMNWkaPkx9AMVvo8gd7/G/xDXOZk21F
      CwcuWZ6iKAR1GzPzx6GGLn1Mf0gAREzY7Xae++FjZFnaCX1tvR/FbKW6oecLMSaTie89too8
      Z1evu8IRTUVtKWfJ7DxWP/QgJq1rwO2S2a+Imczx4/nh9x/m4NETbPvsODX1TbjtZpbeMJsZ
      Uyb3Ov7ixHgsZ082YbUno4V8WKIB7rhxGncv/y5O58WVqa/LT+V0+8BWkZM5gIibqqpqLtQ3
      sHTJoj6PMQyDCxcu0OHxkJGeQXZ2ForSc+Di8Xj4mxffw5mRe8VtkACIq8Kzv3qDdtP4K/6e
      zAHEVeG2GwoHNBmWAIiE1+Hx8N6uk/3eF+yrJAAi4VVUVBLENaDvSgBEwrNYbYR9rfhaanp9
      Zuj6Zb8rARAJb87sWdw1fyK2r+0oowV95DvaCfoubuhtGEavewoSAJHwTCYTmBRs7nEARCMq
      ngulPLAwh6ceuR/FW0Wgs5WuqoOEujq7vxf2NMiNMHF1cDnteNsu4EpycNP0dFwzZmI1RUly
      Ovn5//krPt69nyl589h39DQlrSomReG6fLf0ACKxaZrGz37+Av++6SPMJlg42c2Y1CQ27j7F
      3Ouvw+v10tbWxn13L+eaWTP5zup7saktaOEQMyZlyY0wkfgikQgVFZUYwIzp0yj+4iQhNcqi
      BZferPuTXZ+z5VgreS6/BECMPqqq8q/rNpI1PkMCIEY3mQOIUU0CIEY1CYAY1SQAYlSTAIhR
      TQIgRjUJgBjVJABiQDo7vTQ3t8S7GYMmARBXTFVV/vbZ52lpi8/evkNJ7gSLAYlGo8OydGIs
      NTe3yOPQYmAS/eSvrq6msvqCBECMPgePfsHabYdIMmsSADE44XCYnbs+45abbyLZNbAX02Ol
      9kIdWz/dz5lmHUfGRHRkaUQxSHa7HZvdgXWE7zGxt+gI7+wuxZo8FmvSfyyhKJNgcVWLRqO8
      vn47xRfCWJ29t1iSy6DiqrZlx25ONBqXPPmjEU0CIK5emqax53gFFmvvEY4aDhIOeGUOIK4O
      0WiU8rPn2P35QdLTUxmX5mZGYSE+zUxKr2MjVBTvYXJ2mswBROJram7m1Xd3Uu0xcLrT0UJB
      bsyJcr6uDXM0SFUgBRMG6Y4IJ44c5Kb5s7h92U1ENE0CIBLb6dKz/GZTEebk8T02yNB8LbQ1
      12NPSiHc1c5/uX8JHq+fQDDEzYvmUVBQgMlkkjmASFz1DY38dlMRFncmYJCq1dFy+g9EtDCG
      1YUejTDOEeb5v36S25cvw+ftYMWti5k0aVJ3WKQHEAnruV+9QpPp4q4wIb+XOwodfHCsBavV
      wtxsBU9HG4tvXEDZufM8/eTjlyxDJsEi4RiGwVvvvs+pimbGTc7BAFLNAa67dgGu5BoK8idS
      fr6KLZ/up7Kqhie/vZrTp88wY8Z0oOdzTDIEEgnl2PFi3np3C58cOse0CUloaoiakv0o3io+
      3PExJl1j+tTJuF1JTJ1xDd95bDUTMifw7D8/R2NjE9u2be9RnvQAYsQ7dOwEJeVVLJl/La+9
      8TaTC6/FlTkFT+sJrDaNp751Kwo6M2ZMpyA/D4BbblrITYsWoCgKWz7YxoyZ19Dl7+LY8eMs
      X34bycnJgMwBxAjV6fWyYetO6ls6adGSsTiS8TeW09pQw+PfWkFIjTK7cBJrXnuXXz//0z63
      SNV1ndfXruOJx7+NYRicPXuWA4cO8+QTF+cEEgAxIv1+w1aONloBuk/ujuZanN5ynvuHn+J2
      J2MYBrUX6sibePntUTVNwzAMig4cID0tjcLCQmw228WyJQBiJDEMg8PHT/L7HcexuCcQ9DRh
      1QMoisKENBsLZhUwfuwY5sy5dkjqkzmAGHG27ynG4p6Av72e//FnNzP1K7vIK4qCYRjsKzrE
      nGtn4f7jWH6g5CqQGBGi0ShwcbjzxAPLmDM2xA/uv4Hp06aiKEr335fCWpRDh48Nul4ZAom4
      One+EsWs8K+/e4XvPvFY97X6WJEhkIi5SCSC5Y9vkG3esYfzVTUsnTeH9o52fvHCS1x37SxW
      LF8ek7ZIDyBixjAM3tn8EUUlF7h9Xh57io6yauVtzJ8/H5vNRiQSQVEUTCZTn5c1h5rMAUTM
      +Hw+tu8rQXeOY90HRVjMJto93u5LkhaLpTsAsSIBEDHjcDjISVUoPbAdVVWx2+wsXbI4rm2S
      OYAYFqqqsnbDdjy+AH+6cin5eXkcOXqM+mASrvQs7lowkR88/VRMf+0vReYAYli8tXE7hy6Y
      6Gyq5D8vnETxmQoa6ut5YOVyciaMY861s3tc1owXCYAYchu37eTD3QfJm5jL6ntu4pPPj5CR
      msx9dy3DNcIWz5IhkBhStbW1fHj0AmkZY/nRf3sUs9nM9GlT4t2sPkkALuHAwcNs3HkEm93O
      jJxUHn7wPqxWa7ybNeJ0dnbS2tpKIBDk2mtnA7B+83ZmZLp5+uEHEmIBXQnAJUybOpnI5g/w
      hLJprDvF+IwU7rrzjng3a0TRdZ03317P2cp6HnnoXgCqqqpZOHc2S5YsHhHj+/6QOUAfNC1C
      R0c7GRkZ3XctBRw8Uoyqhlm4YC4HDh5i8aKFmM3mhDnhvy4xWx0DVquF8ePHd5/8Bw4dRtf1
      OLcqfioqKgAoO3uegrxcbDYbt9y8FKvVmrAnP0gA+uU3L6/ld+vejfs166Gyt+gIG7bsuGSg
      Q6EQ23bsJBAI9Pj/l+P5bz+8iom5OTFpZyxI394P33/qcZ6KROLdjCHR1tbGS799lYysSdx7
      5604HI4enx8/cZLztc0s+9r38vPzAa6aH4EvyRwgRjo8Hg4fLebOFctQVbX7+ZfhcLT4FGPS
      UynInwhc3MTizJlSvig9z869h3C605mdn05zuw9PV4jCyTnoaoAH7r+P3NzLv154tZEAxEBj
      UxP//POXuHvFrdxz1+189tke8vLzaWtvZ8G8ucDFJyXXvL6BqXkTuHvFLX2Wpes6ZWXlTJpU
      0P3rXXK6lLy8XNa9vZk/ufcOys5X09LUSHKSnTvvvJP9RUXU1TeQmppGQX4eeXkTcdjt1F6o
      IxwOo6oqkycVYLfbE3o8PxASgBgoOVOGoUeZWTgDs9mM1+ulpraWqVOmdJ/EhmFQcrqUibnZ
      pKam9vi+YRh8snMXd6y4jUAgwN/+y8tYFYN7b7uB7Oxsnv3l73hy9b28uG4LqbYoVlOUZUsX
      8eCDq+QK1jeQAMSBYRgYhkF1dTWBYIhrZs38xuM9nZ2kpaZiMpl4Z/171Da1k+ayoGMhMyuH
      Pbv/QMSawv23L2TxwhtxOBxX3Xh9OPx/5nWFLfa71DkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Alaska Time Series Map Chart' width='192'>
      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
      tAFZsQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death Rate by State and Political Affiliations' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death Report (old)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAczklEQVR4nO3daW9c2ZnY8f+9dW/tC4tVRRZ3iuKitaVu2213u63uscf2OBMEmC+QCZC8
      dAwE+QBuJO+DSSZBEgQJkGAQA8nMi8CTxFEv7mlLrV7VrZ2iRC2UqopFsvblVt3t5AXbaqvV
      3aQokrXw/ABBEsmqeko6T91zz33ucxQhhECSetxOh7G2y3FIUkeYprmjx8kE2FUCIUBRlA49
      /mDz+XxP/Zi+TYC7txdp29C2BSePznLp0hVUReHQkePU1x9SaZgYLZPnTp3k1rVLuCjE09OM
      pmKA4M7SDdquh0gszvjI0Ne+zvLyMjOHD7M5ZBt8ejHDC99awKzkeO9allRUJ5YcYzyd+Nrn
      MOtFqm6QZNTL++9/yEsvfe8Pvuvw/rn3iKdStB2Vk8fmefr0cMhmNxgdHX7qR/a7vk2AyUNz
      qKrKhd+9y4Nlh/j4LJNxhY8uLfHt548yoqp89v55ysUsdSJ85+QMFy58wGjqe7SreUqWn28d
      nwGgUS1wP7NGKDJA2OPgT4zid+vkqy5erxdFCO4uL2G5LRz8AAi7TTQ5yvG5NOffu8DY8Evc
      ubVI2/Fw5Mgc2ZW71JsGg8MTVFducL8R4PTxWVqNKktLS+j+MIcmRzefy+NjYeEIn1y4gCkE
      q3dvU2/ZzM4v8GB5EVfxoAciTI+nuXv7Fi3L5fDcPGurWVrVDSwtwJ1b97DcU0yNj3Ts/6Qb
      qZ0OYM+4Fu+f+ztGDh/FbLUJh3yoehDXbqIqgk8/vIAvOY7XaRMIhQEF2DyRqpeLRAa++MS+
      cv0WR48cobr6ED3k4/qNWywt3iQcjfDw4UNKmZu0vCnm5w/j+XIcioJPVcjfv4YdHGEy5eXq
      rRyDg4Ooqofr166RHkkzPj1DYiCMNxBmfn6efHbl0VPUShu8d/4c/sEhnFKWQktjdnKIK9dv
      sVasMD+/QDm3QmblNk4gycLhca5eu8nNq5+ihIc5ujDD6MiYHPxfoU8TQPD++fMc//bLHBob
      IpWKk8+XaFXW8YWTXProAqNzz3FsbprwQJJacQ3XboOqAzAwNMZG9h5CCFzXRUEgAFcI9FAC
      1yhSaQsivs3h7tg2Hk1HuC5fXosQrk3LBY8QZB/eI1cyGU2G+OSzq8zOzRL0aiiKius4CAGq
      uvlf8oerGpF4kqOzk5SqdYQQrOUyrOSKTIwObaat2Dx3UJXNP7vCBRRCAylmp0ZRUBDC2fFK
      ST/zvP766693OojdJ6iWKzSbDYqVGunxQ7QredYqbY4dOUytVqVtNCkUSkQTaYKqxUomz5Fj
      x9E1FVXzE/IKVh5mMR2YHhti+c49oskRErEIPtUhNDhKLBxAURTSEzMUMsuUawbxwSTRSBCA
      fD5PtVLmyPGTxBLDuEYZRygMDCbQsdgoVogODJJKj1DM3kfxBggG/ESjURRFIRqNAqAoKsOj
      4wRVE8s3yIAPLMclHB0gu7KMadkkRiYZGRmlvpEhX6hz5Og8mkf9/Dk8OGaDcqPNQDTSwf+X
      veM4Dpr29DN6RV4H6G3Xr1/n2LFjnQ6j49rt9o5WgWQCSH1hpwnQp+cAkrQ9qhCCdrvd6Tik
      HtQP40aFnV9G7neNepXFS5/hylniV+qHcSOnQN8gd+ca/+VX/wvH7XQk0l5RXNcV9XqdSKQ/
      l8eeVaNaJhQd6HQYXalWq3XNuJEnwXtEDv7+JhNAOtB2LQEKa1luLd/F+ooJs2nUqbcs7t+/
      v1svt3tcm0Kp+uivzfI6N+88eKKkoVQqPfHQTr0fxzJYXFxk4w/i/ip37tx59GfbMqjVW2RW
      7mJY8qTm93atGvTmjVuc+s7zfPDhJ8QCHlquxsxYklvL94j6VfJmCE97g0I+S3QwQana5tix
      I4T8+m6FsDNOk6s3lvFTx0YnJJo4yUN89snHoAeIBxUUPcTFixf59vOnWC8WiSeGWc3lqDcN
      pqam9j3kdm2dqqmTu3SR4cEB6i2LWEjHcFR8Pi+O60XYDYrFIvFIkFvLd4kPBFjOthlPaDhC
      ZWNjg1h8kNX8Gpru5bvffn7f30c32NUpkObzIyyDlYdZNFUlm89j1Aqovggj42PoXj8jg2Fs
      1Y9iNyhVm7v58s/EVTR8miAciTGSirCS2cCjqliNGhMTE6TTaSprWYTXTy1/j9DQNGG/t2Px
      rmYecOjwLOV6m8EArG5UGJ+cJp/LUm8Y1Gp1YLMeyaiXcfUAo6NjmEadBw9zzC7Mkcs8QA9E
      ca1Wx95Hp+1KAriui8Dht2++TTw1QjwaolQuU61UaLsebEXl/vVPcYFSw6SykadQLKPi7MbL
      P5Nqw8Sj2AC4AhqmQ6lQZSDsoVyuUG4LPvnsCu1mDccXZu3BQ1x/jOzNT3DVJ4qf90W9JRhO
      DaK4DrpicWetgWuUOXfuPRJDo1QLD2mZFh5No1ypYNhgtl1WV67TcjwMDIQ5/+45ogNxhN3a
      URFZv5DLoH3CaNbR/WG0fVzW6Idl0IOb+n0mEAx3OoSetCsJsLKyQiaTIZFIUK1WqdfrjI+P
      02g0OHXqFIZhcPXqVTRNY25ujjfeeIOXXnqJO3fuEA6Hee6553YjjKf28ccf02g0ePnll1EU
      hbfeeoszZ87gui5nz57lzJkzXL9+nRMnTjAwMMDbb7/96KQ3l8sxNTVFPp9H13VOnz69LzEv
      Li6yurrKwsICDx48IBKJUCgU8Hq9vPjiizx8+JCVlRVmZma4ffs2fr8fr9dLtVrl2LFjRKNR
      Ll++TLvdJhaLsbGxwdzcHDdv3mRhYYGRkYN119iuHDCj0SiJRIKhoSESiQTHjh1jenoa191c
      bgsEApw4cYJKpcLZs2cpl8tEIhFCoRDz8/O7EcKO+Hw+LMuiVquhaRqTk5M4jsNvfvMbyuUy
      fr+fwcFBTNNECEEwGKTZbBKNRh+913A4TCqV2reYFxYW8Hg8xGIxZmZmWFtbI5lMoqoqQghU
      VSUQCFAulwkGgxQKBQzDYHR0lEajgaZpPPfcczSbTRqNBsePH2d1dZVgMEitVtu399EtPL/8
      5S9fN01zR/On37t69Srtdpt4PE6ttrlqsrS0RCaTodncXOm5desWsViMV199FZ/PRyqVwjTN
      fR08X1av1x/d9iiEYGlpCdd1OXPmDH6/H1VVyefzKIpCq9XCMAxUVWVtbQ3btjFNk/X1dUKh
      EPF4fM/jFUJw7do1LMvC4/GQyWQYGhqiVCrh9XofxVIsFkmlUhiGQTKZRNd1SqUSqqpiGAbL
      y8v4/X4GBga4d+8e09PTVCoVgsEgg4OD247nWcfNbtrxHWF7fRLcarXw+/178ty7pdVq4fP5
      vrYfz1bf7xZb/Vvv9vvoh5NgxXVd4bouHk9nlvSk3uU4TteMmx0XwymK0jVvQuot/TBuZDGc
      dKDJBJAONJkA0oGmCiGo16pUKhXqja2L0wrFAgCuY9Nqb94TapltTHvrup7fPxagUCg+8X2z
      3aJSrWJv4x7EerVMy/riNdutJpVKhUq1iut+UcxcKRWwXZtiobLlc0oHjwpQKqzx5htnKZaq
      OLZFrdbAdWzOX3iPetPAMttUa5tr5otLSwBUMtf5q1+/Awg+OHeWTy8vbT623kAIgWm2qdVq
      OLbF+Qvv0Wi2uHFzcfNrrmBpcQnLMhGAZVkAfPDOO6ys5njnt7+lbQtaRpOWaSFch1q1imU7
      3L5+kbvZDbIPllkr1jBam0nYqFU59+YbrOQ2sF3389dxub+8SNtus7R4rwP/vFK30xRFYWL6
      MJlcnsmxYX73ztskUkmalko2m2NqehaPVef+gwfosbE/eKjKcMTHRq2J5g+jKS7n3n2XZDKO
      44ty/9pVpqaSEBgjm81xaKZOpbDOg3u3aCibLf8WP/2A1PwL3Lx0kVdf/QEezcfs/AIJYXB9
      6SblQhksgxe+dYpbt5YplA0GfQaOGSSKycrKCtcqG/zsj3/IYCrN+NgYhw/PcPPy++CLUizX
      iHfHdRqpS33pHEDgql7m5+doGS3S6TRj6RS3bi8TiUap1x6/K2p6bo6P3z7L0NQcCAf0IPNz
      M9QrFVLDY8zOTiMcD+l0mpGhBAPJYRZmZ3HszX4yR0+d5oM3f83g2OEvIhAuq8UKYcWkUK6h
      aR6WF2/hCYRoNZskkikmJifRvT7m5heIhgNPvKmaYbKwsIDi9n7bDmlvPWqOq+k64UiUkFdh
      6c4DTp46RUgTZAs1krEQbcfD6OgIiYEBIuEwiuohEI7j9WnMTIyie4MkIjrLK3lOPneCgN9L
      JBLF6/MT8cF6tcVwcpBwJIKue4nHokRig9y9e48XX/wWHkVBweLO3fsMT8wyPTWFajfwhmJM
      T45SKlYYHRtjenKC5du3SaVHiIQjBP1eIuHNSkhN0wmFwwwnYly9doNDs0eIRSOEQhF8Xi/h
      z5vWSv2nJ5vj1oprFJou0+PpToUg9QnZHFc60GRfIEnaAZkA0oEmE0A60GQCSAfalutGdqvB
      7Xv3iUQGqNYNRtJJrA7fySVJu2XLI4DH5ycaDtNuGRjNJvnsCnXD3o/YJGnPbZkArUqBjUoT
      Xdfxe70k0hMEvOoTvTMlqRfJ6wBSX5DXAaS+JGwbt9HYs02+ZQJIXW3jX/0FmZ//gvaNG3vy
      /LI1otRxwnURrRZOuYKVeYiVyWKvruJUqrQXFxGGgbNR2PqJdkCeA0h7zrh8mcr/+J9EfvYz
      /MeP4RRLWJkMViaDnc/j1GooXi9aPI42NoY2PIw+OoInHsetVLAeZvCfPoXyDV0oZDGc1JXc
      RoONv/g3tK5cQR2I4ZubRxtKoY+NoY2Oog2l8ESiKPqzTUZkd2ipawjLon37No1z53HW1vCf
      OIE+NkrozBm8M4c6Hd5jZAJIu0K4LnY2S/P9D2hdv4H30CEiP/4x+sT4N05dOm3LKZAQLtVq
      jUgkTL3eJBQKIlwXTe/w3l5SV3BKZYyLFzE+uYgS8BN69Qy+hQXUfW6au2fnAHa7ycrKPWoG
      BCMRvJg4ipeZ6YkdByv1HuG6tBcX8QzE8SQGaV29SvP9D3AbDQIvvEDwuy/i6WCj3D07B3Cs
      Fk3HRzToUFjPE0kMoKkuAujuXsnSbhC2jWsYGJ9+RvHf/weUQADf7CzeuVlif/ZnaCPpru+a
      /U22TADNFyKddIlGowwOtQkFA3t2VU7ae9bDDE61iu/IAoqqbq7BNw2cWhWnUMDOr2Gvr2Nv
      FHCbDbAsFH8ANRhADQbRRkZI/vN/tu9TnL0il0F7kFMuU/3f/4fAqVP4Txx/9HXhugjbBstC
      mCauaSLabdxGE7fZwK1UKf/3X21OW77zbXBd3FYL1edHjUbQkkm04WE8yQRaMokaCqH4/Y8+
      4Z16HcXrRfV2bnvYryOXQXuMEALjo49xChuE/+RPHg0y4boIy0K025uD2DBwa7XN3ytV3GaT
      1qXLtK5cofHbd/AdP7454G0L4bgomobi1Td/9/lQ/H7UYHDzVyCAJ5kARSHy05+iT02iBoMo
      6vYqYjzh/tuITybAPhGOg9ts4tZqOMUS9vo6pf/63xDtNq2r10FREKaJcJzNAez1oXh11EAA
      NRxGDQVRIxG0dJpQYhDXaBJ88TuEXnsNRf98wG9jZS74yvfBtlFDoX14191PToGeUfOjj6n8
      9d8Q/Qd/H9/8PE6lir2+jlMs4mxs4JTLuEYLHBslEEANhdCSSTyDg5j37+MUS8T/0T9E9flQ
      vN5tDWLpSU8zBbJtm1qtRjwelwmwU0IInPV1Nv71X2IuL+NJJvEdPYJnYAAtmcAzmEBLJfHE
      BlACftQu3yet1z1NAhSLRf7p6/+On75yWk6BnpbbbGJc/JTmhx+CEIR/9EOsI0cI/9Gr6OPj
      nQ5P2oam0SKQmODTvCYTYDuEbW/Wtrz7O5xCEf+J48T//M/xDMZ7eg38oEolE/gUE0VR5RTo
      6wghsPNrNM+fp724iD4xQfD7L+Odnu7q2paD6mmXQT+7cp3/+LeXt98WZWxylszKXdLpYUzT
      ZGho6JkC7jbt5TsI00QfG6N16RKNCxdQ/QGC3/sukT/9e3IO32eOLcyi/M27WyeAx+sjEgqz
      nrlLsVIHx8QbSdJPw98uFln7F/8SYVn45uYIfu+7DP6Tf4wnLqc4/crr9TI8ENg6AVrVEsWa
      wdhIGo9eJhIbwLbafVULpPr9mxeMQiESv/g5WiLR6ZCkffCD52flOQBsHgGK/+k/k/zFz1ED
      T+44I3W/nZRC5PNrsisEQP3Ntwj/8DU5+A+YaDQiE8BtNGjfvEng9OlOhyLts0AgIBOg8e7v
      CH3/+7IE4YA60AkgLIvmRx8RfPmlTocidciBToDmBx/iP3FCrvEfYAc2AYTr0jh3jvCPftTp
      UKQOOrAJ0Lp6DX1kFE8s2ulQpA7aMgGEcNlYX8e2TDaKZSzLxjR7ewd2IQT1s28Q/smPOx2K
      1GFbd4UwWzTrJQxbpVHeoFJcQ9WDHJrq3dJfa2Vl8wbv9HCnQ5E6bMsjgN1uUqg7iHYZRfeh
      6V5cx+7pHWJq//c3hH/8x7LOR9r6COANDTA77UPXdWzbIRAMQA9XT9hra7i1Gt7DM50OReoC
      WyaA6tGIdLDj126rv/U24Z/8ZNudEKT+dqBGgVOv0769jP/4sU6HInWJA5UAjbd/S+jMD1A0
      eSeotOnAJIBrmhiXrxB86XudDkXqEkKIg5MAzfcuEDh1sivb+kmd4TjOwUgA4Tg0zp0j9Npr
      nQ5F6iKWZR2MBGhduYpv5nBH+9dL3afdbvd/AgghqJ09S+hHf9TpUKQuc2/lwTbboty9RzAU
      o9o0GB1KYppt0un0fsT4zMzlO3hiMbQ+a+MiPbu3/+7C1kcAj9dHOBTBdl1SIT+5/EOaprsf
      8e2K+tmzRP6g/bgkAZimyXLB3ToBWrUy5YZBOOCl3HaYGJsiGvT2RC2QtbqKaxjoE71buCft
      jXK5guFuozdoIJbkRCwJwFCPFU/W/99ZIrLsQfoK7174hFhqrH9Pgp1qFSuXw3fsaKdDkbrQ
      kflDtBuV/k2A+ptvEXrlFdnIVvpKs4emcI0+TQDXMGjfuEHwxe90OhSpS9m2jen0aSlE88L7
      BF54AUWWPUhfIxgMMpUK9l8CCNumcf48wVde6XQoUhdTVZU/feVkf+0QY62uUn/rbXwLC3gi
      /belp7S7YrFYfx0BCn/5b6n9+m/lia+0LbOHD22nLYqgWq1imwarawVM06TVau1HfE/NOzeH
      4vPhPXSo06FIPUBRlK2nQK7dZr1Ywa9a5Dbq1Mo6mj/Kocmx/YjxqYRfew1cF//zstOztLVt
      VYMK16W4nqfeaOFaFnowjGOZXVkKYa3m0EdHZd2PtG3b2CPMz+nTp1A9HoQr8HhUunVTGTub
      wzt7uNNhSD3iyrUbWx8BFEVF13U8qoqmeVAUBVVVu3J/MHt1FT090ukwpB4ghODse1f6axXI
      qdZQo/KuL2lrjuOwXmn1TwII00TYFspTbpQmHUyapvGzl4/3TwI4lQqegQF5Aixt249fe6l/
      EsDeKMjbHqWnoihK/ySAlXmIPjra6TCkHtM3CWCv5mW/f+mp9U8CrK3JKZD01LaxQ4zBnYdr
      pKJ+1mttBqMh2m2T0dHuWW8XQiAMAzUY7HQoUo/ZxpXgAOGAj1K5hGU4rBoVAuHEfsS2baLZ
      BF2XXZ+lp7atxlgbGxuk08OYokY6ncKxLAR0zdVgp1xGS3RXUkq9YcsE0PwhTp48AUAqldrz
      gHbCyuXk/F/akb44CbZzq+jj3VeeLXW/JxJACNG11Z5fx8pk0HqkV6nUXZ5IgKUbN/jrv/oV
      3XnP11dzqjU8sVinw5B60BMJoLkNbF+0Z+ZGwrYR7TaK39/pUKQe9Ng4b1YKfHj5NoemRnsm
      AZxqFU8sKvt/Sjvy2KgJRAc4PD2NLlzsTkX0lJyNAp5kstNhSD3qyWVQp81G0+6ZhkFWLieL
      4KQde+wIoCgePD6Fe9dv4Xz+NSFcSqUyQghKpRLtdhuj2exAqF/NzmbRR+QKkLQzT3zQR0MB
      xiamH/3dtS3KtQY+j8vy3QyxoIoWjHNosjvqbmQRnPQsvnTmKAhFYuBV0H//FcdmNfOATL5A
      q1HBG47jWq2uaIsihMCtN1DDsg2itDOPHQFqaw+4vJTFowlcNrND84d46fPd1efm5joQ4tcT
      rRZoHhRd3/qHJekrPJYAjquRHk5iN0ycL3+zC9mFAlqX1idJveGxMa77dKqlEori64nrAPbD
      DNpI99yXIPWex8Z5KJ7i8OQQhmF2TanzN7FWV+UKkPRMnvigN0yHylr+0TJoN7OzWXkEkJ7J
      YwkghMnFDz4jGO2NVRWnXscTjXY6DKmHfelCmJfTL5wgFI91/QmwsCyEZckiOOmZPH4EcF1A
      YBntrp8CObXNEmjZCU56Fo990K9c/oxV2yWeiD/KDCEEruuiqgq246J5PAghUDtcfWmvraHJ
      IjjpGT2WAMGBJKfHRgig8Ptdtlyrxc27WSbTcZbuPCSVimNZLjOHpjoQ7hfsbFYWwUnP7LGP
      8dT0JFFdR9e1R8ugquYjHNAxLYuR0VHMZh2heDpeCmGt5uVtkNIz27oxlt3GdV0codButRib
      ngW382cIdn4NbVgWwUnPZuu2KN4A09PTAHxRdNDZ2pvNTnBN2QlOema9UPHwBGEYKJoui+Ck
      Z9aTCeCUyqgDA50OQ+oDPZkAm5vhyfm/9Ox6MgGsbBZtTHaCk55dbyZALocui+CkXdCTCeBW
      KrITnLQrei4BhOMgTAtFLoFKu2BbO8Q8yJdIRLxkNmqMDiUwTZNkh+pw3GoVNRySRXDSrtjy
      CODxBvBpKpW6Qdyn8SBzn1rT2o/YvpJdKOCRm2FIu2TLBLBbDVZXcyBgo9FmJD2OX1c6Vgtk
      ZWUnOGn3bGuHmOeffx6A8T0PZ2t2Lof/uZOdDkPqEz13EmyvrctOcNKu6akEEELgVit4IpFO
      hyL1id5KgHYbPBqK19vpUKQ+0VMJ4JTLeGKyC4S0e3oqATZvghnudBhSH+mpBLAyGfQxuQQq
      7Z6eSgA7n0eT1wCkXbTtBHAdm6bRwnEcHKcz9wQ7xSIeeSOMtIu23QAu++AeuUKDoWQUR3iY
      mZ7cy7ieIBwH12ihhkL7+rpSf9v+FEhRUFwX07YQgn0vhXAbDdRgQG6HKu2qbR8B0qPjBKIt
      YpEQruvuZUxfySkU0WQRnLTLtp0Amu4jEfftZSzfyMrlZCt0adf1zHzClrdBSnugZxLAWl2V
      neCkXdcTCbBZBFdFlZthSLusNxLANAFQ5WYY0i7riQRwq1XUiPz0l3ZfTySAvSY7QUt7oycS
      wMqtyvuApT2x7QRoVArcurtCuVxhfX19L2N6gp3NyiVQaU9sOwHya+vYLYNcdoWaYe9lTE/Y
      bIUyuK+vKR0M206AVCoFKKRGJgj51H2rBRKui2g2UcO9sXex1Fu2XQoRGUhwdGD/a3HcZhPF
      60PxeLb+YUl6Sl1/EuyWy3gG450OQ+pTXZ8AViYji+CkPdP9CbCaRx+R26FKe6PrE8DO5eR+
      wNKe6foEcORmGNIe6uoEEJYFtoMSCHQ6FKlPdXUCOPU6ajQiN8OQ9sxTJIDAMAxs28ay9meD
      DHttDa1DO9FIB8O2L4S1m1UuXb1LOhnG9fiYmZrYy7gAsLM52QhL2lPbPgKsrW1gtevYQkU4
      7r6UQmxuhypXgKS9s+0jwMT0YUbGp1AUZd/aojjr62ip1L68lnQwbTsBADRt88c9+1CXI4TA
      rTdQ5WYY0h7q2lUgYRigayjaU+WoJD2Vrk0AeQFM2g9dmwCyBELaD12bAPI+YGk/dG0C2LlV
      eR+wtOe6NgGccglVboYh7bGuTABh2wjTRA0FOx2K1Of+PwSER45hu5TYAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death by GDP and Pop Density' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAfDUlEQVR4nO2d2XMk13Wnv8ysfUGhCoXC3kBj7w3dzSbFJtVsihSlsWnJWsZje6zxPExM
      xDzM2/wH8+CIeZrwi98m5sVhy2HTshbbY0sURclcJFEiKbIXoLDvjR2ovSqXOw9gQY3uBpAF
      dC1A3S+CERXNvHlOJvLkPXnv756rCCEEEkmd4gCQMSCpVxzFH6lU6qmcMJPJ4PP5Dj0mn8/j
      drtLPrdpmmiaVpNtzqqtWvfPsiwURUFRlGPZcgAoikIwGCzpBIdx1Lk0TTsySJ6EYRg4HI6j
      D6xCm7Nqq9b9M00TVVVLDoCiLbWkVk+J47xRJJJyYCvcLFNnbDROONzI6voWkaYQ28k8QZfA
      0FwE3W4s1UFrLGrLqGmaJ3JaInla2AoAU0+Syhik8htc7I4wvm4R9bmxVHBZJtPjcYaeuYlp
      mpimiWEYh5/PxjFPwrKskttVqs1ZtXUa/DvOIE7RlmJnGFQIi9mpSQKhMBtbCdqaQ2wkcgRc
      AkPzEPR40A2DcLiRZDJ55DfAcT+CZd5beVu17t9JvwFsWVMUlZ6+AQCi0d00p6GxJHv7kCmQ
      pFaoykfwWcY0LSxLzqucFkrv254CZ3UUaGEtwc8+mQcBX39pmAZ/6WmepLJUpQc4qynQh/EH
      fP3WMJ+/0sXdmbVquyOxQVV6gLPKzYsdfPffRlFVhW/evlBtdyQ2qEoAqOrZ/PSIhf3859+5
      Wm03JCVQlSfRsqxqmJVIHqMqAVDqmK1EUi5kAEjqGpkCSeoa2QNI6hpbo0DCNPj0zqe0RiMs
      Jw2iASebydyuGlR1E3C5EA4XbS321KAyACS1gr0AwMKpauykC6iFDMl8mEa/B6GAS5jMzUwx
      cPU522pQXdePJbCSCsjK2zoN/p1EDWpPDIeC2+slFI6wtaURiwbZSuYJuASmFuDStRYMI4+m
      uXeXmR3xcDscjppWGNa6ArKStmrdv8qoQTUnvf27atCmpiYAGkIl2dt/PpkCSWoEOQokqWvk
      KJCkrpEBIKlrZAokqWtkDyCpa2QASOoamQJJ6hrZA0jqmrO5NEsisUlVAkCWY5fUCvbEcJbJ
      6P17NEWbWd3YpiXauE8NGvR6MCxojkZsGZUpkKRWsBcAwsI0TR6s79DfFiC+ViDq0zAVBcUq
      EL87wfCNF2yrQU+DwrCW/aukrdPgX9nVoCBwu734AwGmH6TobA6xmSiqQd0MXb5CIZNA8zXZ
      UoMWCoWaVhjWugKykrZq3b+KqEFVzcXA0BAA7R27/xZtLsne/vOd0bIoktOH/AiW1DUyACR1
      TVUCQKZAklpB9gCSukYGgKSukSmQpK6RPYCkrpEBIKlrZAokqWtkDyCpa2wLL5amR1E8jazv
      pIk1eh9Tg5pCIdbcZOtcMgAktYKtANCzO8zNL+KNOtHIk8i6CHqcCEVBEwYT9+8xVIIaFKh5
      hWEt+1dJW6fBv7LvFG9ZJuntdRIFldT2JpGmRrZT+c96AA9BrwfdNIk2RWztFJ/NZvF6vSU7
      LRWQlbdV6/5VRg2qagQjLQQBWndloM0nUIPKFEhSK8hRIEldI8uiSOoa+SqW1DUyBZLUNTIF
      ktQ18lUsqWuqEgCaplXDrETyGFUJANM0q2FWInkMmQJJ6hqZAknqGtvCi4XJu5juJna2Nog2
      hdhKfqYF0tw0eNwYaLTG7KlBZQokqRVsBUAhvcXU9DxmUPD8QCPxNYuoz4VQFJzCYHJstCQ1
      qF3F6KNIBWTlbZ0G/8quBhVCYOQSJLKC1bUN2mMNrCfyBJwCU/tMDWoYRCJhW2rQfD6P2+0u
      2WmpgKy8rVr3rzI7xSsKTm+IJi80RRoBCIVLsrcPmQJJagU5CiSpa+QokKSukRNhkrpGpkCS
      ukamQJK6RqZAkrpGpkCSukamQJK6RqZAkrpGpkCSusaWFMKydCbGxnE7NXYMB9Gga19t0IDb
      jaU5aItFbRmVKZCkFhidW7erBdLwuBwULA3VSJPMOwn5PAgFXMJkdnKcgevP21aDFgqFYwWB
      VEBW3tZp8O84atCNnTSfTD6wFwDCKJAzIRQKYCWgJexnM1VUg/q4eO0ZdD2L5g/Z2inezjFP
      QiogK2+r1v07rhrU6XBgmMJmbVCnh8HBQQBaWlqAk6lBZV0gSbVp8Lu5deWcrAskqV/OtYSq
      EwCldlcSSbmQASCpa2QKJKlrZA8gqWtkAEjqGpkCSeoa2QNI6hoZAJK65okBMHn/U37xiw8p
      XQFiD5kCSWqFx6QQmZ11RqfmiIRjFCVGlqUzMTqGUJ3k83lC4RCJVJ6AS2BoLgIuFzjctLXY
      U4PKHkBSKzwWAN5gkNTGFiouiu9pBRW3x8XaTp6BjkamtwQRvwdU0CyThZlp+kaeta0GPQ0K
      w1r2r5K2ToN/J6kN+lgAKKqb688MMz6ToChYFpaBbir0n+9ifSvBQHuIjUSOgFNgaEEuXWtB
      NwtomseW0rNQKNS0wrDWFZCVtFXr/pWlNqjqcJFLJ/d6ANXhpn9gAIDGxt3aoP7D698eilwQ
      I6kVnvgRvL25xPZmjnKt3JVrgiW1wmMBYOpZdhI6wfYwnjIZlR/BklrhsQBYuHsHX0c/IatA
      ukxGZQBIaoXHvgHaL1zGvbUDsefxlcmonAeQ1AqPBYDT7aW11VtWo7IHkNQCQthcEyyRnCUs
      y2JlZYXZ2dnqBMBxJi4kkpOSy+WYnJxkeXmZaDTK1atXqxMAsiqEpFIIIVhfX2d8fBxd1+nt
      7WV4eHg3/bG7SV45nJJIykk+n2d2dpbFxUXC4TAjIyP4/f6978+i5MJeYSwhSGxv4fMH2NpO
      EA43kM0buDWBpThxOlSEEDidTlvOyQCQlAMhBBsbG4yPj1MoFOjp6eH27duHKg/s9QDCIJVI
      sDQ3g+5rIptJki0YuDSwUMin0kQ7e2gOB7Esy9Yw53GGQoUQJbc7qE0qW+B774wB8LVbQwS8
      rhPZedr+1YqtWvevKGqbm5tjdnaWhoYGhoeHaWho2HvbP+mcRVv2egDLZG1zh46OdhbnZkk1
      RMEUCEUgVA1N0zBNC0VRTs0Q53t3Fvjyc30AvH93gS8921tljySlkkgkGBsbI5PJcO7cOW7f
      vl2ymM5ecVzVyfneHtweD33DQfxeN3ndxKEKhOJAUxWEEHsBYOcj9zgfwpZlldzuoDbXBlr5
      1w8mAfjyc337jjmOnaftX63YqjX/dF1nfn6eubk5fD4f/f39RCKRkl+8RVuKeMoJeTKZJBg8
      XCqay+XweEpXGj1tiW1B3xXluZz7c8RalwBX0lat+JdMJonH4+zs7NDZ2cn58+dxOp3lkUOX
      m1r5CH70wZfUFpZlsbi4yNTUFB6Ph76+PiKRyFMdRq/rAJDUJqlUiomJCTY3N2lvb+fmzZu4
      3e6y2JITYZKawLIslpaWmJ6eRtM0BgcHGRkZKfuzcqp6gFS2wFsfjRMN+Xhp5NypGXGSHEw2
      m2ViYoL19XUikQif+9zn8HrLK8Z8mFMVAD/61RSvPdvHJ5MrTC9v09t+gl06JFXDsixWV1eZ
      nJxECEFfXx+XLl3aHZc/xgf3SThVKVA05OM3kyssriW43NvylL06Ofdm1hid3+TmxU7OtYSq
      7U7NURSjLS0t0dLSwrVr1/D5fIdOWJWbU9UD3Bo5x8Jakiu9LUSClesm7ZAvGNyb3eAbt4f5
      25/c40+/PFJtl2qCohhtYmKCQqGwJ0arlcIIpyoAFOB8W22mPQ5NpaAbfDyxgscll1nous7U
      1BQLCwuEw2GuXLmyT4xWK5yqFKiW0TSVb94eZmkjzY3Btmq7UxWEEGxubjI2NkYul6O3t5eX
      X365Zt72T+JU9QC1jsflYLCrqdpuVBxd15mbm2Nubo5AIMClS5fw+/0V/6A9DjbFcDoTY3Fy
      hsAyDfwNDaQyeYLO3dqgXk1D8wXpsFkb9KwGQD0hhCCRSBCPx0mlUnR3d/PSSy/tPfTHKadY
      DWyGqILb14BHsfA6BItJaAx4QVHQhMHqgwf0XIjZrg0qhKj5epO17F8lbT3axjRN5ufnmZ2d
      xefzMTg4SCj02xGvD+OL3J9Z5/kL7fSU+L1WE7VBn4QQJrlshmhrK+lUmuFzDWwm8/idAlPz
      0NraiWkaaJoma4OeMVvFNqlUing8zubmJl1dXdy+ffuxBVC5gsH4whZ/+Oplvv3mp/R3NZfd
      v4qI4VTNzeDwEACRxt1ob/MGHjmqPFoNSfWwLIuFhQVmZ2dxu9309/dz/fr1Ax82p6ZS0E1+
      eX8Jn8fe6sBqU5WvlFoeFZBAJpMhHo+zvr5OW1ubbTGapqn84auXWFxL8txQawU8PTlVCYBq
      FMe1hOCNt++RLxjcGGrnYk9p3fNZRwjB8vIyY2NjOBwOhoeHuXr1KqZplpSWuJ0OetvDZ+0j
      +PTzYCNFNOTjles9/PWbn8oA+IxcLsf4+Dhra2vEYjFeeOGFYy1WOq3UTQrUEvHz9scz/PWb
      n3L5fKzi9msJIQSrq6vE43EABgYGuHz5cs3N0laCukmBNFXlP37xMpYQqHX4h4bdCauxsTGW
      lpaIxWLcuHEDr9dblw9+kbpJgWC3KK92wB9bCMGvxpbRVIWR3rOVHhUro2UyGQYGBnjttdfq
      +qF/mLpJgY7ig9ElAHIFk4/GH/Dchc4qe3QyDMNgcnJyT4w2MjKC2+0+FfKESnLmUqCf/WaW
      +dUEX7xxntbIo3MVB2MJgVNTEUI51VKNohgtm81y/vx5XnnllT3x4WkZmakkZ+p1sL6TIZUt
      8MdfvMS3f3yH//Ql+5r85y908Mv7i6iqwvX+0zGGXcQ0TWZnZ5ment4TowWDQZnm2MB2bVA7
      2L3h5UqBgj4XDzZTvPXhDLFGf0ltFUXh+Yu7ac9peVMmEglGR0dJpVL09PTwhS98oSbTy1rG
      Zm1Qizv3RjnfHGR8Uyfsga3kb3eK9yoKjkAjHS27UuCjAsY0zWOnGYe1czk0vvXaFTaTWVoj
      gb1jj2OrHP49jTaWZTE/P8/ExAQ+n4+LFy/uE6Mdda6zdC+ehi17AaCoNEXCWE4npJZJaS27
      alBVwSEMNtc26GpqxbKsPUXoYRSPKxU7a0Y1FZpD3r3zH2ed6XHXppbTViaTYXR0lM3NTbq7
      u3nxxRdxuXYL+tq9l2flXjza5rhqUMBeaURh6UxNzhCKNJHJ5mlrDrGVzOP7TA3qdTkwTROv
      12urNGI+nz9WoaN6U4MWK6NNT0/jdDoZGBggGo2WxdbTbFNJWxVRgyqqk77PdoovEnMffw9J
      uVH2wQghyGazxONxVldX6erq4ubNm3tve8nT5UyNAp1mihu3jY2N7VVGu3r1qhzJKTNyIqyK
      CCHI5/OMjY2xsrJCc3MzN2/erCsxWrU5cxNhpwHLslhbWyMej2MYBsPDw1y8eFG+7auATIEq
      hBACXdeZmJhgaWmJaDTKM888I+UJVUamQGWmWCtnfHx8r1bOq6++KuUJNcKZTIEM02L2wTZd
      LSGqUYKrWPXi4cpoly9fJhCwr02SVIYz2fe+8fY9ultDvH93gT965WJFbRff9plMRsoTTgFn
      sjRiwTB5briDyaWtiig7DcNgfn6eqakpgsEgw8PD++QJktqlKgFQ7jLYL17u4o237/HMQBuq
      Wp6RlYcro6XTabq6urh161bZtvKRlAfbalDTNNE0DV3XcTo0dFOgKSAUZW+JYTnf7AXD5Pvv
      jKGbgq+8MEDQd/CD1t8Rob8jAjz9j8xiZbTp6Wk8Hg9DQ0NEIuWxVW4sS2BYFi5H/aZottWg
      8fg4zeEgaxubqG4/hYK+qwVSHWiGiS8So605jBDiyLRDVdWSU5MP48tcPh8jFvbz049n+b0X
      Bo5uVHT/hKpEIQSZTIbx8XE2Njbo7OzcJ0Z79NiT2Cp3u2Ib07L49o/v4FBVhrujXDtkDUQt
      q0HtPG+HtbWpBlXw+TzkCwZBv5dtXcXrdqKqoCJIZdIEmx17zhyV4hiG8VhZvaPobgnxw19O
      4HY5uNrfajuNsizrWJsoK4qyt3HbzMwMDoeD/v5+RkZG9h33tGyVykltLa0n6WgKcvtqN3/z
      1h1Gep9cKaNa/tml+Lwd15ZNNajB0uIywcYwhUKBxqCPRFbHqwlMzYXb4cCyTNxuty01aDab
      PdZGaIl0FlBp8NvPs0tVGAohSKVSTE1Nsba2Rnt7O319fbZy+9OktrSE4Ds/vU82r3PzUicD
      nU8u637W1aA1uVN8KltgcT1JX3sYh/bb74py3lTTsnjjRx8wNjrGhZ4oLz3/DLFYrKTvmtMU
      AOVsU0lbJw2AqmzVclj6UtBNvvPT+2yncvzj+/Gy+lGUHt+9e5e//94/k0/v8D/+6x+Q87TT
      2tp6JneykeynKn/hw6I1rxv4vU6u9rWQzhbKYr8oPX733Xf54IMPCIfDfPX1f4fljfHWx/Oc
      b20si91yUDBM7s2skc3r1XblVFKVeYDDAiDoc9PXHuEH78X54o3eY9vIFQyc2v74LhQKTE5O
      sry8TCQS4dq1a/vkCX/y2hXSuQJB7+ko7Q3wnZ/eZ6CziTfevse3vjRStnmPs0pNToRdG2jl
      2sDxS5P8ZuIBo3Mb5HWDf397iJ2dHSYmJshms/T19R24cZvLqeFyek/VeL5umFw638zo3Dqm
      ZaGq9Tumfxxqrgd4GtyfXef3X+znn37yS77zvf/H5aEeLly4cCZr5bx8rYcfvBfn2aE2nHU8
      oXVczlQACCHY3t7GlXvAn/3FL+ju7uZPv/67eM/wCqtzLSG5K/0JqMkUqFR0XWdhYYGZmRmC
      wSCvfv5ZvvH6F1EU5VSlM5LKc2p7gKIYbXx8nHQ6TUdHB7du3XriDHM6V+BffzlJT2sj1wda
      z1waJDk+py4ADMNgcXGRqakpvF4vg4ODhMPhQ8/5Nz++g9Oh8fc/vUdHNEhLCUVzJWebkgJA
      mAbbyTTBgI+8buJUQSgaDm1X3GZ3Fq/UFEgIQTqdZmxsjEQiQXt7Oy+++OJj8gTLEozOrRMN
      +Whu9FOMiXRO5+Wr7STSedI5OV4u+S0lBUBydYG5JDRub5LO6bgdYCkqZjZHY2snLU0hW2I4
      ODgIhID37y6Qyua5PXKO9bUVZmdnUVWV3t5erl27tve2f/Qcb/56mgafiw/jS7x+c4DGgAch
      BF99YYD/+88f09seprul4Uj/7F7D02hX67ZOi3/HFdGVFACqL4hYnCDV0IymKCgKKIBlmQhx
      MmlqkXszq+RzWfLbD/jz//Mev//KDW7cuIFuKXhc2qEXmkjneGawla1kjkxOpzGwO/rT3drI
      //wvXziRX5KzSUkB4As00N1/gYaAh0zewKWCpTpwahpCWKiquvffUTx6TFGe8C9vvs3CWpKs
      EmS4fwDFH+O7701iWQKXUyXo87Cxk+FzFzoY7Gp6qL3A43LyZ3/5Dn/w8kU6mhv2JM2lanqO
      0+a47WrdVq37J4Q4lhiuaKu0HkBzEm7cHWUJOh6tVWl/EuZhZ7PZLNPT06ysrLCegRee/xxZ
      Q2F6eYs/euUS/+uv3iHauJvTpzJ5PC4n3/rSFf7qR5/uC4Bfx5fojDXw37/xHPMrO3KkR2KL
      qowCCSFYWVlhYmIC0zTp7+9naGiIxfUUH8aXafC7yeR0fvB+nJ62MJfPN/OD9+K8cr2HjUSW
      774z9tjkT8jvYXxhA4/LSaTh7E58SZ4uFQ2AfD7P9PQ009PTtLa2MjIysm/tQFcshKJAJqfz
      yvUeFEXhwWaK9+/M860vXeHO1Cq6YXHrShtdsYZ95x7obMLl1NANi/6OcCUvS3KKKXsAFCuj
      TUxMkM/nOX/+PLdv38bv393C6N7MGqNz69y6co5Y2E/A62JtO4NuWLicGq2RAN+4fYH37y5w
      Y6iNWDjAv30y91gPoCjQc4pkzJLaoGwBUCgUmJmZYX5+nkgksk+Mls1mgd0Z2jvTq/zezQH+
      4Z1R/sPLF/nLH35COOAhPr/BH3/x8t75Brsi/ON7cZKZAtcHWhECZJp/NrkztUp8YYOXRs7R
      XOJeb6Xy1AMgk8lw//590uk03d3dvPzyy49NkBWHSvO6SSKdZ3xxE6/LQSavc2dqlbamINYj
      w6lNDT6iDV4u9jQzvbzN2naaWLi8N0dSeZKZPPfn1nn9+X6++84o3yphp8/j8NQDwDAMBgcH
      CYVCB47EqKrKvZk17kyvUtBNtlM5bl/txrQEDX43PW2NTC9tPdYurxt0xUJsJ3NnZgVUQTfJ
      6RYBr9wBBnbXZGTzOvGFTXzu8i9MeuoB0NDQcOSieCEEY/Mb/O7zA0wtbfG9d0dJpPOYlsDv
      cTL7YJv+zshj7b78XB8/+2Se5kbfmZAAbyWzfP+dUbweF1d6Y1zobq62S1XH7XTwtVtDzK8k
      +MqLg2W3V7Vh0BuDbfzFP/yShbUEumGhGxZL6wmeGWzjpZFuLnRH2UpmafC70T6bHPG4HLx+
      c39BrExO57vvjGJauxXjwsHSy61Ui5kHO1ztb6Gvo4kf/3paBsBnhPweQr2VGcquyqL45c0M
      f/53P+c3Eyt8/dYw/R1hppe36IqFWNvO0Nce5s1fT/PunXneePselnWwvOLX8SVevNzFV14Y
      4L078wcel8nppHPlWWR/XC6db2ZicYvvvxvnpavnqu1OXXKiHiCXSWEqTtxODcuybO1kuLKZ
      4n//3S8wTUHA5+Jv375LOOBFQWEnlaOrJcR2OsdbH07z7FA7loCcbhyYD17sbuaffj6Oqii8
      fK37iccsrSf5yUfTKIrCrSvnaiZ9cjk0vn5rSO4QU0VOcOcFyw8eYAnIJlPEzvUSbdzdL7hQ
      KCCE2PsIfvj3m7+a3N0gQ1HJ5XT+21ev09PWyI9+Nc3rNwf44QeTvPObWb750iBvfTjDYGcE
      hyIoFAoYhrEnuCtqQIJeB9+8NYiiKDg0hXw+j6qqe6pCIQR3ph5w63InTofGR+PLtDR69h3z
      6G9d1/cKLj16jKIoexqjR38XNwB/0nUf9NswjH2+HnR8sZ5q8bdhGHs+PvzvB11T0beHFZdH
      HV+0XdzQxM49KLaxLGtvE2u796O4ybrde/Bw0ebiyKKda3r4b3yiV49lGpiKA5fLia4bezej
      6NCTLuS54Q4+nlwhndX5k9eu8MLl3a7/81fO8fN7i7x+c5CVrRQfxZfpaG7gd54f2KvgULzw
      h88phMDjVvd+A3t+wK7o6fNXzvG9d8YQQvC1W8NomrbvmEd/a5p25DEH/b+HhVl2//gPX5/d
      tpqm7dl60nXb8c/O8Q8L1Ozeg6I/hz0HT/pdvBelHF+8piJ2rmnf3/gkpRENvYBQVLTPolHT
      NFulEbcTSVwuD16348Ch0nzBQNPUipVGPGmbs2qr1v2ryE7xB+FwHm/s2uXQ8HkOH+N1u2Re
      LCk/VRkFkjU3JbVCVZ7ESuzbJZHYQQaApK6RKZCkrpE9gKSukQEgqWsc8Nt9sZ4GmUzmyGOK
      M36lIishVN7WafDv4UmuUm05YHdm7KjJq1I46lyn4abWsn+VtHUa/DtxAFSa434EH6ddpdqc
      VVtn3b+KB4CRS3N3dIxYZx9t0aNVmdlUgsW1LRxWnpSu4DAzOP1N9PV0Hmwjn2F89D6WO0Qu
      nyPsc5A1HVwc7ufg94RgeX6W9WQOChm8Xi+JbJ7u3mGaDimzIkyDd3/xK3o6mllPFvA7LCyH
      n6H+nkOv6+6nHxFpamF19QEeb4B0NsvQhUv43Qf/SdaX59nMWjitHBlDRTXSuALRQ+9FLp3g
      7p07eMMxstnde5GzHFwYOvxe3P/0E3B5MbIpPF4vyWyenr4LRIIHbxe7sjDL6tYOLreXnG7i
      0wyEM8Bg38H3YnlmGmdjiKXZedweD9l0Gm8gSCab49Kly7gcj3uZ2N5gK5nHbSTRou0sT07i
      9njIZdN0DV4h4n+CQsHSuXt/kt6edsbuxfFGwuRyhcp/BJumQTTWgp63p833Bhrwe1yoDjcB
      txNvIITG0d8P/uYOGrxOoo1BhMNz6IMFgACn04nTqRIKN5NPJmjtbCN/xBqC1aU5snmdVB4a
      /V6cXj9HmQILj9vD6soKzS0tZJIZYs1N6Prh15VJZ9jZ2qCAC7/biS/YeOS98PgbiLV3EfQ4
      aQoFwOnBd5TMRICiKpiWQSjSTD6ZpLXj6HsRbmoin0mRtzRCPg9ObwDXEfXSIpEmVKHT0NRC
      IZuitSVGMqvT3NSAcUCd0IbGJtwOhaamKIowaGhqJZtK0t4WI5s7YD8I1UlTJAQCYue68Tgc
      NPg9le8BXL4GlO0kba1P3pj5UdKJTRLJNK2xCAXhQDMyuAKH1/2xLItccofW9naS6SxRn5Os
      qR3yxtvFtCyam9swMjvErt5g/cED2jufvIN6kZauXm5F21Ax2UoV8DlMLMdRi/UVAoEgzR09
      pLY3uHT1Iqur64Se9OZ6iI7uHpSVDSINXrKmhmpkcAUeXzq6H4totBmnJljZTNH4WQ9w1L1o
      bm4GVwAjs8PA1WdYe/CA9s7Dy8orikJrVx/NjT62MwYe1QDX4W02E1sUFDdezaT14gjrqytc
      vdDL6kYCr/PJ0bO1vkIym8c08piqF69m0Hb1+q6PLQesCDQL7CQSWEKQTCZpb28nndOrs1G2
      RFIryClZSV0jA0BS1/x/VM0BYthjYIAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='67' name='Death/Infected/Population Metrics' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death/Infection Report' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths Per Gini Coefficient' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Disease Mobility Time Series Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Economic Factors Dashboard' width='192'>
      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
      lgJML4bK5sMPRQhAta2C6aU4Hlc91TYLap47XLaqKrRMGmtt/utnUnEWFhZQFYWleJL6xhYq
      zflb07ReH1MlmXQaZ57rryw9YiGSxG4xFKT9oPBwcpqs0U6NVcNgtuOps5NWyqdXLdcAQteK
      uileiINGAiB0TQJQINl4gI9+8yn+yOa7YUdjUWbncrujtig8uQYokNSje4wkvYSGr/LFtI/n
      L15k+P4MVjVCtcuNxWLDSpLWY+fpbG4odXN1q/zmrsuE0VLF/J07HGo/hKG6hdWVFZobXbgc
      DawarNRUVWDOppibX5QAlJCcAYSuyTWA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1
      CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA
      0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1
      CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA
      0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1
      CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA
      0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNA1CYDQNQmA0DUJgNC1/w+ho2EpuZfOIwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hawaii Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Hawaii Time Series Map Chart' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Infected to Hospital' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medical Condition that Contributed to Death in relation with Covid' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29Z4wk63rf96vQVZ1zmO6enMOmE+7hTUyXokkQBCUbsCkLhmkb/mTCgPzB
      0Cf6gwNgGLBoQLZpwDZgSZAh0zAkQzQhUmK6uveeG87ZE3Z3cujJ3T2dU3VVV/CH2RNWG8/M
      7JmZnfoBi92Z7qfqrdr61/vWv973eQTHcRxcXG4o4mU3wMXlMnEF4HKjcQXgcqNxBeByo3EF
      4HKjcQXgcqNxBeByo3EF4HKjuVECcByH87z3O2/8Z9u46fFX6f/gRgnAtu1znTzbtrFt+1xt
      ME3zRsdfhTZ8OV4+15auIX/77/0JxVrnsptx4fwX/8EvcmsifdnNuHY8KQDH5uFPvk9s8Tvk
      wx7MbpOiZjOcjAGwv7dNJJTA8ijEgr5X2kGnXkEOJ/FKX/qlbVJtdEnEIy+NHxgdyhUdr+qQ
      SCQBqFarJBKJVzvCfw1jYKIPrDPFXmVs253SdRaeEIBl9PAk8jSP9hCqBju7JaLDE5j9HrbR
      w7FtygdbrJ90+flvfZPmyR6lSpeo12brsMbC7Cgr6/u8/fYCK492kH1BRqM+vEaXn+5WmcrF
      ePhwncnpMVZWC7x1e569w2P8kRR+WuhCgKDfhyo5JLMjVHZX2SlWSOfn0XpNCqufIEVHqB5u
      kRlfQOqd4ATi9EoHtAgyEoejtsxM2sPqYZtvvvcufkV63rG7uDz5DNAoFijsl9g/OqbRtVhc
      mEEWbLrdDpVKFQeIp7JMTU8TUGUMw+bO3ducnJRJJpNIqp9UPED1pEJqeJqIbNPr9zFNg8nF
      e5idNtGQh7apMD09g8/UGJpZQDC62J4AtxdnsbU2tY6OIou0+ha3FmeRBej3+8RTGbqdLsOj
      E0yN55F8URZGo5Q7FsmwH38kgaR1cPxhAqJNq6dh2zbWOcftLm8uT/QAamyMX/3eLXrtNoJt
      UDg4YWRijOphAX9unFQ0gKqq1As7aIMUmWwOWYQ7b73N1m6ZYCBA1eMln0vys/s7zN+aJ+IB
      URFBEbFzOXp4yY1k6VYOcSIjUCyQm5jG73EQHAdLaxCbfBcBGB/JsX1YYXRsHCem0q6VyA1n
      GAoJ7B+VyeVzCGqAt5fGaOgeAopMLJsj6vVSj8aJeCU63R6mZRKPRi/pFLtcZYTXsh7AcbAB
      URC+cpxl24iiiPBVY18By7J4/9EBmnG2ZwDncU8iiGc3zyzLQpLOPix7Xvw7s1ni4Zc/lw0G
      Azwez5n3f954x3EwTfPM2zhvPDx5DK/HBRKEs/mrgnCui+NV+PatEcQzXsCWdSqc87Txsi9A
      lye5cTbof/X3v89Js3e2YAc4Z8fkOM65erfrHn8V2vDl+GcKoHtyxFq1z53RGIctC7vbYWJq
      /PPPrcEAbTBAbzQIDGXximdsTOeYw0EEFRuPaBEOBak1WiTisTNtzmoeUpbyZIPP/85xtc1x
      rXu29rq8cTxDAA7H9RY+y0IfBNF0E7N3esfcWXtAsaGTCnnZOCwymc2wur9LamgCT79CtSuQ
      GQpRLbe4dXuRg81HVPsekgGbo3KL8fFxdg+28YWGSKo6+7vbxOe/Ta/XYmvlE2bvvocsWNSO
      d6j2YHosxfrGIeFMHo9WYqAkWZwb53hnlb2SxsJUhpXCHqFojpDT5Ohgl+zbebTWCZ8ubzGx
      cJd05NXeV7jcTJ4aDDuOzd72Bgf7e5w0nhwqtPoW86NpLCXI/MICIV+Ae+/+HFK/xPLKDqbe
      pVbvsXh7CVlyaPcF7i5NUm9bvL2QZW+vzvjCbYKKSVMTeOf2LKJj0LcUJmfnGB+K0e506A0E
      JtNhKs02U4t38WLhkT10Ww1M26JaqdM42KBYGzB99218okZ3oHBvcRqAykmF6aV7JILq13MW
      Xa4tT/cAjsnd936ZeEik0ugRVr3YgdMLaTgdo3DSZXF+kq3VZXyZMRRRIJEZ5Z7ipdxxyOeG
      8IgAEvlMiIeru4wNx3hYaLC0OI6gKngTaex+k0f7VcZm8lg+h0Grw165yVA6jdmtcdy2mRkb
      BsmDmozTrvYIRQPIgkgiGUf0hkmnY/gkCU8ig9GpsV5qMT4PwZExHj16hDk6iSrLmJZJ8ozD
      Kpc3m9djg15RLMvij97foKMNzhTvODYgnOsBzLYtRPHsLtJ1jwcH23bO7MSdxtsXdgw3TgCC
      INxoG/Sy42/Ge4ArzP/8T39Grd0/U+xn9wpBEPjtX15ibjR5kU1zuQRemwBK26uY8RGSQpum
      mCAd8gB9SiWdTOZLs0Btg0bHJBr2v9J2G6UScsiHKAfxK1/9Tv5wu3whNuivvTd97m24XD6v
      SQAOtX4fp1giGjVpWTLbD1aI5oepbh+xX4wzNxpnbeuA6dlJWl2b0u4adc1CFSxG5+9QLqwh
      hzP4nQ5d28fMZI7Nh59yeNxi6a1xkGwefrTOxPwizcMdDCVCUh1QKHWZn8mxvl5gYm6e6v4m
      jj/F7Hj+9Ryqy7XmtQjA7JbZ3C4jShWy90YRFD/ZbJ5UNg6agk/SeLj8EFtQqdVqdA0FVYkQ
      VwZMDgdZWd+icFIjOfAQlk1ml6YRjBqGOsT0qB+j28TyBjEti8ZxgZVCkURigOOzaR7sU8om
      sUydk9IB2ztFYlkRXAG4PIPXIoBeX+CXf/V7ON0qumnjHdTY3D/GUb0kk2EkVIJhlc3dIuFw
      BK8poYgOYCMrHoZGw1h2DyUcIh3145EEEKOI3Y+p4GM8lcCSZBSPRDCRZ6rfx1IjBD06ifwI
      YZ9KS1aIxocYybURgi9feONyM7lxLtA/+JNPaXT0M8U7PH4IRuC3vjvLVC7+lbdx2S7MZce7
      LtAl8zu/fvdSbVCXq8WNE8A//vOHtLrGmWK/bIOeFfvxeoeLin9vIc/bs9kzb++mcykCcByb
      va1V6obCnYWpZy6cqVWr+Px+fL7zTWYbGAaSonw+6en7H+++UbNBExG/K4BzcCkC0Ls1NCIs
      zaSpHRXYq2rMz0xwcrSPN5zgaHcbWwmRjPoIqyKbBzXu3F1ke/kB4ewUQzGFhx8/JDk+h2q1
      afZNAqKALnkZNI6RY8MoepVqX6J7uIWUneDdhZnLOFSXK86lJMaybRNFUZFlmWazSa10wFGx
      TEuX6DVOmL39FhGfTLvVotlsYNZ3+PD+Br7hGYbiQax+m44+YHVtg8OjIvlcksNik4yvx6NC
      jeODQ5rtFrqmkx2b4vaC+9LK5dlcigB8wST9eoH7D9ZAEAiGo/j9fvLZDMlogE8//hhLUgmF
      w4iiiBpKkB0Z4mRzmcNKCxAQJQ+JWIR0No/X4yE3nEcJZRiKeAiHw3hVLzgOQb/Iw+WtyzhM
      l2vAjbNBf////jHV1tnmAvHZqboiy/kAfu0bU/zSW+OvHO/aoE8ew40TgDsb1BXAjX4P8C8+
      2KbbP+t6gPPZoGG/yi/eHTlTrMvr4UIF4NgWW6sPkWPDjGefzt1p6T00R8avyF/pLqy3WhAK
      oX7pwnNsG0SRTqtFIBx+6mHGcWwchKcs1n/y/ZVLs0FH0mFXAFeMCxVAdX8TJTNFOiCzt7mM
      qSYYivmp1Bok4wFWPn5IbHIWERGP0aRHgMlclNX1HcZmZpGNFqvbR8wtzdGr1OgLHjxWj85J
      k4ZXIJ/M4fP6UB2dlfv36SWHSdo9dMHD5OQExd1tBDWAbjrkEgEMvNSLBULpcbLJ8EUeqssb
      woUKoNeziA0H8EoWtWqdo8oxg4kkvtQohcIh01PjNO0BzZ6N0K6xfrSD08kwNDqDV5aonzTo
      NI9Y2fCiV3ssLGbYLnYZ9UuI6WHqx4fUbQckkdxQDmFigvraCplolOPyIbYcpNtoEIv4aLY7
      IFrUaw0K5RWGfunnLvJQXd4QLtQGHRod4sGP32dtZx9jAOFQEG8ozlAyilc0WdnaQ5RkvIqE
      YVqEwyGi0TAby8t0dBPdMFADIbySzPDYCKrqZWQkh+INEg8HCQQCJAI2uhgmEFFZe7iBLxwl
      FAriVVUikTDJZJJAIIDiURFFCxuJUMBNjeLybK6ZC2Szvb5BdmIGn+era9eyLH7vf/8LSvUz
      ZoY7Z2q4fDLE7/37373WLs6b5gJdMwGcD9cGvfz4qyaAG2eD3l8/pn/GCjG2bSMgIDwnFeTi
      eIp4yB1uXSdeKIBeq8ZRpc34+Bjyc26avV4Pv//VFrS/CK3TwRMMPrdBWq+H1+8/b25a/rc/
      uv/abNDf+51fID7nCuA68fyxgN1nbfOARCyIaegcHhwyMAe0W01anR7l40M6/QHbm6sUy1VM
      o0+9VkXraxwcHKHrOvrApN/v06qdcFyuYg1Ot9MfDKiUjmi222h9k76mUdwp0Bv02d/bRzMs
      ep0mjWYHx3GonRRZXd2kdLxPV9M4ODjEMG3Kx4e0NYNmtczxSR3L0NjfP2RgmZSODun2DeqV
      EpVGmxszznP5Sjy/BzC6KNEMsViC9Y/fZ7lwxMTMPM2GweSQzI8+2iQ9OkNcsamVD+hWLKpO
      HJ+5RywWZH29gccXQLAHWO0SH21W+MVvLrK8ccSi06fSgvGMzmYxhKdfRAb0VpWPP75PaqyP
      0D5k+vZ7DHoV9o5biKJAu9Gg322yftDCY7X5i5+tksqPkZZarBXq3Ls3zfZRg4He4pNPV0jk
      J6BzQmJsgUQk9PWdVZdrw/N7ADWKXdvhZx/eR1CDpDIjpGIBhscniUaipNNp8pkEhtah1tLw
      BUJMTIwT8kocHJbwRTPYrWP8kRg9wyYTjyD7g6hOn2bfoVsv0eoLnOw+4uCkiSiKdFttokPD
      eDBI50ZJRPwIkkS7VqLTHyCKIr5QDGnQpmOIpFJJ8kNxNB0yiRCeYAxJb9AzZRKpIbKZFIl4
      hFK5/LWdUJfrxY1zgX739//4tT4DvDuXe+F3LtuFuez4q+YC3TgBAAjC2WxQ27aA59uogvDy
      iXKXfQFedvxVE8CNs0F3S01M62yatx8XyTvPonbTMpGlF5/2VNRPzLVTvxae+J9wbIt6vY4v
      FEZCQvmKRaZNQ0fwqEgXX+Dxwvjv/s8fXvlF8f/Rb7zFX//u3GU340bwhAAOttfo2AopSady
      DGOTKRRZxDQtZFE4zfKmejB0HUFSaDaqJJNJ+pqO6vNR3V1HGL1FyOohK15E4XTYIMkyju1g
      6Dqy6kVwLCwbVEViYJggiJgDA1n1Yg90HEFGEmwGpo2iCDSafaJhP7YDljlAlBUO93fJ5keQ
      RTBtUBWZwcBEECU8sohtgyRdyopPl2vEEwJoD2BhYRqBJssfLFNrlgj7HWxPBKdXwTQdgokU
      jWoNQQkQ9Nj0mxWqmsDM3GnWhc7RDluNNjICQZ/KoHlMKJGj0ze5/8FPyM3eIWJ1yUwtMZaT
      +MFfPGR4PML7P/wZQ7P3oL7F0Py3cFoHWLZIPJtF12D9wU8Znb3FJz/+PkYwT9o7wJF9NI4L
      WKJMJuJluyGQCSqkU0H6QoThlGt9uryYJ26RUVXg/kefcFxpkRufIZ+MIPuj3JmfBOfxiijR
      w+TsAonQadkkQRTBdj5/0SQIAo7j4CCh6C3k9CRbu8fk4l5ml+4yM5YlkR1jLHe6YGZkaoFU
      JMD00l1mx/OMT0xSOjzAchwc54vxdmZkkqRXJJqbIBZQGEolsB3n8b4cRNnD3OIdFqYzfPRw
      l3Q8iDXQaXe6NJqtr++MulwrnnCBHMdG7+vIinI65+VxNkxJkrDMAYZpoyoeQHhcLui0Gnxf
      11FUL4JzukrL6PeRFRURG0cQsS0LjyzT7/cRZQ+SKD4enjhYloMogt7XEWUP2CaIMsWjA1KZ
      LF5VwbYd4LSsjq7riJKMLIJh2l8MgTwSjiDRKO1S0VVmxobAsbHtUyHJsvTabdCL4kXPAJft
      4rxpLtCNs0GrLQ37jEd8IS6QaSLLL3aBQn6FgFd55meXfQG7ArjGWJZFRzNwzjil7usSwJsc
      j+NgWtaVOYYr/R7AeTyEEUXxdBG8ID5OySPAl6a32baNIIiIj6cpO4+fHwThi2Syn72g+jv/
      y7+88kMgl6+PqysAx+LBhz9jIKqMDSVZ3j1CQmQkE8aXmqC2t0EwGCQclvjxp3sEPSJL77xH
      WBU53t2k1LaYzvj5dLuIPxTj3qKbG9Tlaa6uAIwWcnyMO5NZVlZW+O433+PkcAdb8FI/OcaS
      lM8bPzF/h6yvxeHOPvWQl9GxGbStTSSPB2ybykkJB1cALk9zdd8UKUGM+jEHB/vEfB4ebBQ4
      LtcJJVN0K7v4Q1+UKK1XSuxsHxEdShAJBWjUylQqFUxPkPGRLPFo/NwLaVzeTK5uDyB4WFyc
      pdLoksoP4zkpImYXCKoe5hbvIvvCCFYAUYR8tIwvtEAsHACgdtIml8+DICGKMktLc+dJ5+ny
      BnPjXKCNgxqGaZ8p3rZtEEA842zSz9pwnkX11z3+KrThy/E3TgBuVgj3PcCNng79t//ePz+7
      Dfr5fI9zNOB8qYW+1nhFlvhHv/dvnWNnV58rL4C1Bx9S7xjEsuNkIx584SQe6TQ57v7+PqNj
      Y59/17Ftao0Gifjzy5caAwvjjGlRbho3YXBw5QUg+aN88/YUKw8e0rAVTGvABx98yuSttylu
      LXNYqjKWDvJwrUB+OM/2zg537txha22FxPAUWmWfUHaGxenhyz4UlyvIlReAY1tonQY9S0DV
      depVk0gsRPmkSjo/gWPqHBwcE0mlCCeGmJZExH4dORDHryoEkkkqjRo4rgBcnubKCyAR9rG+
      c8zt24sMem1E0cGwZYbyORrHBeTkCJNTk6xv7BIKBhA0CX9iiiGrQCAUwnQ08rHU+cbNLm8s
      N84F+vHyIZpunin+IgplW7aFJJ7Dwvsa40VR4HtvTzzxO9cFuuZ8a2nYtUHPEf+mceME8F/+
      /b/ipKGdMfr8PqjjOCgeif/hP/31M2/D5eK4dAFUTo4JRjKU9wtkpyZ53r2p1WwSikQQsFn5
      +D7R0Tmy8dM1v9VqhUazxdTk5Ev3V6x2Ln06tOd5mYZdvnYuXQD9VpW1jT1azR7+iI/Czj4j
      kzOUdreQwmlCYpd6z+Rou8D0vW8wGpfZ3itzK5bkJxuPyE8sYWkder0eR4VdkuNZjgsVeo19
      5Egeo1XE8SVZmhm/7EN1uYJc+q1IVAPcvfc2E/kUW+vLaAOLVqVIo6ezubVNz4DbS7eYmZtl
      ciSDGowyv7iEYvUxTY2dwiHtdhuAXquFYfSoNboIaph8TGS7UKbbcxfAuDybS+8BItEEiiKR
      yWUZVbM8Wt0hls7S13RyIymS0QCiIBAJeigclJkaSZFIxvCKAXztAblsBo9o4SAQ9Ng8Wt4j
      lxvBrwj4wkHmpvNYXrdCpMuzuXE26P/34w062uUUyobTGaUeWea3v7d0pvjLdoFcG/Sa85vf
      mr3WNqjLxXLjBPA//ZOfUWv3zxR7ET2A49hnzk79JsQDzI8k+O1fuXWubVwUX10AlkapPiAR
      gXLFIZeNvCTAodfV8AdeVEfMotHoEY0+P5VhpVRC8an4g9Hn1it7FR7tlC/dBr3pKJ7zLai5
      SL66AOwBuzvbNMM2AzOKIAsojkarXadSbTOzuMjh5hpqPI/PadPoaRQ2dll691361SJCKI3P
      blEqN5hamGdrbZ2RmRkGrR6a3scvOliywM72HuOzS8T8IiuffkqlYzM7OYTR77K9V2ZxYZbt
      9VXCmTHEXolKT2IyF2Ztp8jCwgyFjXVi2VG6JweI4SFmxrKv4fS5XHfONARSfX6CQYdmx0+z
      XMCWA3hEiaX5cQqrH7BahhGnit9jMruwiCL5yfs0/mi/TjYj4YQU7i7m2a/rWJZFu91Cb5mo
      WpOG4MFqHtExJGrNDkF01MQ0I/4ynVaTYDSCOdApbT2iUDXIeypIvSbl4wqx+D3sQY/N9XVq
      jS6OUkcyTYx2GxxXAC5P89UFICrk8zliIZA9Nq2iji87Q3X7Ix61OiwsvYfufIIvEiYR9qJI
      EgoaR1qKqUwAKRwmEQsgqzKRADQ9Mj5vgKAMcb/FQVcmnQzS2zog7Pfi8QXprn2KFEySiQeR
      ZRGPrJAYmySnrRIORxCEPkOjYwRUBcmjMjY+jr25RSgcxmppSF632ITLszmnDWpxfFQmk83S
      1y6mXvDrxLIs/uGffkqjo58p/qJs0POkVrzu8QCTuSi/9Z35M8W6uUHPgbso/vLj3fcAl8w/
      /rOHNLvGmWIdxwEBhHPMBrUd+1xpVa57PDjYjnNljuHFArB0qu0BiWjw9GfHZPnBMrFkhkQu
      w7MTeJ+BQY+qJpAIX9xY3RwY2EhPWW7f/2TXtUFdPufFArAN6s0u/cYxR1WNsbTE+kGdW5KC
      7BPxh1JojRMcvU2x5TCWDrF9cEA6P06tsIUVTBCT+jRsH3fmJug2yqxsHTI7N0dpfxNNCDKd
      C7Py4AHq8G1iAZGVTx8iR4dI+2HnsMTY9Dzt4g6mN0HMJxMM+ujqOseFHRyPD9MWmJsaZn11
      nezELL3KPnVNYGI4gYlKaX+DQHqCsWziazqlLteJV+hHHFpdi4lIACmR4tbtu4RUmW71mFqn
      w/buHgelJqOZMPVilfz8LTq1E8KJBKOZMJoQwG5W0YF6rcloNsruwTGWEiIgD9jZ2WdiZhqP
      KGBbBnIgiVY9olptMTE1TrVySFP3EPVJHB8eUSsfcXxSwxfJIjiQiqrsbW0RzY2yv7ND1xRJ
      Rj202x2azRrB6DCVw/3XfiJdricv7gEkL0NJGRJhFAEcRUJNiMj2EFFFYH11l/GJKeRBm71i
      g4mRYVRVwZeOs1XYp+d4CEk6YjKDDMQTMQpHVYbz+dOhiW0h2gO2dw/JjacBndL+DtN33ybm
      FfF4VRTFR/14j1pHZ2Q4xcFJh+GRITySB9uKIEuQSmfZ2thkam4WGQtJBMcGBJH9whbZkdGv
      41y6XEOulAv0WWGLzwpdXDSWZfHDh/to+tkSY31WF+08c2GuUl7My4gH57GVetZtOFi2fb7E
      AG5uUNcGvax41wa9ZP6bf/ivOGn0nvnZewt5/r1/487X3CKXy+SZt8JS8ZAvZxBvtZ5fZ7fV
      amEbPWqtZ19Un29zf4/uC3NyDjg8LD/302ql+nlOBscyaXeebWWavTbdgU2nWaM/eDoN+uFJ
      i91S85l/Ks0XH4PLm8cze4B+X6NdLbKxtYM3nKC4s8rErfcQukU6lpdEQODwpE4slmB9bYW3
      3noLQQ2y8skKDUNmPBtkb79EcnQWp3FIw/aSUhx8tkO/U+Phow2GJmao7q/TNT0szoywtr4O
      3jT5fJq9vV38HtANi93jMun8JB6nT2f9mKNKh0Q8xPrOPt94512O9gtEMsP0yns0epAK6Oz0
      Q9wdiRDyPT9JrosLvMAGNQyLqaW7BBSR8Zk5pkdDLD/aod/vohkSd996G0VVmJubIx0UaTXr
      DNQYI36HYl/g7ju3cdotKs0OG5tbn2+3U6/Q07ps7R7ij2UYz8eplSpM336LqP+0+nyz2aBe
      LaMbNgt37oGl02q1cEQvtxfn8YZCzC0sYtX3KTV7dLptvKE080NxItk8C4uLWP0ObhJol5fx
      zB4gFksiSTKSoiAlk5jdOpv7be7em6U5UEilk3gkiXgsRu2oQEWPkUnH6FX2qBlhptIJZEkl
      kUni2B188SyxVBRVFlGiCUKRHul8joB6WvE9GnFYW1slkR0HwC+DRpjhZBKvIpOMRRkEfSiy
      jOrzEfPIHO1sogxPMtTZIByOEvWpqNgIfg+PlteZGM6gOBqNpolpmSTjsa/zvLpcE26cC/TP
      frRO+zmL4qdyMb59a+SF8eC6QK4LdI35re/MnXs6r8ubw40TwB/8vx9Qv9RF8c6FxY+kI/zO
      r98987ZcziAArdNiICiEA94nfl8ul0inMy+INGk2dSKR01Km2Balao1MKvXC/fV6Ty60aZRK
      yGE/ohTAr3z1O/mDrdIbMxu0o51tWrfLF3xlAQx0Dc0esLv+gPDQFJJWotZXMLvH7Bb2mV+c
      Z3N9lczoFK2jHVqGg8cxGb+9RKfZp17aoUOIW9N5djeW2TuIMz+RY2OrwOj0HCeFFcRwjrhq
      Uap1ONzfZHzhG8yOZ9h69CkHRy2W3hoHyeLhR+tMzC/SPNrBUKIkFYNCucfCTI61tR0m5hao
      7m9AIM3MWO41nD6X687ZhkCPH0TanTZ2T2dpaZbNrQEjUZGPP12hZw+QqhW8aoyoYjCR97NX
      76LValiyn6WFYcAhnMoR8kpsPHpI05E4qZZoNPs0jjdwRhKMzy6gej1Mjw2BUUP3DDE95sfo
      NrG8AUzLonlcYHmnRCI+AL9D82CP4lACy9SplA7Y2ikSHRJdAbg8k688hlC8fnw+FUXx4FW9
      xIMqj9YLRBMJlECMmflpgrJEOBwhHo8SSySQ1RARv494OkPE02N16wAEkUQ8TjAUYXxmhoBH
      IRwM4/OpDI8Ok0hn8SkyQY/Dxl4RPBGE7gEnXZNAKEFA9aB4JAKJHJPZKKFIhIDfRzw7Qsir
      IMsKkXia4VyccNjNDerybG6cDfp//PNPLnVRvGPbCOdwob4cn0+G+JtfMcOaa4O6i+Ld2aCu
      AG7ue4A//ItHtHrnWBTPkz3At5aGuT35IvfL5SpzdgHYFstrG8zPz3G8vYE3M0oieGqNVk9K
      BMMxREl+tXJAtoVhgyK/+p21VSrhyWT4qsvo//KjwoXaoJlY0BXANebsAnAsWqV9KmOT7O0U
      yIfilLeX8SZGGLTL2DbIviCVg010T5RcRKKwX2Zidpaj7XWC6TECdNg9rJGJydzfqvML3/k5
      PIMO27u7xHPTyP0TKprEdD7Cg5UdZhbnKW9voXtCRI0OvliQ1QcrZCfmMGr79MQISb/F7lEN
      vyoQSo1i1A6x/UmmRocu8LS5vCmcawiUHB2l9Og+3ngey+jT6fXZrawxmYvQ17ro3Q5qeAS9
      fkDNlpmfSFM4adDV+hyurTGejjA7kqRuOSzeGibiVyhuVcnPLlIprLFbKKL6Ar26P8QAABUI
      SURBVHS6Dd66s8Dq2jKKJ0PUrlEfiIidNtpgwNr6GgmPjeH10BiYjCdjdIMBtJMK3U4XicAX
      BR5dXL7E2e0IQSQQiCF5fYzlk/gUD4IgEovFCARDeP1+IqEQR7vLHFU7hCMxVF+AoNeDIErE
      YlEisTiqL4A/EKJ+sEGzN0ANhgmoKuFoklwmRiAcZjQd5cMPPyaWyVHa2+RIk8jEQ3gEAUny
      EIuE8HpVbNsmFIniDYQI+30Eg0G8qoLtPL0wxsUFXrMLZBkajx4+IpqbZHToIhanDGg2B0Qi
      Z8tBalkW//0f/phq8+LqBP/mt2f5+TuvnnXisl2Yy46/ai6Qa4N+xXhwbdA3SQA3zgb9sw93
      6PbPVyTPI0v85rdnL7JZLpfEtRGA4zjsb62gSRGmRuLoukwg8Ky7gINtgyA8+43t//NXy+e2
      Qb2K7ArgDeHaCKBT2qXvzRA0SuyVDE52aowtzBL2GOwVm4yPpNncKjA5O87x9gnbe2vMLN4l
      nUxim30CgeBlH4LLFeTaCKCnDYinQyg9nU67RWJomJODHbZqx/RMCWfQptbSyRkaPUNieHSM
      bCLI9m4BURCYnXEF4PI012ZtYCqXYfOTD3i0fUg6Gae4v4kl+0mnkoTCccLRGKKp0dNMvF4V
      p9/iuGEgaCcE4tlzTWBzeXO5Nj2AqIb55re//fnP3/3l9Of/nnn8dz7/2I5MAWSwBjqbrRS5
      ZODz70aDXnTzjO8FHvtlXvXanDaXl+DaoF8xHlwb1LVBrzEfbRTRz5gxy7btx+7SywU0kg4z
      kn5ZEXGXy+ZpATgOzVqJugaj+QyiIOBYOn3Tg099/n+8Y5nopo1XvZjCSYN+h2Ktx0judKhj
      G30MUcF7njLxwP/6zz78WhbF/7t/7RZ/83uuAK46TwnANttsFCoMhQU29vo0S01mJ0LsnngY
      HU4Q8NhUW33S8RDtTg9vKIrH0Tna26PvCeDzSER8HjRLJhb0UKm1SaVilItlIskMVq+BLqhE
      fRInjR6ZZIRyuUI0mcbrEamWSyjBKAcrH2PFJkm1qjzY3GMqHeN4IJFLJvCJJvWuyVA6jmMN
      KJUq+FUBwxPBa+uIqpdOo0YonsbvjtddXsDTV4dWJ5CZIJ/U+GTrBNt2EATQ+n0KhQJGrcB+
      rc87i5Ps9QJ8806UwtYmgqiAZFFvdjnaKCDHJzls77F9VOfWnbusLz8klJ1AaR/jz8+xW15n
      t1hn9vbbHO4f8M43Y9AusltxEA6LeCWFcDgAWI9z4dj0+ia7u1u0DwuUGhq/9Nf/HbSDdfpy
      BGnQouW1WV05Jp/3MxB8BKLuJDiXF/PUeEIIZmkXPuRHP1slO5JHGLTp9i2y+REiQR/BcIzh
      kXFCAS+T0zOosoCERfHkBAcQRZF4IkG1XEQNhskNj6FafYLpPKpkkUjGKZbKBEJRhsenSMbC
      +EWDSqOLpPjoVIsM8BBLJEnGIqj+IGavgWZAbniEcMBHKBpnbHISrwheVeWkWES3HERRZHRi
      mng4QPWkSLvTodFsU6nVL+HUulwHbpwL9Lu//8df4zPA0wvWL9uFuez4q+YC3TgB2M7ZszrY
      tgW8mo0qCsIza51d9gV42fFXTQA37gnx8KSFaZ9N87Z9+kwRC/lIRQMv+bbLdeAJAVgDnUar
      SzQWQxIFwGYwsPF4XqyT894VnsCxaTRbhMOR0zuo4zAwrZe24VX5b//RD849BPq196b4T/7G
      Ny6kPS6Xyxd9uWOz8vAB1UqJR+vbFLa20YwuO9uHaH0dx7HRNA3LtjHNAQPTAsdB1zS2dnao
      lMuYlklP6+M4Nv3H3zX0ProxwDIHaP0+tv3FZ3pfwxiYAJgDnb4+YNDY5f56Ecu22N7eQu/3
      2Nnbo68bOLaFpvWxbQfHsRkYBqZpnW7POt2XMTAZGPrjNt+Y0Z3LGfnitmr3Ef0pZmdHWX7w
      CYWDE2yvTLV0SLF4xEjWx1/+4EMW7r2H0W4xfes2IavB8kENR5AYGGWax1ssFy3uTkf487/6
      KdNv/zzSySrLNYlvTwXZ6/lYyqn86V99wMxb36Kx9Qmz3/wV5rJB7n/4AMcakIh6MIlhD3QK
      O1t4VD+V4iGl8glpr80P7i/z9i/+BncnFf7Vn6+QHw3x4x9/wOjCO/TLm4ze/g5GZZuBJTG2
      eJtMxB2quDyfLwQgenF6ZT79tI7gi5FLn86bSeXG8NFHQ+P2W++RG4rSSwyRS4RpHFUQRAnx
      8RrZeHYY//6HVPpxlu69Sy7lo9BLkhNN0vlRCh+t09UzLN57l+F8iiYTHB0cMZedBUFAFASS
      yRRkx1F9Iul4BEEUSA+PowomvUade+9+g3w8BBiMzy4R8pwwf/sdsvksvYDJ4dEhMQVESQJr
      QLvTw7JMohE3P6jL0zzhAtmWidY38Pl9OOaAgQ0eWQYcRAF6Wh9FVREFEUkSwbHp9TRkRUUU
      QMCmb1j4fSpaT0NWvTgDA1uQ8EhgDGy8XoW+piGrKrahI3pUFI/MwOhj2iI+RcJCRBIFTEPH
      QkSWTkdqAqcv5FSvD0kE2wZRBE3TkD0qtmkgSArHR3ukM3m8qud0uISDR5YvzAY9zzPAZbsw
      lx1/1VygG2eDnjR72Gd8QfyZCxT0q0SD3pd8+9lc9gV42fFXTQA3zgYNqB4czvoe4FQAoiDQ
      6p4tw7RpmsjyixUoiQIB38VMKnR5MZcuAMdxwHFAEF78gspxcDh9ifWsJLWvWnvrP/+Df3Hl
      SyRN5WP83d/9tctuxo3g0pdEdo73+cv3f8gPf/oJL7wvtg94uN8ELD7+yY8o1b+4iKvVCg8f
      PXrdTXV5A7n0HgAEIrE4dt9iZ/kDfvbpBt945x22j2t4vV6mYgLf/8kDfuF7Pw+A3qlzVG4S
      TR3yh3/6IfPv/goeowLA9qMVcksT7Dw6olPfIZQZY/vhfZzoGL/xSz93mQfpckW59B4ARDyi
      jeL10+7ozC3eIqjCxPxdsokQja7O/ESSaut0zK0Go8wvLiHbJtPzs/SaDazHY3PBGXB8cEBH
      N4llRhgfiuCLDDExnH5RA1xuMJfeA/iTKeYzQ9iGjiPkOClXCaeTRCQVIsM4RoJWTycciYAo
      AxLDw0PIoo1QbRKLRBGF02cCRXI4rjRZnI8hi6CqKnduzWBJZ8sl6vLmc+Ns0LX9KsYZs0J8
      7gKdo8aXZVpILykE4lc9zI4knvnZZduYrg16zZkfTV7rrBAuF8uNE8B/9j/+CcWX2KD/8W++
      xa++O/U1tcjlMnktD8E/+LM/5gfv/4RO33zudxzbplqrPfX7Wq12obM4m9UqX26Fbpj0X/LH
      tG7MqPDG81p6gFgqh6LItBsnfPjwIeH8NFZtGyU1g8+oUW12GZ5Zwug2ONh8RDA9RuVgG8uX
      ZFDfI5afRzHr1DoDJvNxVg/aZJJxRofC1PsyQ1GJ97//PqHhWVSjjOOPoVeqhLJDHG9u4IkP
      E7AqaJ4EdmUfKTvBuwszL2+4y43jtfQA7XqRo4qGoNcwPCF8ikQ8mabXqGMpfhZmJ+h22vT7
      Or5omuF4ABQv9VqF/Ogks1Mj9E2YHknTbDQZX7jH1JCPDz7dIhIOMGhXEEJxyuUikjfCwlQe
      fyzLWBTqA5WwTyEcT2J2OqSHR5mZHn8dh+nyBvBaeoBb73wXVRLQLBjv7eANBhG6PYbyCTrl
      HfYtgbnZKbRuB1EUUfwq8XCE3OgU6aBEYb/IxGiew6rGzOwCA0lCa1r4wyGCXhlHzpIIdJiZ
      niKgygiCQj6fQg54uTvVxfIG8ALJfI7hdJCt3UMirghcnsHXboPatn0mF8a2LBDEZy40f1Us
      y+JHDw/QjOc/mwAsjCWfmdbwKrhA1z3+xtugZ7UgxXNcdF/mO7dHzuXju7xZ3Dgb9L/+B9/n
      5KxVIj/rLM9Ra+BVZ62+qfFXoQ1fjr9gAVh88rOf0jUc5u99g/gza3gBjkWl1iaZiD7x60G3
      iemN4Hvhzd5m5eP7REfnyMZDwOls0EazzdTkxEtbeFRpX/np0C5fHxcsAIdALMds2GKv3uR4
      ax9bjRJ02jQsL/mIyOZehezYBKJt0ake0CWEatZoDrz4tSMOpCy3Mx52DquMjk9TPtrC64sw
      OjtDo1gmGfWwvVfmVizJTzcekZ9cwup16fW6HO/ukRgborhbpdfYRwrnGLRK2L4ESzPjF3uo
      Lm8EFz4Yrh5t82cfbjGk9Ng8KNHpdpFlmXa7jWHaLN1Zoluv0Wp30S2ZhZkM1UqHw40tYsMj
      LC3OU633uHdrkuOjEyKZYeZnR3j0ox9CIPr5bFDF1hmYGts7h7TaLQC6zSaGoVGtd0AJkouJ
      bBVKdLvuHd/l2VxwDyAyd+cd3vFJ1DsDFsaGGKhhPIpBJKJiG20+fbTJnaU5DF3HIwkIKCSS
      EUKpHJFEkkfra8yNDrG8cczMzDSiLGBZDrbiIxPxAg6JZAyvaOBrGWSH0ngkCweBoMdmeblA
      NjuKXxXwh4PMTeWwfG5GCJdn87XaoObAQJQVvqqTaRkaPVMk5FfPtX/LsvijH63T1s5XKPs8
      D2BntYHflPir0IYvx9+46dBujTD3PcCNng79B//0A2rt/plincdlIoUzZpUAcBz7lWqMAfyH
      v3GP4ZQ7fHudXEMBOBxsr3JU6TB3+20iz/NMLYNGzyQaenI12IPt0rWxQf/tX1687Ca88VxL
      AdRqLVLZEfyiwYOPVwilR7Gbh1Q6NjOTeTa295mfm6LVG1AsrCGGh5gZy152w12uINdwToDA
      7OItZL3Mg48esV/vUKnWsCQfC3kfB5Ueltmn0+7Q7GgMTJNuu/15kWsXly9zDQXgUDrcpdiw
      mb41SzqgEgmHaJb3WSsNGMsEkWUF1ecnEQmiKgqq92xpDF3efK7hEEhkbGaRscc/vfveab6f
      XjKMP3CaCv0b30h+8fVU/Ino9xbyNM6Y1vDrtkHDgfPZvi4vx7VBv2I8uDaoa4NeY/6vP39E
      q2ecKfYqvgj7W3/t1rlfEN5knhJAv3GC4U8i9uoIvhAB9cVKM7s1mk6QRPDVsxlrzRpOII7/
      jPKzbZPBwKF8sIkQyJBORlC+lGtHb7cZqCpB5ek2/dXHhWtjg74K/+YvzLsCOAdPXYKKT2Zn
      7xjVahDP2HzwYJep+QWKm8uEctN49ArlnkA2Eccn2Jh2g6opUSksI4WHSIY8VGsNxiemONx6
      RNMOMJ4KsLO3R2pkFqFbYmN9l8Wf/xX6rSrRaJBaTaPXKHLSsZmfSLG8ccTM7Bh7W1tEsxOE
      xR6FcpeF6Tyry+tkRvMMWhofPljnzi0/naBCbW8bTzxPRNR48PEGU99+75kCcHH5Mk8JQFCi
      OPohfVHB7rboa202CgXo9JF6dbSGxdLtUVaX94kLA4S0ijPo0+r2KRXXmR4Kkp28hSSYNBod
      jo4PUIUxRhduUy6sMTADLM2O4gClUolQWOb4uIIkCuR9EsVOG3PQp1Fvkh6donxYoHBSAtHL
      Khr5mVv4qHLs+Ll1+zbpgMrxyR47BycEezZdv8qdpVn651uz4XJDeGowKggCMb9DMDEMgoBH
      8REJBlBVBdtR8Ht6PFw/QLJabJVqqEqAgCojiiLxWJRIMkvYpwAOgigSicfxhyL4VYVwOA5G
      hc2jOooI6YiP+/cfIXpVYvE4/nCYgKoiCg62bbL28BOUYIp8NoM3GCKbGWLr0cc0NYeAXyUQ
      8COrKrF4mmjISzgcRcVgZecAWZQwDY1Gs02lVr+EU+tyHbiyLpCu9bBFD76XPIN8FSzL4u/+
      4Y+pts66JPLx3+foXS56OeDf+VvfIRbyvXK86wLd8Bphtm2f+QL8LPY8F7BlWeeyUa97/FVo
      w5fjb5wNKknSmW3Ii8gODSDL5zvt1zn+s/vtWbdx3vjP+Cz+Gk6FODvnvXtfVBtucjyc/wZy
      kcdwo4ZALi7/OjeqBwBwbIvDvQKd/oC+pmFbBp3e8+cGmXqPSr3FZ5Pw6p0+mqYBFu32y1+o
      ObbJ7vYmja5Or1Vj76iMben0DZtup439kvuPZfTY3Nig2dXR2nV2D8s4lo6mW68Uf9oIk3K5
      im0N2Cvs0B/YaJqGqWtoxsuXh54c7bG5vYsxOI3XPos3+mj6y+Nty6CwvU2nP6BWPqJca6Pr
      fSzbpt3uvDS+UtxnfX2dk3qH+skRpWoLQ+9jWa8WP+h32d4uoA8sGifHFKtNDL2Padk37xmg
      Wd6lZcicbGwR88nYzoDQ0ATB53y/Xqtx0tbxW21Oejb6yQaRkB+fYOBJTBB6yf60VgM1GKaw
      vYlo6gS8Isd06fW9GKbO4szz9nzKwDAJR0JsbKyjOiYBn8CR0KWj+TBNjcXZF8cDlA8KfFyo
      cScfwpADbGwV8HlsrL7GyMzLF90cn1QYHZ+mur91Gr+5jV8BW++Tn1p4afzu+ipyNAtGl/1S
      HdMsoSeiiA4MlAihl5zEQCiKrnWp1Wv0Oy1sq4SRjCJYMFDChEIvPgeFzQ3USJiNrR1MvQeO
      xSARBUu4eT2AqQ9ID4/glR26zTJ7NY148PlTCVJDWRRZROtbDGWHCKoe+u0KG8ddkuGXT0Hw
      hSJ0G3VGx/Oo/hhD+TR6q8en9z8mncu9dDzrDfop7u7gDwZQ/FGywxn0Vo+HH31E6hXiHbPL
      brFDUHbo9AWGR3LIjk31aJO25cfneQU3xeixvLpGswf5kRweHGrHWzQHKn7l5fGtdpujvU12
      DktEoyligQCG1ubh+j6ZVPSl8b5AEE13yGXChKMpYqEgRq/Nw/U9MqnYS+P9PoX9/SNkj0g4
      kiYeDp3GrxZungD84RDLP/0BfbwEY0PcGkuwe/x0oY5THHY3llldWaHnwMrHH9DQHfzhFO/O
      Z9ncK790f+WtR2wVaxTLbcxukfufbBNJRXj3O9+huLOBab94CFMvHaPZAp2ujtUr8cFHm0TT
      Ed7+9ncoFTYZvKSYh2NDJOKn0+niC4j89AfvgzdAKj9LNjig3Oq95AgMEFRs0yQY9PDTH7yP
      o/pJ5mbIh21KjZcPAzOZFI7jIEkqxf1VDusdvMEw7729yPb23kvjjXYVIZgkoPo4OVhjv9LC
      F4zw3ju32NnefWl8X9eRBAHTkqgerbNbbuAPRXjv3dvuQ7DLzebG9QAuLl/GFYDLjcYVgMuN
      xhWAy43GFYDLjcYVgMuNxhWAy43GFYDLjcYVgMuNxhWAy43m/wedMzbScs/inQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Political Affiliations and its Impact on Infection/Death Rate' width='192'>
      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
      fLBIBZBMav4/HZgZDUzgiSgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Pop Density by State and Political Afflications' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Death Toll' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Infected Toll' width='192'>
      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
      9pSmadr/Ad3IMOfYS2AiAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='US Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Mainland Time Series Map Chart' width='192'>
      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
      ZXkRt4f/BzbC8V5PW+cTAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
