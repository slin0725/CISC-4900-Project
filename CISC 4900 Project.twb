<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' inline='true' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='united_states_governors_1775_2020' name='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/united_states_governors_1775_2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us_states_covid19_daily_revised' name='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us_states_covid19_daily_revised.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us-airports' name='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us-airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19_state' name='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/COVID19_state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017' name='excel-direct.0nwqjag1pmirqe14ajkis19u24pf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
          <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Tested' ordinal='1' />
            <column datatype='integer' name='Infected' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='real' name='Pop Density' ordinal='5' />
            <column datatype='real' name='Gini' ordinal='6' />
            <column datatype='integer' name='ICU Beds' ordinal='7' />
            <column datatype='integer' name='Income' ordinal='8' />
            <column datatype='integer' name='GDP' ordinal='9' />
            <column datatype='real' name='Unemployment' ordinal='10' />
            <column datatype='real' name='Sex Ratio' ordinal='11' />
            <column datatype='real' name='Smoking Rate' ordinal='12' />
            <column datatype='real' name='Flu Deaths' ordinal='13' />
            <column datatype='real' name='Respiratory Deaths' ordinal='14' />
            <column datatype='integer' name='Physicians' ordinal='15' />
            <column datatype='integer' name='Hospitals' ordinal='16' />
            <column datatype='integer' name='Health Spending' ordinal='17' />
            <column datatype='real' name='Pollution' ordinal='18' />
            <column datatype='integer' name='Med-Large Airports' ordinal='19' />
            <column datatype='real' name='Temperature' ordinal='20' />
            <column datatype='real' name='Urban' ordinal='21' />
            <column datatype='real' name='Age 0-25' ordinal='22' />
            <column datatype='real' name='Age 26-54' ordinal='23' />
            <column datatype='real' name='Age 55+' ordinal='24' />
            <column datatype='date' name='School Closure Date' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
            <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Governor(6)' ordinal='1' />
              <column datatype='string' name='Party(6)' ordinal='2' />
              <column datatype='string' name='State Abbreviations' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
            <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
              <column datatype='date' name='Data As Of' ordinal='0' />
              <column datatype='date' name='Start Date' ordinal='1' />
              <column datatype='date' name='End Date' ordinal='2' />
              <column datatype='string' name='Group' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='integer' name='Month' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='Condition Group' ordinal='7' />
              <column datatype='string' name='Condition' ordinal='8' />
              <column datatype='string' name='ICD10_codes' ordinal='9' />
              <column datatype='string' name='Age Group' ordinal='10' />
              <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
              <column datatype='integer' name='Number of Mentions' ordinal='12' />
              <column datatype='string' name='Flag' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
            <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='6'>
              <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='positive' ordinal='2' />
              <column datatype='integer' name='probableCases' ordinal='3' />
              <column datatype='integer' name='negative' ordinal='4' />
              <column datatype='integer' name='pending' ordinal='5' />
              <column datatype='integer' name='totalTestResults' ordinal='6' />
              <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
              <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
              <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
              <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
              <column datatype='integer' name='recovered' ordinal='11' />
              <column datatype='integer' name='death' ordinal='12' />
              <column datatype='integer' name='hospitalized' ordinal='13' />
              <column datatype='integer' name='deathConfirmed' ordinal='14' />
              <column datatype='integer' name='deathProbable' ordinal='15' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='ident' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
              <column datatype='real' name='latitude_deg' ordinal='4' />
              <column datatype='real' name='longitude_deg' ordinal='5' />
              <column datatype='integer' name='elevation_ft' ordinal='6' />
              <column datatype='string' name='continent' ordinal='7' />
              <column datatype='string' name='country_name' ordinal='8' />
              <column datatype='string' name='iso_country' ordinal='9' />
              <column datatype='string' name='region_name' ordinal='10' />
              <column datatype='string' name='local_region' ordinal='11' />
              <column datatype='string' name='municipality' ordinal='12' />
              <column datatype='integer' name='scheduled_service' ordinal='13' />
              <column datatype='string' name='gps_code' ordinal='14' />
              <column datatype='string' name='iata_code' ordinal='15' />
              <column datatype='string' name='local_code' ordinal='16' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age 0-25]' value='[COVID19_state].[Age 0-25]' />
          <map key='[Age 26-54]' value='[COVID19_state].[Age 26-54]' />
          <map key='[Age 55+]' value='[COVID19_state].[Age 55+]' />
          <map key='[Age Group]' value='[Conditions_Contributing_to_COVI].[Age Group]' />
          <map key='[COVID-19 Deaths]' value='[Conditions_Contributing_to_COVI].[COVID-19 Deaths]' />
          <map key='[Condition Group]' value='[Conditions_Contributing_to_COVI].[Condition Group]' />
          <map key='[Condition]' value='[Conditions_Contributing_to_COVI].[Condition]' />
          <map key='[Data As Of]' value='[Conditions_Contributing_to_COVI].[Data As Of]' />
          <map key='[Deaths]' value='[COVID19_state].[Deaths]' />
          <map key='[End Date]' value='[Conditions_Contributing_to_COVI].[End Date]' />
          <map key='[Flag]' value='[Conditions_Contributing_to_COVI].[Flag]' />
          <map key='[Flu Deaths]' value='[COVID19_state].[Flu Deaths]' />
          <map key='[GDP]' value='[COVID19_state].[GDP]' />
          <map key='[Gini]' value='[COVID19_state].[Gini]' />
          <map key='[Governor(6)]' value='[united_states_governors_1775_20].[Governor(6)]' />
          <map key='[Group]' value='[Conditions_Contributing_to_COVI].[Group]' />
          <map key='[Health Spending]' value='[COVID19_state].[Health Spending]' />
          <map key='[Hospitals]' value='[COVID19_state].[Hospitals]' />
          <map key='[ICD10_codes]' value='[Conditions_Contributing_to_COVI].[ICD10_codes]' />
          <map key='[ICU Beds]' value='[COVID19_state].[ICU Beds]' />
          <map key='[Income]' value='[COVID19_state].[Income]' />
          <map key='[Infected]' value='[COVID19_state].[Infected]' />
          <map key='[Med-Large Airports]' value='[COVID19_state].[Med-Large Airports]' />
          <map key='[Month]' value='[Conditions_Contributing_to_COVI].[Month]' />
          <map key='[Number of Mentions]' value='[Conditions_Contributing_to_COVI].[Number of Mentions]' />
          <map key='[Party(6)]' value='[united_states_governors_1775_20].[Party(6)]' />
          <map key='[Physicians]' value='[COVID19_state].[Physicians]' />
          <map key='[Pollution]' value='[COVID19_state].[Pollution]' />
          <map key='[Pop Density]' value='[COVID19_state].[Pop Density]' />
          <map key='[Population]' value='[COVID19_state].[Population]' />
          <map key='[Respiratory Deaths]' value='[COVID19_state].[Respiratory Deaths]' />
          <map key='[School Closure Date]' value='[COVID19_state].[School Closure Date]' />
          <map key='[Sex Ratio]' value='[COVID19_state].[Sex Ratio]' />
          <map key='[Smoking Rate]' value='[COVID19_state].[Smoking Rate]' />
          <map key='[Start Date]' value='[Conditions_Contributing_to_COVI].[Start Date]' />
          <map key='[State (COVID19!state)]' value='[COVID19_state].[State]' />
          <map key='[State (Conditions!Contributing!to!COVI)]' value='[Conditions_Contributing_to_COVI].[State]' />
          <map key='[State Abbreviations]' value='[united_states_governors_1775_20].[State Abbreviations]' />
          <map key='[State]' value='[united_states_governors_1775_20].[State]' />
          <map key='[Temperature]' value='[COVID19_state].[Temperature]' />
          <map key='[Tested]' value='[COVID19_state].[Tested]' />
          <map key='[Unemployment]' value='[COVID19_state].[Unemployment]' />
          <map key='[Urban]' value='[COVID19_state].[Urban]' />
          <map key='[Year]' value='[Conditions_Contributing_to_COVI].[Year]' />
          <map key='[continent]' value='[us-airports].[continent]' />
          <map key='[country_name]' value='[us-airports].[country_name]' />
          <map key='[date]' value='[us_states_covid19_daily].[date]' />
          <map key='[deathConfirmed]' value='[us_states_covid19_daily].[deathConfirmed]' />
          <map key='[deathProbable]' value='[us_states_covid19_daily].[deathProbable]' />
          <map key='[death]' value='[us_states_covid19_daily].[death]' />
          <map key='[elevation_ft]' value='[us-airports].[elevation_ft]' />
          <map key='[gps_code]' value='[us-airports].[gps_code]' />
          <map key='[hospitalizedCumulative]' value='[us_states_covid19_daily].[hospitalizedCumulative]' />
          <map key='[hospitalizedCurrently]' value='[us_states_covid19_daily].[hospitalizedCurrently]' />
          <map key='[hospitalized]' value='[us_states_covid19_daily].[hospitalized]' />
          <map key='[iata_code]' value='[us-airports].[iata_code]' />
          <map key='[id]' value='[us-airports].[id]' />
          <map key='[ident]' value='[us-airports].[ident]' />
          <map key='[iso_country]' value='[us-airports].[iso_country]' />
          <map key='[latitude_deg]' value='[us-airports].[latitude_deg]' />
          <map key='[local_code]' value='[us-airports].[local_code]' />
          <map key='[local_region]' value='[us-airports].[local_region]' />
          <map key='[longitude_deg]' value='[us-airports].[longitude_deg]' />
          <map key='[municipality]' value='[us-airports].[municipality]' />
          <map key='[name]' value='[us-airports].[name]' />
          <map key='[negative]' value='[us_states_covid19_daily].[negative]' />
          <map key='[onVentilatorCumulative]' value='[us_states_covid19_daily].[onVentilatorCumulative]' />
          <map key='[onVentilatorCurrently]' value='[us_states_covid19_daily].[onVentilatorCurrently]' />
          <map key='[pending]' value='[us_states_covid19_daily].[pending]' />
          <map key='[positive]' value='[us_states_covid19_daily].[positive]' />
          <map key='[probableCases]' value='[us_states_covid19_daily].[probableCases]' />
          <map key='[recovered]' value='[us_states_covid19_daily].[recovered]' />
          <map key='[region_name]' value='[us-airports].[region_name]' />
          <map key='[scheduled_service]' value='[us-airports].[scheduled_service]' />
          <map key='[state]' value='[us_states_covid19_daily].[state]' />
          <map key='[totalTestResults]' value='[us_states_covid19_daily].[totalTestResults]' />
          <map key='[type]' value='[us-airports].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D51:no:A1:D51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N10001:no:A1:N10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P14304:no:A1:P14304:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Governor(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Governor(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Governor(6)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Party(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Party(6)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Abbreviations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Abbreviations]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State Abbreviations</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state)]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data As Of</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data As Of]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Data As Of</remote-alias>
            <ordinal>30</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>31</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[End Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>End Date</remote-alias>
            <ordinal>32</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Conditions!Contributing!to!COVI)]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition Group</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICD10_codes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICD10_codes]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>ICD10_codes</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COVID-19 Deaths]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>COVID-19 Deaths</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Mentions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Mentions]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Number of Mentions</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>44</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>probableCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[probableCases]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>probableCases</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalTestResults</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalTestResults]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>totalTestResults</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCurrently</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCumulative</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCurrently</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCumulative</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathConfirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathConfirmed]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathConfirmed</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathProbable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathProbable]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathProbable</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ident</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ident]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>ident</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>latitude_deg</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>longitude_deg</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation_ft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elevation_ft]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>elevation_ft</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_country]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iso_country</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>region_name</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_region]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_region</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>municipality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[municipality]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>municipality</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[scheduled_service]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>scheduled_service</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gps_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gps_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>gps_code</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iata_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iata_code</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_code</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Age 0-25]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 26-54]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 55+]' role='measure' type='quantitative' />
      <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
      </column>
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
      <column caption='ICD10 codes' datatype='string' name='[ICD10_codes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Party (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (COVID19!state) (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska&quot;'>
            <value>&quot;Alaska&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State1 (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;IN&quot;'>
            <value>&quot;IN&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Conditions_Contributing_to_COVI' datatype='table' name='[__tableau_internal_object_id__].[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='united_states_governors_1775_20' datatype='table' name='[__tableau_internal_object_id__].[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_states_covid19_daily' datatype='table' name='[__tableau_internal_object_id__].[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
      <column caption='Death Confirmed' datatype='integer' name='[deathConfirmed]' role='measure' type='quantitative' />
      <column caption='Death Probable' datatype='integer' name='[deathProbable]' role='measure' type='quantitative' />
      <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Elevation Ft' datatype='integer' name='[elevation_ft]' role='measure' type='quantitative' />
      <column caption='Gps Code' datatype='string' name='[gps_code]' role='dimension' type='nominal' />
      <column caption='Hospitalized Cumulative' datatype='integer' name='[hospitalizedCumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalized Currently' datatype='integer' name='[hospitalizedCurrently]' role='measure' type='quantitative' />
      <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
      <column caption='Iata Code' datatype='string' name='[iata_code]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Ident' datatype='string' name='[ident]' role='dimension' type='nominal' />
      <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude Deg' datatype='real' name='[latitude_deg]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Code' datatype='string' name='[local_code]' role='dimension' type='nominal' />
      <column caption='Local Region' datatype='string' name='[local_region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Longitude Deg' datatype='real' name='[longitude_deg]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Municipality' datatype='string' name='[municipality]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Cumulative' datatype='integer' name='[onVentilatorCumulative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Currently' datatype='integer' name='[onVentilatorCurrently]' role='measure' type='quantitative' />
      <column caption='Pending' datatype='integer' name='[pending]' role='measure' type='quantitative' />
      <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Probable Cases' datatype='integer' name='[probableCases]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Scheduled Service' datatype='integer' name='[scheduled_service]' role='measure' type='quantitative' />
      <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Test Results' datatype='integer' name='[totalTestResults]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[Age 0-25]' derivation='Attribute' name='[attr:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Avg' name='[avg:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Avg' name='[avg:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Avg' name='[avg:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
      <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='5' column='[Age 0-25]' derivation='Percentile' name='[prc5:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Sum' name='[sum:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Sum' name='[sum:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Sum' name='[sum:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state))' hidden='true' name='[Action (State (COVID19!state))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),MONTH(Date),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),MONTH(Date),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State Abbrev)' hidden='true' name='[Action (State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State1)' hidden='true' name='[Action (State1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Governor(6),State Abbreviations)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Governor(6):nk]' />
          <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (COVID19!state),WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State1,WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group caption='United States' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
            <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[prc5:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Party(6):nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party(6) (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID19_state' id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Conditions_Contributing_to_COVI' id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B'>
            <properties context=''>
              <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
                <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Data As Of' ordinal='0' />
                  <column datatype='date' name='Start Date' ordinal='1' />
                  <column datatype='date' name='End Date' ordinal='2' />
                  <column datatype='string' name='Group' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='integer' name='Month' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='Condition Group' ordinal='7' />
                  <column datatype='string' name='Condition' ordinal='8' />
                  <column datatype='string' name='ICD10_codes' ordinal='9' />
                  <column datatype='string' name='Age Group' ordinal='10' />
                  <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
                  <column datatype='integer' name='Number of Mentions' ordinal='12' />
                  <column datatype='string' name='Flag' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='united_states_governors_1775_20' id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE'>
            <properties context=''>
              <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
                <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Governor(6)' ordinal='1' />
                  <column datatype='string' name='Party(6)' ordinal='2' />
                  <column datatype='string' name='State Abbreviations' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_states_covid19_daily' id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B'>
            <properties context=''>
              <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
                <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='6'>
                  <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='positive' ordinal='2' />
                  <column datatype='integer' name='probableCases' ordinal='3' />
                  <column datatype='integer' name='negative' ordinal='4' />
                  <column datatype='integer' name='pending' ordinal='5' />
                  <column datatype='integer' name='totalTestResults' ordinal='6' />
                  <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
                  <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
                  <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
                  <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
                  <column datatype='integer' name='recovered' ordinal='11' />
                  <column datatype='integer' name='death' ordinal='12' />
                  <column datatype='integer' name='hospitalized' ordinal='13' />
                  <column datatype='integer' name='deathConfirmed' ordinal='14' />
                  <column datatype='integer' name='deathProbable' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us-airports' id='us-airports_65636316B8D74AF2A1176E9E7E31D698'>
            <properties context=''>
              <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
                <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='ident' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='name' ordinal='3' />
                  <column datatype='real' name='latitude_deg' ordinal='4' />
                  <column datatype='real' name='longitude_deg' ordinal='5' />
                  <column datatype='integer' name='elevation_ft' ordinal='6' />
                  <column datatype='string' name='continent' ordinal='7' />
                  <column datatype='string' name='country_name' ordinal='8' />
                  <column datatype='string' name='iso_country' ordinal='9' />
                  <column datatype='string' name='region_name' ordinal='10' />
                  <column datatype='string' name='local_region' ordinal='11' />
                  <column datatype='string' name='municipality' ordinal='12' />
                  <column datatype='integer' name='scheduled_service' ordinal='13' />
                  <column datatype='string' name='gps_code' ordinal='14' />
                  <column datatype='string' name='iata_code' ordinal='15' />
                  <column datatype='string' name='local_code' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (Conditions!Contributing!to!COVI)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Abbreviations]' />
              <expression op='[state]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[region_name]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us-airports_65636316B8D74AF2A1176E9E7E31D698' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='Total Monthly Death Toll' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_086B8D2789A744D0AE153557B5FD510E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Airports Dashboard' type='sheet' worksheet='# of Airports within each State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Airports Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_F5B03D4E998D46849F7CCDD52D58732E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_7D098748666743099FF1FB542282EA34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,US Death Map Chart,Hawaii Death Map Chart,Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_7DFE20DBD5644CE3AA03C49AFB1E9B89]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='Hawaii Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_BBB13193C6E74EB281DBDA031FD37000]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='Alaska Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,US Death Map Chart,Hawaii Death Map Chart,Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='# of Airports within each State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1AD2B499-30E1-4F3C-861C-407A8AC34176}' />
    </worksheet>
    <worksheet name='Airport Per State to Positive Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Airport Per State to Total Positive Cases Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]'>
            <groupfilter function='level-members' level='[State (COVID19!state)]' user:ui-action-filter='[Action3_086B8D2789A744D0AE153557B5FD510E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='cols' value='Total Positive Cases' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US airports' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' max='1419311' min='-72542' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' field-type='quantitative' max='1986' min='-117' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</cols>
      </table>
      <simple-id uuid='{B636ABC4-D851-432E-BFF8-8C4FF51DD856}' />
    </worksheet>
    <worksheet name='Alaska Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DCF9831441914AD8A8798BF49F0B92F3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{727F25AB-ABE1-4441-AAED-AC2E60C2ECDC}' />
    </worksheet>
    <worksheet name='Alaska Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
              <groupfilter function='level-members' level='[none:state:nk]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.79000002145767212' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{A9713877-2563-459B-84FD-DC41AFB4C7A5}' />
    </worksheet>
    <worksheet name='Death Rate by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
            </column>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' z-order='3' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk])</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{49BEE33E-2AC3-422C-B54B-D12DF3E86875}' />
    </worksheet>
    <worksheet name='Death by GDP and Pop Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]' field-type='quantitative' max='90765' min='40000' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk])</cols>
      </table>
      <simple-id uuid='{FA052490-9185-4859-B657-2A8F61E89A58}' />
    </worksheet>
    <worksheet name='Death/Infected/Population Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
            <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hospitalized]' derivation='Sum' name='[sum:hospitalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:hospitalized:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' value='191' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-decoration' data-class='total' value='none' />
            <format attr='text-decoration' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-decoration' value='underline' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A5F8D895-4944-4C1A-AB30-16F5F9E2D43A}' />
    </worksheet>
    <worksheet name='Deaths Per Gini Coefficient'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Gini]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gini]' derivation='Sum' name='[sum:Gini:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' field-type='quantitative' max='0.55776000000000003' min='0.40000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' scope='rows' value='Gini Coefficient' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{A4D1A66D-7C3F-4FFB-94E8-6B2AEB2923CC}' />
    </worksheet>
    <worksheet name='Hawaii Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_BBB13193C6E74EB281DBDA031FD37000]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{C8CED8A6-1A24-4BCE-9663-53590EC1CAE7}' />
    </worksheet>
    <worksheet name='Hawaii Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-16809713.700985081' min='-18259911.136666499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='2776465.8887046324' min='1907409.8083608563' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.79000002145767212' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{92D5A6CD-0930-4D7A-8DDF-96577DA4A74F}' />
    </worksheet>
    <worksheet name='Infected to Hospital'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]</cols>
      </table>
      <simple-id uuid='{A179A824-76BB-42F9-87B2-4F3E728606C8}' />
    </worksheet>
    <worksheet name='Major Reason for Death in relation to Covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Conditions!Contributing!to!COVI)]' derivation='None' name='[none:State (Conditions!Contributing!to!COVI):nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]'>
            <groupfilter function='member' level='[none:State (Conditions!Contributing!to!COVI):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]</cols>
      </table>
      <simple-id uuid='{C882F5DD-BA72-4DB0-9AE7-73C9B4D92D14}' />
    </worksheet>
    <worksheet name='Political Afflications and its Impact on Infection/Death Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Political Afflications Of Each State and its Impact on Covid Infection and Death Rate
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Republican&quot;'>
                  <value>&quot;Republican&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='member' level='[mn:date:ok]' member='9' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Governor(6):nk]' />
                <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Governor(6):nk]' member='%null%' />
                <groupfilter function='member' level='[none:State Abbreviations:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk])</cols>
      </table>
      <simple-id uuid='{74B9E1EC-6DEA-4693-906F-9CE3514BB839}' />
    </worksheet>
    <worksheet name='Total Monthly Death Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Death Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{070A88E5-483E-4C2A-81FE-BD5E2569370A}' />
    </worksheet>
    <worksheet name='Total Monthly Infected Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Infected Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5A6A41C2-B505-4668-8919-C1CBD1AE00AC}' />
    </worksheet>
    <worksheet name='US Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_BBB13193C6E74EB281DBDA031FD37000]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='Search&#10;'>
              <formatted-text>
                <run>Search&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{71A4E8A4-1896-4475-8F52-2EFAD3C2A21A}' />
    </worksheet>
    <worksheet name='US Mainland Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_A889BFCA765748FFA82F4B387354C258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-7134432.7690936662' min='-14206738.130375603' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='7923064.2579004914' min='1237693.3698786832' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.79000002145767212' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{1397F377-72EE-4189-AD53-4A43FE85925B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airports Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88310' id='8' param='horz' type-v2='layout-flow' w='97858' x='1071' y='10833'>
            <zone h='88310' id='6' type-v2='layout-basic' w='76439' x='1071' y='10833'>
              <zone h='44155' id='3' name='Airport Per State to Positive Cases' w='38217' x='1071' y='10833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='88310' id='5' name='# of Airports within each State' show-title='false' w='38222' x='39288' y='10833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='44155' id='47' type-v2='text' w='38217' x='1071' y='54988'>
                <formatted-text>
                  <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                  <run>


Outliers: Alaska, New Jersey
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='88310' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='21419' x='77510' y='10833'>
              <zone h='6966' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='21419' x='77510' y='10833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9976' id='10' type-v2='text' w='97858' x='1071' y='857'>
            <formatted-text>
              <run fontalignment='1' fontsize='20'>Airport Correlation to Infection</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98286' id='59' param='vert' type-v2='layout-flow' w='97858' x='1071' y='857'>
                <zone forceUpdate='true' h='9976' id='10' type-v2='text' w='97858' x='1071' y='857'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='20'>Airport Correlation to Infection</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44155' id='3' is-fixed='true' name='Airport Per State to Positive Cases' w='38217' x='1071' y='10833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88310' id='5' is-fixed='true' name='# of Airports within each State' show-title='false' w='38222' x='39288' y='10833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6966' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='21419' x='77510' y='10833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44155' id='47' type-v2='text' w='38217' x='1071' y='54988'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                    <run>


Outliers: Alaska, New Jersey
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7DE4F89-6482-48AC-BCEB-DD05B978FDE1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death Report (old)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='9' param='horz' type-v2='layout-flow' w='99064' x='468' y='50000'>
            <zone h='49151' id='7' type-v2='layout-basic' w='89702' x='468' y='50000' />
            <zone fixed-size='160' h='49151' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='50000'>
              <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49151' id='54' param='horz' type-v2='layout-flow' w='99064' x='468' y='849' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100000' id='3' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='713' h='100000' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='41720' x='0' y='0'>
            <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
              <formatted-text>
                <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='5414' id='17' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
              <layout-cache fixed-size-h='43' fixed-size-w='573' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90128' id='12' name='Total Monthly Death Toll' w='41720' x='0' y='9872'>
              <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='100000' id='5' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
            <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='66' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='65' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='5' is-fixed='true' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='35' h='5414' id='17' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
                  <layout-cache fixed-size-h='43' fixed-size-w='573' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90128' id='12' is-fixed='true' name='Total Monthly Death Toll' w='41720' x='0' y='9872'>
                  <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E79A1F6F-B349-4E2D-9E5C-1053EADE6491}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death/Infection Report'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='618' maxwidth='1350' minheight='618' minwidth='1350' preset-index='17' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97412' id='17' param='horz' type-v2='layout-flow' w='98814' x='593' y='1294'>
            <zone h='97412' id='15' type-v2='layout-basic' w='98814' x='593' y='1294'>
              <zone h='84143' id='5' param='vert' type-v2='layout-flow' w='49408' x='49999' y='14563'>
                <zone h='84143' id='10' name='US Death Map Chart' show-title='false' w='49408' x='49999' y='14563'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='7929' id='7' name='Death/Infected/Population Metrics' show-title='false' w='98814' x='593' y='6634'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                </zone-style>
              </zone>
              <zone h='84143' id='8' param='vert' type-v2='layout-flow' w='49406' x='593' y='14563'>
                <zone h='42071' id='9' name='Total Monthly Death Toll' show-title='false' w='49406' x='593' y='14563'>
                  <layout-cache cell-count-w='11' minheight='180' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
                <zone h='42071' id='11' name='Total Monthly Infected Toll' show-title='false' w='49406' x='593' y='56634'>
                  <layout-cache minheight='180' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='5340' id='14' type-v2='text' w='98814' x='593' y='1294'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='14'>2020 COVID Death and Infection Report</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19094' id='12' name='Alaska Death Map Chart' show-title='false' w='8741' x='51926' y='74110'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='19094' id='13' name='Hawaii Death Map Chart' show-title='false' w='8741' x='61185' y='74110'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone friendly-name='Search ' h='9223' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11852' x='85556' y='17314' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97412' id='23' param='vert' type-v2='layout-flow' w='98814' x='593' y='1294'>
                <zone forceUpdate='true' h='5340' id='14' type-v2='text' w='98814' x='593' y='1294'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='14'>2020 COVID Death and Infection Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='39' h='7929' id='7' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='98814' x='593' y='6634'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='42071' id='9' is-fixed='true' name='Total Monthly Death Toll' show-title='false' w='49406' x='593' y='14563'>
                  <layout-cache cell-count-w='11' minheight='180' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Search ' h='9223' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11852' x='85556' y='17314'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='84143' id='10' is-fixed='true' name='US Death Map Chart' show-title='false' w='49408' x='49999' y='14563'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='220' h='42071' id='11' is-fixed='true' name='Total Monthly Infected Toll' show-title='false' w='49406' x='593' y='56634'>
                  <layout-cache minheight='180' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='116' h='19094' id='12' is-fixed='true' name='Alaska Death Map Chart' show-title='false' w='8741' x='51926' y='74110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='116' h='19094' id='13' is-fixed='true' name='Hawaii Death Map Chart' show-title='false' w='8741' x='61185' y='74110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F000C517-4B7D-4B1A-A5FC-BCAFB59B1AA2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Economic Factors Dashboard'>
      <style />
      <size maxheight='868' maxwidth='1324' minheight='868' minwidth='1324' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98156' id='3' param='vert' type-v2='layout-flow' w='49396' x='50000' y='922' />
          <zone h='49078' id='5' param='horz' type-v2='layout-flow' w='49396' x='604' y='50000' />
          <zone h='49078' id='6' param='horz' type-v2='layout-flow' w='49396' x='604' y='922'>
            <zone h='49078' id='7' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
              <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='24' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='49078' id='7' is-fixed='true' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
                  <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BA36339-ACCC-451D-9381-DE03DB3DB634}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='1' param='vert' removable='false' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='4297' id='3' type-v2='title' w='98828' x='586' y='1042' />
            <zone h='13151' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98828' x='586' y='5339' />
            <zone h='80468' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98828' x='586' y='18490'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='2020 Death/Infection Report' captured-sheet='Death/Infection Report' id='5'>
                    <currentDeltas>
                      <worksheet name='Alaska Death Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
                            <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Hawaii Death Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Hawaii&quot;' />
                            <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas />
                  </story-point>
                  <story-point caption='Airport Correlation To Infection' captured-sheet='Airports Dashboard' id='1'>
                    <capturedDeltas>
                      <worksheet name='Airport Per State to Positive Cases'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US Airports' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Death Rate % and Population Density by State' captured-sheet='Death Rate by State' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='4557' hidden='true' id='6' story-point-id='3' type-v2='text' w='16837' x='80966' y='34635'>
          <formatted-text>
            <run fontsize='9'>Death Rate % = Death/Infected</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{44A79766-1119-4F82-BDBE-4F7EF583F60D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Airport Per State to Positive Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State1 (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D3038513-041A-4A1D-B829-DFD6ABD9DBC5}' />
    </window>
    <window class='worksheet' name='Political Afflications and its Impact on Infection/Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{506A2545-3A3B-43E5-A3F8-91C2E5B1D6C2}' />
    </window>
    <window class='worksheet' name='Death Rate by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D732364-654D-4095-9ACF-A45179BBCC58}' />
    </window>
    <window class='worksheet' name='Deaths Per Gini Coefficient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{1497C8DF-4485-47A1-AA4F-B81F1243F789}' />
    </window>
    <window class='worksheet' name='Death by GDP and Pop Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DE7FE10-ED05-48F7-AB1C-F5518CE74174}' />
    </window>
    <window class='worksheet' name='US Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4F0610E-E3BA-4CED-8831-372498677E79}' />
    </window>
    <window class='worksheet' name='Hawaii Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17F2DF32-A3B6-47BF-AF5F-7A82DE31B089}' />
    </window>
    <window class='worksheet' name='Alaska Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3833707E-FCB3-4321-9E81-C6D6EA98CF37}' />
    </window>
    <window class='worksheet' name='US Mainland Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-12-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12CF59F3-AC08-40CF-9003-A07700D363FA}' />
    </window>
    <window class='worksheet' name='Alaska Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-03-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1430A37-D62C-4A13-B3C9-CF0D90F41B37}' />
    </window>
    <window class='worksheet' name='Hawaii Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-08-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07815A29-B9E9-4B76-980C-B331F625311B}' />
    </window>
    <window class='worksheet' name='Total Monthly Death Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CE1E20EF-C2A3-4A7E-8A6A-D4F0BB32F6BE}' />
    </window>
    <window class='worksheet' name='Total Monthly Infected Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C1838E95-C246-4D38-BC48-D3BD1F44DBC1}' />
    </window>
    <window class='worksheet' name='Death/Infected/Population Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state1):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F7DE0-FBC3-4B2E-BCD6-7D9A25099CCC}' />
    </window>
    <window class='worksheet' name='# of Airports within each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A3B6861-1B43-442B-94A1-1C04A970296E}' />
    </window>
    <window class='worksheet' name='Infected to Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6706D4C-D15D-4D55-B522-88BD3A0680D6}' />
    </window>
    <window class='worksheet' name='Major Reason for Death in relation to Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C985839-02A7-436E-9C51-FBB5B690285C}' />
    </window>
    <window class='dashboard' name='Economic Factors Dashboard'>
      <viewpoints>
        <viewpoint name='Deaths Per Gini Coefficient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CD636EFA-5D86-4B7F-ADC4-F57687B237EA}' />
    </window>
    <window class='dashboard' name='Airports Dashboard'>
      <viewpoints>
        <viewpoint name='# of Airports within each State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Airport Per State to Positive Cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}' />
    </window>
    <window class='dashboard' name='Death Report (old)'>
      <viewpoints>
        <viewpoint name='Death/Infected/Population Metrics' />
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1777F54D-B7AB-4DF6-AEB7-EE97E4599829}' />
    </window>
    <window class='dashboard' maximized='true' name='Death/Infection Report'>
      <viewpoints>
        <viewpoint name='Alaska Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death/Infected/Population Metrics'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Hawaii Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Infected Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{240C9E87-1CC3-4E69-A5B2-CCBBBB493FEA}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{67A894E8-08FB-49BB-9AEA-DD5295CA1228}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# of Airports within each State' width='192'>
      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
      cinRhjKUawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Airport Per State to Positive Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airports Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alaska Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Alaska Time Series Map Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dV3QbWZrf/1WoAkAQJJiDmHMQqdDK6pZa6qCZ6e4ZT/dO2DC76znOx2f9
      sO9+3Bcf++zx2H6ZB/vYxzNez/Hs7oQOI3VLLbVaamWRFCkxZxJMAEgio6quH6gLFYBCIgFU
      gazfOX1aBAqoC+D77v3ud7/AjI2NEUEQoKNzEOEEQYCuADoHFVbtAejoqImuADoHGl0BdA40
      ugLoHGg4tQeQ7xBCIIoiWJaN+DfDMDAYDGoPTycJugLsAUEQIIoiAIT/H/1vqgw62kRXgF0g
      SRIEQYAkSWAYRlHACSEQBAEGgwEcp3/N2YYQAgBpTzb6HiBNCCEIhULhL5w+Fv0fRRRFSJKk
      xlAPDIQQjD56gMmxsYjvPhV0BUgDOqunSygUijCLdDLL5PAzXKgqRovfhbHbX8K+uJiyIuhr
      cxpQs4ciX24TLcF0c6xvijOPx+1GmceJ4ppmFFss6DhE8Ktbt+CtqIChrhlN7R0JX6+vACki
      3/CmAyEELMuC5/ksjEpn/tkAXmtpDP/NMAx+/ObrePdwF/yry1ien8PP/+t/wYunjxVXBV0B
      UoRueBMR/Tx1hfI8r3uCssDS/ByOlFhgYCPFWJIkjMwvoqSpFU8fPcJfnDmGC6UFmBwajHkP
      DtiZpfQfKDEMw8TMIBzHgWVZiKIY3huwLAuDwQCW1eeWbGJfXEClawUNtdURjwcFAX/7u6uo
      6+0HNzWFHx5uQ1mRFQaWhX9+NXwddVboe4AUMRgMEEURHMeFXZ9UyKkiANAFP0NIkoTpyUnw
      PI/G5mYAOx41r9eL+RcjOGzh0Bol/ADAGwzoaGpAfVcXVseeo7q0BADwfG4ea1tueD0e8EYj
      Rm5cQ7nF/GoFoLaqjjIMw8BkMsVdKfXvLnN4PR4sP7mP+fkFLIckLIwMoby0BFYxBBvH4jst
      TeDiOBQYhoFnfQ2myWGcqykPP97T2AAzz2P2m5vYNJjwfn8XTDwPZmRkhIRCofCLdXTURBAE
      zN2/g3c6mrDm2gTLsigvLkpLNu0bDlSWlsTsDShyk58DdMHX0QaEEDx9+ABvlO0IfNVL8yVd
      asrLEj5P5Z1hGN0LpKMdpoeHYFhZxK/vPIAoimmf6u4GXQF0NMHC1CR6eQnFJh5CUQl+/vFV
      BF6a5tmCEKIrgI76LExPocHnQl15GRjeiG5bIf7N974Ds9GY9XvrblCdnOLY2IC5oAAWiwWB
      QADTTx+hr7gATdWVIIQg4N7GyrYnZ+PRFUAnZwSDQYzd+gJfD43gvUtvopRn8a3WxrBLk2EY
      vHfuNH75+Zc5O5zVtALoJ9T7B0IIJgceI7i9hX/x7iUc72hVvI5lWbx5tB+CKILPQR4FMzIy
      otnCWDSKkp68xks+0dE26+vrmJuZxrlCA+orK9QeTgSqrACSJIUFO1G2FMMwMRGYNNZGV4b8
      YcVuh3FjBXVN/WoPJYacKwDNqJL/TeNrlK6NRpKkcEw+DT+gwWeSJIEQosfda4wisxH97c2a
      nLByrgDRM7okSQgGgwAAo9Go+CXFSzyhMUySJIFlWXAcF47KlMc3yV9PFYjuL4w5cLUdZOzz
      c2gJulFRpS3Th5K2AlBh2w1yYZXH10cH4smFPNUYfGpWATvxJPTxePsbqiCCIOhJ61nC7XbD
      Yp9DsyxhRWso/vJyAZTHudNqCEajMW0lkCeTcxwXkzwun6kZholYGeRKoBSXL3+N0vWJoEnr
      etJK5nE5nSgMBdUeRkI4utGkAkgFgs7Q1FSQCxedNZOZK3IEQQgLLiEERqMxfK947k6O48Ix
      IekIdSpEm1XBYBAsy4a/Bz28ee+4nQ6cbKhXexgJ4ehMTIVc7nYElNP8ojey0c8bZAcbVGHk
      CiUIQtibE2/DKhfAbLtp5WYUVXQ6Nn1V2D0sb4Sg8WoYHBVGURTDNnQ8M4OSTCiUBFauUOlE
      +eVyJpZ/Lnk9H6rU+qqQHv4tF2yVdWoPIyHhPYDcO7PXMNRUNq7pzKxqzMLyDbq8rEk8008n
      EkIICkN+tYeRFFZJGLMdghC9AU6E2kVm5SuXKIoIBoM5iVPPd8YHB3C8tlLtYSSFBaBYui/b
      sxxtzZRK2cB0FCYbRO+H4u1/dHZwOZ2oEzyotBWrPZSksNQLIyddOz1d5BtuWjYw0f20sBmV
      xyJRk0gnlmAwCPfYMI40Nag9lJTgOI5TnIWzPeNGbzjp+YKSoCu5QvdKsmrCqT6v84qNtTV4
      J1/gQmt+CD8Q5QWi0JPZXFY1jrcxpt4ptVYAJcWTn5dQdy59fL8SCoUiPGGSJMHpdGJ1cQGi
      xw1OFNBmNeF0e5PKI00PTn7IJSfXM5z8PIL+TU+es3GvvSI3hejkwfP8vnWVPvjDJ6gvKkAI
      LBiDAUYioarQjL6qSlgOlao9vF3DcRwHr9cb80S29wFK96MxPNGb3mzNrHJli34slXtGnybT
      WXI/xhZV2Ipwuadd7WFkHFZLWVd01s+28Cc6h1BqchH9nPzv6HHu14YYLLs/Q8xZeYyOnIO0
      yUt3oxvvca1MJNmAk/an14uN96Pt5x9TiVSUQCkvQWm12G+rgMfjQYVxn64ASg/G2xhrmXg9
      utIhEy5PecBfMBjMu+8xGlEUcePaNVQUF6k9lKzAKbXxzPUGWG1S+azJrlHaS9E9TT7nL3/2
      6ScoDXpg3KcdbpjBwUFCE08OKrtRdqXTc/n/5Y9LkgSj0Zi3JegDgQDmhgdxodKGwgKz2sPJ
      KPn3a0SxG9MnXYFXSsZRmu0T3SsYDCIYDGY9tyEbmEwmtB8/ia9nFuH1B9QeTkbJewVIByUl
      Ufpb6TqlJKFoxUjkUKD/5esGmWEY1J8+jxsOL64/n4AvsD8UIe9NoHTODNK19ROlYe7l/IRW
      sMhXRFHE3NBTnCmzoshSoPZw9sSBWgESkcyEShYxG22KJXovGuJBwyjyzeFgMBjQfPQ1fOP0
      wuXOXSHbbHAgFCBd1+huT4rTQd5ZMh9hGAYtR47hK5cfMytrag9n12hOAXazQU3HzZhKuuZu
      xiYfRyrjkecZ00yzfNsbMAyD3mPHMcGY8lYJNKUA0aeryWJy0kmrjL6H0jXp2vR79e3TDTFN
      +MnXTLOW3j4sllTj7vi02kNJG00pQDzkwr4X00NrB1I0AjYUCkXE2ecjNXX1WDdZs97WKNPk
      hQJkilyFWaeDPIqUkm+bYkp7Xz++mZhRexhpkbcKkInZfDcmVPTrMymsdBWgJSTzDaPRCCeX
      XyfFmlKARBtI+eHTbgQ/+nXpvEeucibkFfe0sDrtBpEzQsoj5dWUAshJx6Oym/fd65iyST7G
      C1GMZjN8eRQukZfHkfEC0dJF6XWp7hHSvWc6q4g8VTPaAaCFEjGJ6Ojuxo2nj2D0ulFdYERR
      gRkAg9baagRDAqaW7aguLUFpkVXtoQLI01CITClALkh3rFRRaOMOempM34fjuPAKQSNNWZZN
      WsYl1xBCsL21hcePH6GzowNzg09hq65FdUsrBh/cxw+6mmCzFqo9TO2aQInIlnmULok2wfL8
      5kQBd/FCLORtoOSlIanrlCpGKBRCIBBAIBDQlAuVYRgU22y4dPkt+LxetBYVgOV5lJSUoK2o
      QBPCD+SpAmideIqRSqKR0nmH3AFAY4doLJF8IlCq8qcFzOYCNFdVoC7kwcDjR+gss6k9pDC6
      AmSIVE6nUxVO2qiDonSSreTVkreJ0hK19fW4txnAkmsLXo8XBK++B0EQ4VfRBM/LTbAWSCbM
      qcQCyWf7eC5aOtunCu32kytPEiEEjo0NrK/YIQQCWNvcxJmz51BQ8CpMmmVZ9J8+gxcjw2Ad
      TjwPMjBubmF5cxsTEgcTAxic6yAAvnPscE7GHR5bTu+2T0iWVAMk3qckMoWomRMMBsMmDvX8
      pKp0tOBwNpEkCYMDA/j4736BksVJXCzmcaXGBsvqIhwOh+Jrunp64XG7YSi04uvVTXzxdAgN
      La3oeu0kmi6+DamyNuergb4C5Ih0lSA6MJDjuJSC5eh96KqR6d4KhBAMDTzFwy+vo9Bsxl+9
      /w6KZLN9RX0DDh06FHdslRXlYGbHsWZfxb+8cglPx0ew3XMEJrMZDpcLpCK3m2NdATKIvP2r
      wWCIaNeqRLJZnZo/0cWLU4XeP1PespmZGaxNjuFCXSU+/MkPIRECNspc87OJu21Oz8+j/sJF
      nDjB4frYKI4UF8I9MQxvMIh3a0thznHfZl0BdoH8oEoOx3EIBALhNrCUeCZSsnvIvTrphmNQ
      5aKRpvweypoIgoCFhQVsbbpQy0qoqygHgAjhlyQJD8cmwJgS1w+6cOEiCq1WTNz+EpK1CNdf
      zOKnF8/uemx7Rd8D7BFqntBZ1mg0wmAwpOTuVEqpjCYV2z8eVGFoz+XdnBNsbGzg53/7n7D8
      +B4KjCYsF9gwsbQccx0hBAaGhRgMgBACn88HQgjcbjdEUQhfU1ZejukXz3Glpx0Xq2zg/bGF
      mXNJXp4EawUqmCaTKeJxSZIQCoXirhRAfMHOVIRr9PtTr1A6K8HQ0BBKtjbwelsjOIMBXn8A
      giTCVhjfTl91bWJ4aQVWzoBtQUJFgQmrQQEBxoACIiJktsAU9OFSR4smTq91E2iPRLsb5RGd
      0SRyd2YaufBzHJfSqkQRBAGLi4t48uUX+Pc/+ifgXm6kUymKVVViQ1VJ7EEX/exj8wuwlZcA
      0EbYhr4C7IF4K0AoFIowN1KJB8pGbgMhBCaTKa33ttvtcI4MIiBJeLO1Yd/WBKXoK0AGoAFp
      FOp6lDfaVtoUxzvh3Qt0pk9m70evRl6vF//w619jYnwc/+HPPkJNedmexpEv6AqQAQRBiIjS
      pNGZqQghRb5fSEUJCCHgeT7mpFgUxbCdn8h1Gn2Pv//Vr3C+pR7//HQ/qsvyt+VRuuheoAyg
      FK4QLfzUS2QymWA0GjMSqiAIAgwGQ0y0aCgUAsdxaZk/p44fQ4mJR21ZqSZs81yh7wH2gHwG
      j+4NJu8iSa+TJ7NQt2e8WqHprALR+QC7Nac8Hg+Wnj7ExaZaFLzc1+x3ZdAVYA/IFSB6I5wO
      dNMcL9Iz2f3j9VfeDZIkYfz5CAJbmzASEaZQEEfqqlFRXJTXqZrxyJtPlOkKDFoiXmqmUkpk
      9GOZTgpiWRZdh/tw5NzrYMur0XThLXw2a8d//M1ncLndGbuPVuD2+xKXbagZshcMBkPSZuCJ
      Ms+yVbVidHQUVVVVaDXz+JPvXgmfB+wnWELys2tJpkl0apvoNTzP7znicq9J/dlKhezt7sLa
      va9wvqMZ/Mtwj/0GC8T6sbVItvJ/5ZUWaL+0VJWAxv3sld0KsDzydK9MT03FfO62zi5IZZXw
      ZKnMSVADBcBSlnoqHLnMNsom1HSg5gf1yES7FRO9LlOwLJuSy1Ju7tAIT2OGwoebW1oU7995
      6iyuzSxl5B4U+jk+fT6JW2NTEFRM4wz77eTdDOWbrOiirdEutmi3Xr5AP6e8WwtNJ6TKoCQQ
      8tUi0/A8H/YGJUtwpxNSIBDIiBco0evNYuYK3q66tvDboReoL7Whpv84CiwWPBy4j7OdbRm7
      RzpEnARHCz6dbZROFOlz0a/RUmkOIHKcSllZ0W1M6SGS0WiEJEnh54HYZPVMIzdnqBLKv3v5
      +Onvk0kXaDwkY/r1PgkhECUpYuN84/kEXJZiXP7wBxG/xzJRz6JIeg6Qjk0sF47olSLXiiE3
      U2gtnXhBaPRaepq7F59+pqGh1dEHXXQF4HKwOQ0EAph8/ACFQR8qC0zobqwH/3LVDAkCFtc3
      MOXcBoiEEMvBCAnVZiM+GZ3GR0e60FBZiZuTsyg7fAy2kp1IUJ/XCwJgdnwMPQYBbTVVWf0M
      8UjpICwTM7saqwOdHQVBSJqeKF8pcjGrpoM8yZ3O/DRHOBNeqFSRJAnb29uYn54C795EYSiA
      GZFFR18fqqprALxaVadHX2D8/h1UtLTjECOi8uzFCHfx4xufo9lkQJF5R6HUIqVguEwIA/U0
      5UoJCCEIBoMRZk4i5M+LoqipLo7RY6HfIQ2DyBUsy8Jms8F27DiAnVikOoVapSzLorW7BwXF
      NrgcDqxvuXAo6qyktKkV0zNT+H5LTc7Gr0TSFSDTQkt/MPnpppag46FJJKFQKNzLSwtQj5XW
      i+RSovdYckKhEOwP7+JSR3PuB/aShNOcPMgqU8iVSe510gr0h6JBavIanVogV+ZOpkj0vfE8
      Dxevbp/hhL9qtl2bWhJ8Jej4tFpzcz/AmUzwqthPIKEC5GqJpR4NLaM19+5+obG1DSPzi6rd
      P64C5Mo0kWdOaVEJdhMjpJM6hYWFcBD1fve4CpDrHzxbEY2ZQusKcP0Pn2HFbo95nNbn0SqE
      ELAqDk87vj6NolVvVTR1RRbYh55gc6sVbW3t2HS54HrxDBUGArulBM39R1WbYJbm5+DZ3ERH
      X3/McxPDz3C6tkKFUe2gGQXQYhiFHK2PzSYG8XZfJwLBEIa/vo7S4iKc7GwGwzB4OjEFt9uN
      oiJ1Spy4lpewtrQIx8YGjp87Hw7gW11ZQUPIjbLiOlXGBSRQgFzOFloWfvleSMth40GGhYnn
      IQgiQgwLx7YbwZAAk5FHf0sTvnxyH3OmArQfO5HzUI/e02cxNTSAdhLAw2uforzEBiKKqC00
      o0fFU2AgwUFYrjbBWjsHUEIeh5Op8ONMszQ3C2F+Gl6jGZ0nTkOSJIwODaKDFdBTt3PaKggi
      bj0fg89kAQkFIViK0HfyVNYnO8fGBgpnx9DbqN5MHw9VFYAehGl19pcjr+ygpTAJOUrVIMZG
      htHsc6G7sT78+MbWFhgweLiwgtYLl/esAO7tbSw+eYACIsJjLEB939GwubVqt8M38RyXu1o1
      6eRQ/CVzZZLki/ADkSfEQGx8jhZQErCOnl6sr6/h95MTOF9lw/CaA/7yWkiShPLDmdkYD9+9
      jQ8Pt6PAZIIvEMA/+5u/wb/767+GtagI/qkXmhV+QGEFyKVJolQaMJekUrNT6XothUunCiEE
      zz79DfimDnQfzlwfrvnpKThHhyG4t/DDSxcQCIbwi6vXYTQZ0dXYgJOdbZoVfiCOCaTG4Y8a
      91RSgERFpehzuY7CzBRzs7Oob2jI2NgJIZi9fQNv97Rn5P3UQPGbSHQopVSbJhOosQLQPQj9
      rDQfOF7AGb1ut80m1KaxqSmjiitJEkyQsO31Zew9c03Ck+DofF8ahsvz/J5r4SS6Z64jHuUb
      XHmSfPQhmNa9VbmGYRiMLNpx6+mQ2kPZNQl3cnKhV4o/5zguLCyZsvP2urLQEO5030OeCE83
      uPQx+m+KvBL0QUWSJNy9/jlEQcD750+rPZxdk3QFiJd3ShMdsuENSSa8NDldXsuHPpZu/D7N
      r6U1fliWDSs8x3ERKYc0FTHfYvIzDSEE4w/u4Y/72hFwb2NkZlbtIe2ahBlh1E0pz5Gl0ZvR
      5cAzvdOXl2ORlyGJLs9C7x2tNMlcudGZX6lA8wIOugIszs2hyb2GpqpKtYeyZ2Km7+jaQDzP
      x7grkyWYZ4LoEOlEzR6UVoxEtTTpypVuHsJBN3uAl1UqZsbR1Nuh9lAyQlz7JZ4dneuNYHQK
      ZapQ0ya6V9dee+YeZCRJwtiTR7jS2aL2UDJGzJQW7QePFng1PSHp3lveoELuwdJJH0IIZmdm
      YPS5wzWB8hW5VzNpQoySvZvLk714B1KpeHroNTSITYvhC/lEQ2MjXAyHQDBzpRLVJqVzAC2R
      SOjl/nrqsaFlDrX4WfIJ9/Y27v+//4MensDI75+JJOaTyDeJkiRFFF/NdpWIeCiZY9ECLffq
      UPRNa+bweDzYhAEWc3p9h7UMwzCxxXGpHzx8gewMgNbK0cIXkChmRxf8zLM8MYaeQ1UoUSmr
      LJPIJ/OwpMSbQeWzr9qCr1RhLLpQrC782aH39FkU9RzF/IZT7aFkhHDFbyDyNDSekNMYHbWV
      gI4l+mwiU91adJQxmUxwbGwAoqCaKZwNWOBVr6tkwq2lCMjoUA2d7NPR3Y1Jkw1L6xv4emg4
      75WAYZgdBUglz5XWqVeb6NlH9/Dklvb2dnwzOYt7Di9++fmXGJ1bUHtIe4JN5WBIHhWpJtFe
      IH3mzz2FViuOvv99nDh9GubCQjRUV0LUkGWQDoQQcKksY1TY1F4B5EFvWipZftBgGAbVNTX4
      3fQCPvv6G5w60o/mukPgDAZYGIK22mpU2orVHmZKJK0OLYoiQqEQknWRyQX0cMtkMukbXpUx
      Go3o62zHf/6rf4XzHS3YDISAqkNYlFg8lYyYXF6JeY0kSZpbLeKmRBJCEAqFIAhC1hJeotMr
      k53yJmthehB4NjiIra0tVcdACMHS3CxO1lTAYjaht6UJ2/YlVHkcKIYEnmVhMUXuKyVC8Isb
      tzEwpa3cgRgFoLH+1NxJV/DjpQ+GDx5k/W2p61Iu2PGC73ie121+AMFNJ8Ye3lPVA2NfXsbU
      nZuYX98AANx6Ooi+1ib0Ndbj2KEq9BEfastKI14zt7KKjW03XmvXTiQpwzBgRkZGCE1uUUp0
      SQf5LB3d2ZBmbCWy22muAT1tTpSOeVDxer0YvPcNeDEIY2kFuo8czWqEqyRJWF5axIuR57j0
      9tvhQ8dQKITZ29fxrf4eiDRpKc5vJEkSfnnjK7xxuBvNNdVZG+tuiJDGvfj55TFE8s0qPWBL
      5ZRWnvklf70u/K+wWCw4e/ktlNTWQfT7sDA/n/F7iKKIUDAIx8YGBq9+jHb3On7UUY+Zm9cw
      dOc2gJ0VubTvOD55PgnH1nZc4QeAq4+ewm0woqlanVao8SCERK4A8lk72QuBV14ZueDTx+im
      eTd++kBgp2WOlssQ7mee372NGlaC0+3BO0d6I36/a88n0HrhrfDfhBCM3L2ND9rj1xtybrvx
      3+8PoJGV8MPLF7I+/lQJxwLRDW8y4ZebJRzHhYWfFoqiXxRVqN2aLlTo9ZlfHXhbKSqLi2KE
      HwD4qJ+EYRi0vXYKnzwbRUDBTU4IgdloRH19PQpKy7I57F3BUnsulTh7nudhMpnCieTxukjS
      TKzdzt5UwXQFUIf23sNYLKnBp6Mz8Pj8AHZkwOv3gwn4sbm5GXG92WxGzbFTmFyK7FATFATc
      HBnD76aX0HP0OPjqQ/AF1GuIFw3DMGCGhoaI3+9PWAlOborIXaKCIChubAVB0E2XfcLY4AAE
      zza++eoWTr59BRU1taiprY35zUVRxPDNL1DKSOAMBnjAQiwsRkv/0XCojc/nQ+DZY5xoaVDj
      oyjCpeLjlz8v/3c8IdeFf//QeeQoAMBSfQhNLS1xZcVgMODIW1cAxG8kUlBQgCmGx3GNNBpx
      bbuVk+KjY250U0SnuTX1EueJhLumuRWjS7HN/LKJkgw7t7fxm3uPXmWExdsDyF2TOjp7pai4
      GA5/bsJq4pXfJ4RgfnUd5f2vJY4FAnaWMy3lAejkN+MP7+FMjvYA8UJsPrn/GPbSGlRUVu6s
      ANEXyNMg49XC13LDOB1tIkkS+KAPnIrxXJIkQSitRHdnV/y6QPJTWCVohGi+ZwTp5BaWZRE0
      FuCXdx7Cte2OeE4UJWx5vHFfK0oSljccEMVYa2RycRlef2ru1aV1B1whAXMzM9h0OZUVQG47
      yZWAlknZS7yQzsGm7fhJlJp42KyF4cd8gSC+mF7AtYm5nXgwUYTbF9l045P7j/HZ/cf4x6/u
      QJJNvKIo4cbjAbBsahv0+qoKnCk2ojvggjg2HJsQQ097lQ6yqODLy5Pr6KQDz/MwvDzkFEQR
      D2cXMe7Ywpl3v4XpyUn833tPUF1YgIk1B3765llwBgPWXJuYDwF//uZ5WEwmgBCAYbDidOHB
      3DIOVVfBnEb72u6Gnd7EteVlym7QeD0BgJ3YHnnNfB2dVCGEYGtrC75AEP5AEL8bn4fDYttp
      28owKC0vx9Er74E0tePM+9/D11M7gX4ji3b0njiB56sOGAwGON0eXH0+iRHOipKefhxpbdrV
      eARRVK4OHS388lAIfdbX2S2jL57j4d27aLOa8Pn0AtqOn8LUzWvo7O4OV/I2Go1oam0DAGzU
      NGDZ4YTEMKirq8cKIbg6NgOmvAqtb1xCwO+Hc+gR6nbhVbo/NokVAWAGBgYiGmQolQ+n8fm6
      8OtkgtXVFVRVVYMQgqmJCbS0tSk6XAghmLj9JY5Vl8Fe1YSikpLwc6IoYv7BXVxurU+rGxAA
      DM3MYaGgBF19/a9MICrcSmEMur2vk0mqqnaSYhiGQVtHR1wBZhgG5b39uO/ywWyxRDy3traG
      VqspqfBHnwUEQiEMzC2iuaMTAMBFx/nogq6jJcrKK1BWXhHzuMlkwsDULCqKi1AUpRzRSBIB
      y+5suv/u+i2Q6vpws/NwZThALyqrkz9sOTbQUFUB3pA88PLXt+9iacOBR2MTmN90o//EyfBz
      etimTl6ytWrHWx2tSa9jGAaFJaW4ubAKvsiGH//rfxv2YIrRXiB5zE8wGNSrLetoFqOgXKRN
      no9OCMGzmTmgrBJnjp+IuG529AXWV+yx/QGo4NM0yVQL5+ro5BIzUQ7QpMK/7fXi42djEHgT
      zr7zRsx1vtkJNJlNkQogz/SKlwSjo6M2hBCsbcYvDhYMhfBkeg4tp86hpLQ0LL9+vx+LQ08h
      uLfwdHkNpm1X8nBoPbtLR0sQQjD15CFm5+YUCzZPLa/g5zfvwV/bvBPu/FJ+BUHA3P07eKux
      Gt/p68LY4AA+vHAucZ9gvfS4jpaQRBGTg09xpqwQb374QUw4zs3hUaClE6+/14Xi4sjivM8G
      B/BWQ3U4FPt8Xw8qS0rirwD6mcD+YGtrCw/u3tFEefu9IEkSph5+g4uVxSi1WmEyxlbD8/u8
      MJkLYoQfABqbmvF0aS18KPZPv/0OLNF7ADnyHrs6+Yt9eQlGNv/TWqdHX+B0VSksZpPi88GQ
      AMKbYI3TxK+svBxjAvCz31/DlnMDLTXVaKyuSnwOoCtA/tPZ1a32EDJCpX8LpR9g5pEAAAjk
      SURBVJWHFJ+bsa/gH58Mo/+NiygoKIj7HhVV1WgzCLj1PISxRTsEAwdmcHCQKNX+J4SEj4t1
      dNRie2sLs9PTaEcAh+tqwo8TQvBgfAp+vw9r1jK09RxGUQotXB/cv4dymw3swjTYls7kDTL0
      hHgdtVhfXYUwNoTjvAiTzO8fDIWwtOHAktmGUGMnjp46k5LwA8Cp02fw+NEjoL4Fja1t8U0g
      WjJRL4uyfxh8+gRCIIDXzpxVeygJ2dp0YWl4CG0WHt3NkbH+z2bmcGtmEdVV1ahobsXC/DzK
      qipRXGxL+r5TExMwcwaU2Wywvgywi6sAutDvP7p6ejXR6ioR9sUFWOxzeK+jMWL/KUoS7k7O
      4tHMPMoqq3D0wpvweb3w+bzguOT9ESZePMf63AwqG5rAcBy87m2gokJ5D0CbUgiCAFEU45ZG
      0dHJJHNjL9AmeNFYFRv+/PE3D7FuseHk+dcxPjaGvv7+tBw0Ho8bJpM55mBXcQWQJEkzrVF1
      DgZOhwPVbicaG+sARPagAACvz4eVmTkMFlpx8tSptL2ThYVWxcdjpnWe5yOS3vWIUJ1csDg+
      iq762pjHlzcccG5vY8HhRE1PH06eOqUoj4uLi7u6b0RtUHlDC4Zh9FAInYxDCMHU+BgCaytY
      X16Ch+Vx8sIFGA0svP4Aiiw7fvyQIMDj92PSvoqvJufQfOwkWluVc4cBwGaL3ASLogiv15vU
      OxTeAyQqg6ijkwl8Xi+Wng3gZGUxyl4K5pOZedyZXkClicfq1ha+e7wPd+ZXsDA3i2W3D2ff
      fBMV5RWoqKxEYWFhkju8YuDhA/i8Hpy9eCnhdRGbYGMaxYV0dNLB43Zj+9kTnGtrBACsOV0o
      txXDwLK4OzKK1tpqDM3OY1Zgce7yW/j7//U/8P2f/CUKCgp2ZYUEg8GUuhSFi+Pqha50soUo
      ilgZfIR3OprBMAweTs1i0OVFC7uAY+0tcG278auJaRz/9vu4dKgOHo8Hh0+chiVJsnsiUp3M
      dXtHJ+vMTE+jhOyU1SSEYCMkoZiRUF1airurWxjziyjr6cfg48eYHB+H1WrF0RMnkrxrZsio
      AtA0Sr14rg5lZmoSE9/cRkNlBQghGJyaQcBqQ1FzO9zNnWg59ho6rCY8+eomykpLIUoSxsdG
      4Xa7cxKGEzaQMnEzhmHCB2g6Bxunw4HPP/49zrc2oqm+Do+n52BiWdyZmIYzEMKlt98BITuH
      rqGyKpw7V4wj587jv/3sZzhUW4uR4RG898EHWXfKcMCrTHpRFPe8F5B3etddqAcDemg1PzMN
      cWkOITCYc/vQVFcLSCLW7CtAeSUKi4rxwZ++AafDgaaWlvDr+0/vxCaFQiFU2Ipw5b338Hxk
      BL/97W/w0Ud/lFU5CjfKBpCxmZvjuJgGGkqtanTyH0IIXty7g+nbN9AruPF2ZwuudDRh5slD
      mBiAbe1C/7c/gK2wEIUWC4pttgjhlzM1NYl33v8uREFA7+HDKC8tw/raWlbHn5WMd6UCu0Ds
      8bZO/rO1uYkmg4T+9vZXvy+AstIyuIIijtbt1OK3nj6b1Jzpepm8s7q6ArvdjouXLmXdBGIG
      BwdJ4GX37mwfhNFVQD9s2x+4nA64h5/iQmcrlh0uDKw5IRk4sAxQ3NgKt8eDjs5OtYeZEI52
      gc9F3L+eaL+/8Pl8qDAbsebaxOPtIHovXI65xr60hOXpKRw7/7omf3uOem50dFLB4/HA7/ej
      vLwcNbWHYCfAmhBC94lGxesrq6uxumJHMBjUZIotMzIyQnS3pU4yvF4vRh98A2K1YXJoAD/4
      y5/C5XRGVF7LR3RjXCcufr8f9uVlBINBbG66wAshbDkdeOv97+LqH/6Aa59+ovYQ94y+Augo
      MjM+Buv6EtyBIKacW9hwe/Hhn/zpviuVqa8AOoqQYBCurW1UW8zYdjmxvLy074Qf0Btk6Lwk
      EAhEJECtOByAwwGOSLCVlOIH33pf5RFmB10BdDAzPIiizQ2Me4I4884VrK2twbztBGex4M7C
      Cj76yV/AbDarPcysoCvAAScQCMCysYKGmioMO2bx4sZVjE3NoO34CbT29KLXbN7XB5f6JvgA
      szQzDcxPYsK+htbT51FYVITZibGUywzuB/J+BRAEAV6vF1ardV/PVJnA7XajsLAwbOe7F+dR
      bylA+7k3cKh+pwJb6WltV43LNHktMcFgEL/53/8Tmw9uY/Sz32Lw0UM94lQBt9uNNbsdX3/1
      VfixJ48eYW5pCYHmbtS+DFg7iOS1AvA8j8vf+xAv1p2AxYq5uXl4PB61h6U55mdn8cW1qyjA
      q8mhpKwMb/3Rj1BaXp7XJ7l7ZV/sASRJ0gPtonBsbODe1U9x+cMfwOfzwWq1KoaoH3T2hQLI
      mZ0Yh9vrw+EjR9Qeiio4HA54PB5YCgoQCgVRXVOrTwwJyPtNsJz19XUsTIyjsLJK7aFkhPm5
      OfgmnoM71IjW7p6Y5ycGBxAMBtF78lT4sZKSEhQXF6VUMVlnnylARUUFKr79ntrDyAhCKIT7
      X99GieBHW0MzJEmCIAgR9W62PB40trVHvI5lWd0blgb7zgTKBDc++RgnXn8DDMtCFASUlJbG
      XON2u2G1KlccTgVJkhAIBPDk5nWcuPwOTCYTAoEABgcGMDo0CDYUQH1lBSyVNVi02+FxbIAR
      QgharKhraMQ77767l4+o85J9tQJkgs/+4ddwbm6i2GaD1+OBCOD61T/g8rtXwrb0/OwsJr7+
      Euc++nHCEIGF2Rm4XS50Hz0GAFhZXoZ3ews+txtrK3acevMyZjecMA4Ooqa2FjU1NaiorETP
      j/8YoiiiqKgILMvixMtWVaIo6tW6M4y+AkQxOzuDxsamcKmY4eFn6O09HCF0hBD4/X7FjoRL
      i4vweTxo6+zE8sICnMNPcH96ASdffx2u6UlYq2thnxyHVRJwa3QC/a+dwNvf+vaeygDq7B5d
      AVKAEILPP/sUHV1daG5tS3itJEmQJAkcx8Hn9eLzj3+H9t4++P1+WExGBAQRd298gbff/y6a
      Wlp016TK/H9Llfi6yi/0MgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death Rate by State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deZAcyXWff3V39X3PfQAYDAbAAnsvyaWWS3JJkZIpS5StI2Q5bMmyKUui
      rrAky3SErbAjTCsYDtGiTcmWbOs2aYVCskiRtHhzueQewC6x2F3sAjuYu6fvs7rrTv/RM1Vd
      3Y3BYNCDOTq/iInofJOVmZWVr/Ko9zIZQggBhTKksINOkOoT5SgxcAVoNBqDTpJC2TcGrgCU
      o8OVy8/h5Ws3OiQ2qtWqE1LrRSyt53ZMo17cwGq2fU1hfQklRUdhcxUvvHQVlXIV2+OBasX9
      fZjgD7oAlINjdW0dQqCBpSvfQmh0BowkY/3NRcwvzCMg+wC1DjESw+c+9yJkWUYkGkQxX0Ik
      NopoSEIjexN8+hQa1VVMjbwF6/ky7hufwdpGFS1Vw1f/9vO4+NAD+NzXnsNYUMCJUzN45qU3
      8aF/8g/AM8xB3z4A2gMMNTNzZ/CeJ94COZIEAwbzZ85hdnoMklGDJSchiQJaLRX1WhWMGMLU
      eBoMw4BYLaxvFtCqV8FzAMsKIMSETXhwDAPZH4LWbODE3EkUi2VMTo5jbu4UGFbEww/ej8PR
      9Nswg14FqtfrCIVCg0ySco/JbmaQGhkDLBXrGzkomon5uZNgQMB0vLnVRg2GoYH4IvDbCsqW
      jFTYd4Alv3OoAlB2zXF8tnQItCMWbrx+DZv58q6v0DUNpqlB1c19LBdlUNBJ8I7YCIST0JQS
      vvHy84iNTkFvtcCJPgQDIkyLgBgGBMkHySfilauvYiyVRCSZhG3bsBkeJ2cmD9WYl+KFKsCO
      MKgUNxGIxpAanUAkFoaYTsIGh1q9ApYlICwLUQ4iHuIxMjKKWCwCgAHDsbBt2vQPOwxpM7Av
      uMdxnEhpcxyfrdMDNJvNgSSoaRo4jhtIWpTDxXF8tjwAMAyDYDA4kAQJIQNLi3K4OI7Plq4C
      UYYaOgm+R1iWDdOynTDPs+BY+v45aKgC3CP+5tkb+L3PXHbCH/mHT+CxsxMHWCIKQIdAlCGH
      KgBlqKEKQBlqqAJQhhqqAJShhioAZaihy6CUY41ZKiH/mx9zwv7HHkXkBz/ohKkCUI43pglj
      ackNnjzh+TcdAlGGml33AIZhQBAE2JYJ0wYYYoPleJiWCYHnwdLP+pQjyK4UwLZ0fOvZS3jH
      d70NK8tLaOomOGLDhoVCScXszDjGx8fBMm2Lwd34FlQVFf/nK6854bOzSbz9vqm938lhp6tO
      BumDca84qmXeSbYrBShmMzBMEzVFBcNyEHgbLCOCYVlMjwdQLmQAXsZEOgpCCGzbvm2ajaaO
      z3zrDSdsWhbedu742sYQ9CrAburpMHFUy9wd7ryHXSlAanwGTyTHQAjB2OgIWibAWhoEOQSO
      IUgmExDkEFiWBcuyu3Ka6B4yMQxz7JwtOmEY7/3utp4OE0exzOQ27WzXcwBRFN3fAAC/ExaE
      yJ4LSPHy4vUMnn9twwl/4PF5jCePlxviYYIugx4ybqyX8NlvX3fCbz0/SRVgH6FLN5ShhioA
      ZaihCkAZaqgCUIYaqgCUoYYqAGWooQpAGWqoAlCGGqoAlKGGKgBlqKEKQBlq+ioAIQSWZTlh
      2zJRrdVBAJiGjpaqQW01YZgmms2mJy6FcpToMYZr1kpYW1rCc9fW8cM//H0QAZi6hqXrr+HE
      fY+gtLEKVTfBArBtDfmShumpEUxMTDoOMbuxGbeJN85RtDW/I25jl36LaIeqXmzbPjRl2S12
      T4XCcw89PQBj27i+lsP8qSlHO2xCIPA8NFUHwIBh27bhohzBiakUqqUcMvlKO/3degwdLcei
      u2bIbvfw0FPxXkFPD0AIQXJkHA89cN6RCYKIkamTCMkcYhPj0EyAIQZ4yQ8WBIlkCoIkOw4x
      u/EP7ucQc5z9ipmuk9Fvdb/dB6gfpnrZ7bM9TLBsT4V67qHnbvyxFEbCwPPfvortkT0niEjE
      oxBFAbzoQ8Dvgz8Qgshz4Hkesj8AnjtaFUOhALeYBBu6jqXl5XtdFgrlntM7BLI1XLp0DbHk
      KB23HjEaTR1NzXDC8ZAMnqc98070KADDSnjwoTN442aNfiQ4Ynz6q6/gr55+3Qn/1offhxNj
      sQMs0eGnr0+wLxAFo2/CulWEI8zLi1l8/M+fdcI/8q7zeO+jpw6wRJSDpKd9F1du4NriTRAp
      eCx7AM2wkK+4ZyJ3Dhkow0dPG7dtgOc5cHRVhzIE9PQAqdk5vDWRRL5YP5Y9wG7Jlhq4sphz
      wudmkphIhQ+wRJRBQUwTZrEIoI8CaK0GvvbVryGensLk7DHeq/M2XF8v4RN/8ZwT/pkfeJQq
      wDHBzOWQ+eV/AaDPEIhlWYRCMRBNg3nPi0ah3Ft6egBeEGBqTRi+CISDKBFloPzJ376ML11a
      dML//qfefWx3mrMaDZT/1x84YWlhAfLFCzte0+c7gIBgiMcLz1/D2598G/ZrK1RJ5PDImXEA
      wJsbpX3KhaKoOoq1lhO2DpE1J7FtbPzsh52wdO4skh/+ub2np+toPv1NJ8yw7J0rAABEwhGM
      Tlpg+v1zF+TzeQQCAfj9/lvGCcoifuCJBQDAp758dY85UY46Vrns/LbrjXuef18FECURFiHO
      BMHQmlhezWDmxEmotSJqGgFvtcAHIqhX60glYwgEAs716+vrkCQJgUAAlUoFhUIBqVQKkiQh
      k8lgZGQESlPF6zfXMDY+vBNtysHT6xBT3sQby0VEE+6HMJYTEJBY6CZBudECsXVYnIxGfg2l
      io5Ws4ap2VOQRR6maaLRaMAwDNRqNciyDEEQIMsybNuGoiio1+soV2swDB3MlmmqTQhUTUe2
      rDhlCcoiIgFpoDfc7dBh2wSm2Tvdt63ueHbfeLuF9OTbPz3bJruK1zePLl8My7JB7F7ZXu/D
      sqy7qoMe+jgJ3U363Z6Jdpdn43YelrXDARnFjSwg8FCyRbQABAAopRwylRakSBOsbaCuEXBW
      GVIogVMxHqViFg1FRVCOQFVVLCwseNIcHx93fj/22GNYW1tDIpGELaegmgT1agVNyca1xTX8
      y9/9khP3/Y+dwo9/98U9V0g/6tUKtGbdCTfqVVQqld54te54lb7xdp1vvepJr1atoFKRe+Ip
      fePtbjmi37VKo096wt5cWA3DQDQa3dO1/eh+KTAMA56/C+ObrsM72D6HrrQPyHAXP3tymzp/
      P7oHJeH0BB5Kt48vioeDPfnGk0nnd7VahWHsbF7AcRxKlSb+4x9+3ZFFhGnkcwFoitvIquUC
      MpnMjmndKYV83pNHuZhHJhPoiVcseOOVCgVkMr4951suetMrFnLI9FmMqRQLnniFfA4ZaXdv
      xWq56Lk2n8ui1iXL5bJgjL2NtUVRxNjYWI+8+Du/C6LpAAB+JI3oj/5I3+uN9Q1se2QxkgQu
      Ht9TOQbJwG3dJiYmEArdfplto1BHOHXTCY/PnML8wmmEU64fwsTMHC5c2HkWf6do4gbCKfcL
      78zJ07hwYaEnXhURhF8oOuHZU/O4cGHvRnNLdQnhV92Gd+r0Ai6c7T0T7VqRRfiGu2ozN7+A
      C6dGdpXH86smwquusswvnMVyQ0J4w33Tnlk4i6n03k70qdfrfeVE12HrWvv3Di+/zK/8atvW
      BoB07hzS//pf7akcg+RIGntuFOr4k7+94oTfen4KT1ycPsASDQ+2bWNtbQ3T0259B7/7vU7D
      Znx77yUPgiOpAPWmhqdfXnXCY8kQnsDeFaCpGSh0WIjGQkfrId5LcrkcVlZWALSHRJcvX8YY
      y0LieSyur+PUiRNQSiXYtg2/34/77rvvgEu8M0dSAQbNlTez+A9//LQT/mff9zAiwcGuPh0m
      ri7msJKrOuEnH5jB119axssdxn8//f2PINxnBa5UKoFlWei6jtXVVUiSBM62EZBlGJaFSqMB
      RdchSRLiAxrjE9vemj+0Yf0y+ERiIGlTBThA/ubb1/FnX3I/Av7Kjz5+T/L9+pVlfOG5N53w
      g6dHcX29hG9edXvVn/jeB3uuM00TyWQSya1Fj3C4bRzYunIFaDTw0MQEypoOIR11hki5nKtU
      RVV1Vn4kpQEml0NBVZ3/+5QG0BF/G7vVwsYv/JITlh96EImf/lBPPKtS8aTXqtehFQq9smLR
      kVEFOEA0w0JN0ZywaR0eM4V+WJaFfD7fI8/+10/CbrUblDA1ieQv/Dyu/Zt/C7K1pi+MjyPy
      wz+Ekqa5CtBsAoUCSpp7/5KigPRJn6iqJ55PUWD3iWfXap54aqMBrVjqIys6soErgKqb+HrH
      CfATqTAemBsddDaUA0CSJJw/f75HHo7GQMT2HEpMpjB6/jxWlSaI3l4aFQkwev48QpGIuwqU
      SiN97lxbtoUvPYJ0n/TtZhPhjnjyyAhSfeKZpRIiHfECY2OInJlHtEsWnndlA1eApmrgv/31
      ZSf8zgdnqQLcJZWGikrD7cZH40H4RNp5D4JDX4tLmQo+8ntfdsIfeHweD50+3Ar14vUMPt8x
      xv7gE73fGe6Ez337Ov73l19xwh/90FM4O5O6qzQpbQ69AljERqOlO2FNP/xuOtmSgm+/suaE
      n7x/5gBLQ9mJQ68AlP6U6i1UO4ZF44nj6eRyK+xmE8VP/o4TlhYW4H/bW+84HaoAR5TPPvMG
      /vxrrznhj/3Mew+wNPceYppoPf+CE2YEgSrAfnN1MYf/+01357UPPD6Pi7u006EcTnalAKbW
      Qq7SwPhI+yyAmgbwVhO8HEG9Vkc6FUcw2Gsluo1hWljN1ZxwyC/efcm7KFabHvOIhekEzkwn
      d7jizilUm3j2tXUn/Jbzk/jqi0v43b++5Mh+7gcfG2ielP1lVwrACRKI3TaprSkaiK3D5Pxo
      lTMoV3WorTomZ08hIAk9DifEJihUFPzSJ77gyJ56+AQ++F1nPPFsQmD3cV7odkwhhPT4tRKb
      YL1Qw//4mxcd2Y+++zxU3cBH/+QZR/Yj7z7X4xBu27152LbdX2Z7nURty4ZFCJqqawFpGGYf
      pxu7r0NMv3j9HGK6TzmxrP6y3TrEdMvsvrJe55dbO8SQjl99nFr6OLp0H8O1LeuXPunr1HJ7
      2Z4cYvqhqwoy6xvwyUGwxERdR9shJpzAiRiHSimPVktH2O/rPfiC7XVK6OeowDIM2D7OCyzX
      e5AG1y+PLln7YATGs/WhZZOe8rFsbx4sy/aXdV/LsT0Np288lnU8324Xr/tAB5ZlwXadmsFx
      /WXdh3BwHAuGvb2M7SvjepxTuD6yNkzHrz5OLX0cXZhbOaswDOqfd1+WfDoN3/lzu7t2EA4x
      /ZD8ITzyyMPtQLR3tSGeGOxQg3I4+MtvXMPVm65tzk+9/zx24epxVxDLQuWP/tgJyw892KMA
      g4ROgim3ZHGjjOevuVaY/+i9Zw+wNPvDMG//SaFQBaAMN1QBKEMNVQDKUEMVgDLUUAWgDDV0
      GZRyRxiZDOxGe38jRpIgTh/t7WioAlDuiOqnPo3mt9unbArT0xj7zY8ecInuDjoEogw1VAEo
      Q82uhkCtagnXVzYwf+48KpkV1DQbnKWCk2TU6homxlNIHIKNTimUO2VXPUCl3sTcTAq1ugET
      HGSBQArEwRATHNGRWV9Dvtx/41QK5TCzKwVIJqNYWq9BFk34JQ42KwNmA/5wGlMzM0jEIhAE
      Op+mHD14oO0k0GjsvGf81OQoYFkQfEHEfQDgeoAFI3GAmKjX6yCWjvc/4p4wcHIsDMtQPbK5
      8RCIqXlkp8eCYG3vtadGA+CJ6ZGdSPshspZHNpuU4eNsj2wq4YPME49sIiYhKHplY1ERQQke
      2UiEh09gPLJUiAfPeWXJAAdCvOnFZBYBgffIIj4GAiN4ZCEJGI+KHllAIJiM+zwymbcxnZQ9
      MpG1MJvye2QCTJwaCXhkHDEwNxr0yBhLx/xYCEyHjJgaFiZCEBhXZhktnJsKQxZcmW3qMM+e
      BbPl/UeiUdTrdTBPvgPY2hbdjsfbsne9E9hyRiHJZFv21LudU2HsdBr1RgPMe55y8xwdRaPZ
      9MrGx9FQVa9schINXffIzOlpKKbplc3OQrFsr+zkSSgEjowh3W5Ed0m9Xt/V+QCUo8dxfLZ0
      FYgy1FAFoAw1dzRzrZXzaBgsGL2OpsnCbNXgD0VRKZYwM3em737ylDbfemUVn/3WdSf84++9
      iIUZ6kp60NyRAoQjUSj5KnxyAIJNoMs+NLLLGJlcQENpIODjB3+U5jEhX1Y8B1BUGq0jV0/H
      8dnekQKUS0WUynXIvA0xEIPVrCIxPY/C5jpmTp0Gx3E77Bww3PTbFeKo1dNxfLZ3dDex5Chi
      yc6dmdMAgER0b6cOUigHDZ0EU4YaqgCUoYYqAGWooQpAGWqoAlCGGqoAlKGGKgBlqKEKQBlq
      jtdnPUoPVtehG3yfcwSGmTs2hqvrLPR6ARD80JUq5GAYlXIFM3PziAR8+1VOyh75/c++6DHC
      +8Qvfg+m0vTL/TZ7MIYrQ5CCsIwWgvEUlNwKRibmoTQVBH3CsTSYGgT9jki6F/XU74ikveZ7
      HJ/tHRvDlcsNxMMSBDkBrV5EauYMCtkMpk+cBsexx9JgahAclDFcvyOS9prvcXy2ezCG6xAk
      Y215JDzIMlEo9wy6CkQZaqgCUIYaqgCUoYYqAGWoOV5TegqlC7NURuFjH3PC8qOPIvLBH3DC
      VAEoxxvTgL540wkKs7Oef9MhEGWooQpAGWqoAlCGmj3MAQjWlm+CiAGYSgXBWBLFbBbTp+bh
      l+iUgnK02FOLVRQFdktHJBZHeX0R8YkFVKpVSInosTSYGgTUGO5gsLa2aN+GEOK5hz0pgChK
      ILwPSrmAYGoSuY1lzMzN053hdoAawx0QHOcJMgzjuYe+d7O5ehMVDZg7MQOe654mMDgxN++R
      jI+NDaawFMo9pu8k2DQNFLKbWFxau9floVDuKT09ACEGFhfXIIgyZk7t3yngLc3AS9c3nfBI
      PIiT47F9y49C6UevAtgGKsUSiD+yr2uk5bqKj/7pN53w97xlDj/9/Y/sY44USi89bZzl/Hjg
      sYfhZ+1+8SmUY0X/OUCrCiL673VZKJR7Tl8FyBfKCIcCoJtnUI47fRVgdCSBRlO/12WhUO45
      fRWgVM5h8dU3YfX7J4VyjOhZBVJreRRqwPSZKQgHUSIKZY/Yuo7WpUtOmE+lwIV33rGkRwGy
      S6uwRRGtjQKaAIJ9LtpcWwbjC0Ep5xCIJlHKZTE9dwYBagxHOUDsRgPFj/+2Ew684wlE/v7f
      2/GanhY7c/EhTNs2TNu+RQ9AkMsXEIzY8IXjqGZuIjGxgGq1Ct8dGMN1GynZXUZKxw1qDLf/
      9GtTezKGu3L5OWQLTTz5vndB6tlIlUEymYBGeDQrRYTS08hnVjBz6s6M4bguIyW2y0jpuEGN
      4e4BfdpUdzvblTFcKODD9ZVNZDMFTI+nev4/PjXrCY+Njuy1yBTKgdJ3FahYqsHPS0j3afwU
      ynGiRwHUah7ZQhFjp8+CbnZOOe70KEBuZQ1c0IfrV9+AcRAlolDuIT1zgOkLD2L/jKB3xrRs
      VBqqE5ZFHgFZPKDSUIaBQzWlXy/U8fMf/5wT/r7H5/FTH3joAEtEOe7QbVEoQw1VAMpQQxWA
      MtRQBaAMNXuaBFuGilJVhdGqIhRPoZjdxMTMLISeLVQod4qi6lBa7gJ0NOiDKHA7XHF0MPN5
      5zcjCOCi0QMsTZs9bY24uZlBq2VDCvqx8eYrCI2cRL5UwUg8clfGcPZtDJeOMrs1hvvMM2/g
      T7941Qn/xk88iftO7P2L/GEyhtv4hV8CtupBPHsWyY/8+p7T6sfAjOF2hBCoqoqaYsKnK5BD
      CeQyawMxhmNvY7h0lNmtMRzbZbx2t0Zzh9UYbl+e7aCM4XaEYXHq9Nm9FZBCOWTQQTtlqKEK
      QBlqDmyA7RN5vPXcJADg+lrxoIpBGXL2pQdYX19HrVbbMQ7Ps5gdi2J2LIqAjxq8UQ6GfekB
      stksyuUyZFlGuVxGJpPBzMwMBEHAjRs3MDc3h0K5huvf+Q7Skyf3owgUyq4YuAJYloVkMgmG
      YWCaJqamphAIBJBOp2GaJmZmZqAoClqtFqLJMUhyEEB50MUYSj715av4/HNvOuHf+Il3Hlxh
      jggDV4BqtQqGYUAIAcdx0DQNgUAAiqIAAKLRKJrNJsBJ2HytjM1aBrlsCWNBCxvrPjSrBSet
      Uj6MlZWVQRfxQMhnNzz3tplZx0qgd+uxQnbTG29jHVFB21Ueq6urWFtd7QivoJT3prexvgai
      VvdyCyCEIBQK7enaw8rgewBGwEd+/xtO+PELU/infWz6M8U6rqy8tBUSEYrGkUymIAUiTpxQ
      NI50Oj3oIh4I0VjVc2/xRLLvvUViRW+8ZP94/QhHM5ACbmNPJFMIRxuQAiWPLJ3aebOoW9Fs
      Nvd03WFm4ArAcTyahvv53SQsfL5e72JJMsDx7s5DgiBClHw9sn7X6oaFXEVxwmG/hHBAGtQt
      7AuCKHnuTRSlvvcmiOKu4vWDF7zXSpLUV7bb9LoxjOPnJLsnBchvrsHkZNitGoKxNIq5TUzO
      nIDID35RKVtu4I++cMUJP7owjtF4EL/6O190ZD/0rnP48fdeHHjeh4UbayXcWHff4m85N4FY
      SN5zeq/czGE1567SveP+Gfh9w7kR5p4UwB8IoVSqgBFlbN58FeHRUyiU28ZwdpfRF7H7G7Tt
      1hiu1lDxjSvuPCARlpGKes8uuFUeh4ndGsPZXcZrtm3j2dfW8OmvvOrIJlMhhOTeBktIr+Fb
      P2O4r764hP/3wqIju3AiBZEP3PYeLMuCrutYXFzE/Pz8beNvl6m7XNvyQT+ze2MMB4KlxTcR
      To6hXspBDieR21jDzNxpcBwHtsvoi2H7Gz3t1hiO7TKxZhgG3C7zOEzcjTEcy+zOoI3pE6+f
      MVy3jN2lgRzHcchms8jlcvD5fLBtG5cvX8b8/Dz8fj8uX76MixcvolqtotlsIh6P4/777++b
      FrNlqNb4otuT84kE5Id654vENNH4ylfceOkRyPf36fHviTEcGJy/f6uQE8f3eNRnX1vHf/mL
      55zwT37vg3jng7MHV6BDgiAIOH36NARBQL1ex/z8PEZGRiDLMubm5mAYBqrVKk6cOHH7FSNC
      UP79/+kEfRcv9lcAXffEkx97tL8C7IHD/do8QAzTQlVxlx81g56WoOs6VLW9bY2maWAYBuFw
      GK1WC61WC/F4HIZhYHp6GoIgQFVVLC0tOddvKIrjDyBVKmgtL7dlW0iVMpod8bchqopMRzy5
      XIbSJ55drWKzI56/VEJldQ3ZDlmgWES941qqAJRdIwgCxu7iUHRTloGtMbkUCiI9NgazY0XK
      Fwoh1Sd90mrB6ognh8NI9oln+XywO+IFwhGER9IgHbJgJIJYx7VUASi7hmEYSNLel5vFjnmQ
      yPEQRRFixxhd5Pi+6duW1RWP6xvP7E6P5yB1yQTem8exVoClzQo+9WXXvfDJ+2dx/9wIcmW3
      S4yF5EP/DeFe8N//+hK+9p1lJ/zxn38/CAGUlntWXMR3/I5NPNYKUG2oeObqmhOem4iD51n8
      uz/4uiP7ye99AN//XQsHUbxDRUs3Ue84GNG2gT/6wnc8SvGJDz+FQ+DHPlCoQwxlqDnWPcCg
      efrlFXzyL19wwh/6uw/jHffPHGCJDgf1L34J2DKTYCMRBB5/2wGXaGdsRYHy9ba92l0rgG0Z
      uLm4hMkTpyDdwhQiX1Hwi7/9BSf8zgdm8Xfedvpus77nmKaNRseY2LDsHWLvL+V6y7OT9nji
      4Kw0K3/6ZyBbhnLiyZMIPP42rP/znwXR23Ulzs0h/eu/NtA8rXodmV/8ZScsv+Wx2x6I51xb
      raL8B38IYAAKoNYKCESTKJYrGE/F+8YhBJ6GoxmDN1soVpt45qprCnxmOrnra1+4toH/9Olv
      OeF//D0P3JVtTE3RUKy5lpPp6O3NDO6UzzzzBv78a6854Y/9zHsHnsfdYCuKowB2qzX4DAiB
      3bG+T1R1h8i35q4VQJCDyL5+EzOndmcbsl9slhr4vc++6IR/7D33YWGXSmDaNhTVtXQ0zLt7
      sz9zdRWf/Ct3qPRrP/b2vvFurJfw6pK7W9q2j/QwQ0wThd/6z05YPHUSofd9977lxwNtA6HW
      nrWUw+nTcwBsNJtNmIaOkYjr4xsUAV1TPTK/ABh6r8zskskCYHWl5+MJLLNLxhHYXTKRJSCW
      0SWzgS6ZwNhgbK+MZyywttklM8GCeGQcMXH1xjqefW3dkT1+fhIcLE88xjYgMF4ZbAOv36zg
      M9983RFNxmWIrDcPYumQOK/MMnVIfJfM0CHz8MhMQ4df6JLpWo/M0DUEumS6piIgMV3x9L4+
      AWYyAVvd6uWiETSbTRipJMjWvICJhNttI5UCIe2XCxMOteOl3V3v2FAQTUVBbcVdefIF/OBU
      1ROPCwbR0jSPTA8E0NJ0j0zz+9HSvTJdltEyDEfGkDY9VnN7pdFoIBj0Hq9t23aPkdxhkhFC
      egzJumXbFo27kd0urVvJDlOd9JMdxWd7OxkLuBZyg/jb3j7v5htXcenl18HzPARBAM/zKBVy
      2MwVHBnHscjl88jl85541169itWNrCOzbQvlYh6lSs2bXnYdKxnvtcXNVaxsFsBxXFvGcSjl
      s8iXqh0yFi9dvoQ3l1ad8vIcg5euXEU+n3dlLIP19XU0mqp7jyzBpUuXcHNl3ZUxNl64dAlL
      qxtuHTAWXnjhEpbXMq6MBbLZTVRqiivjgI21VVTqza064cAzNjKZDVQbLUfGER3PPvcC1jJ5
      515ZomN1bQOaYTkymC08+9xzyOTLzr0WcxtYXVtHVVGdeJam4Llnn0W2XHdlehPrmSwMizgy
      U1WwsdmWbdeLqlTx/LefQbGhOfEK64t4+rmXAJZzZPV6DYuLi2A5V5ZfvY6vP/+y55lll1/H
      0y9c9cgqpQI2NnMe2dqbr+HZl17zyJZvvILnr1xzZIbWwvLyCtYzWW96xZzzfLFdilsAAA0C
      SURBVARBALFtlIuF/fsOEAhFEAq0nTa233S1eh31et2RWYaOlZtvorq1muG+EW0YptUlc9n2
      OS6Wa+A5eOKVq034RBYMwzgymxCwZhM11XJk0UgEks/XEY+BxAOGjQ6ZjVq1BsuyPenFolH4
      fJIrY4BYJAZJkjzxotEYJEn0lsW20WopsLbygamhpmio1WpOvFx2E7lCGTzHefKIxhKQRMFJ
      i5g6qvUmLNt264lhEI8nIQr81nUsopEQdF1Hs6V64iUSCQhbeQCAobagNFXYtts76WoTzZbW
      ZdPPIplKgmNZJ54gB5GIBD3PQmtWYTOiRyYEwogHve1CDEQQC/l3bCsA4AuGEem6VpKDCHe0
      MzkQAgMbzVbTE69UKoPA7bEFUUS9XtsfBbAMHYLkRyzi+p62lDpamgF0NGhe9OHEiVnUa14n
      bY7lEQq6KyeiKOHVq1dwY8l1jDEMA7JPhGl6nS1W15aRyWQ9slZTgcn6EJG35/wEFoBIqKM7
      JxYsm0HYY8LLoNVSUCy53litegUN3YamdTiqExs2GIQ70quU8jAJC0N3V79gaXj1xip0VQXP
      Mc61hOFhmu4kPJ1OAqRL8W0TYDiEOsvM8pAEFvWGOy43TIJQ0A+/v8NjjBCAFZGIus/DsgkC
      wSACsmsGwgkCeJhoqO69saIMWeRA4JZHEHgYFuDr2LZdaapIJhPodDVoVvK4en0J27qjq01s
      5soQ+I4ho2UAnIRE3PWDBtqNNJFIeGQtVUcq6V1pZAAY3Y41xEYi7l5r6i0UKjXYXfEYkP1R
      AE4QkctmwfFuBcmBEFLxKPxylz8qw2N6atwjskwd2VzBI7tw8QGcnHHPrxRFEY2WBqVe8cS7
      b2EecodTebVcQKmmoN6od2YKpVpCtuBux0LAIhELQ+/ye41FY/B1lFkKhOFjCYLBDkVhONRK
      WRTLrpthNDkKUylB7TSj5iVMxGSIHeXTbR6RAI+R9IgnX7/fh1qj4ZaP4UEsDWbHXI3heAgc
      C1Fwl2xZoqJYbXmcaFhOAENMj7eerTdRVfSuHrb9u/NarVnH6vJN5Mpb9Web2MzmoKpNGJb7
      8iGmjo3NnLfuxk5ibjzmvPNESUYyHoUgdiwQcAJymXUsXr+G6zfbL7iWUkOlXMbKesaTnqm3
      sLLmlVmW3eMwJPA8TLOj3hkWoij2eCuqurl/QyBRFGB2rfev3HwD15fdGyCEQNdaaLa8234E
      giEEAl6f12qlhFLZ29gDsg+p9KhHtraWAcu5DyYSSyKdiCEY6HCjJDbypRo01X1z6oYBraWg
      1vE2BbFQrtbw6kvPo9xs3wvLMGBYForiNk7YOop1DU2lQ8lMFRvFBmxT98gqKmBq7vo1z3Ng
      WNa7CMHyEPmOhk0INN1ENBICy7iPzNZqyJcbePpb7jcMXgpCqxdQU9xVPdNQcf36G9jIuT2Z
      5A/DJwBWR6PY3FiFbrWPq93GHwhibGoW6VjQKVsoIIMDgaK696abBDxrwexwwayUsmhqxOkB
      QCwoLQ2hrol0OBLB/MI5jKfby9ZyIAyJ0ZEvNzzxVKWGYsUr4wURkbA3vVxmGVffuOmEOV5A
      yC8hHHENmQghiEZC+2cKIQk8zC6NG504gSnZLaxlGjBtAsJ4hzEMCDTd+ya2+6yaqKoKf5dx
      ViSRRDIW88g4lsFGNofJsbay6IaFBx+4CAiuUkgCizeXNjA27VaJbhKEAxKi8fMIStu9GYHe
      aoH1dSgUI+Ctb32sPUxxMvXh4vkzSHre7CxkSUAi4X6fYBkGhLRdFbfJbmbBcIJHaZvNFsqF
      HKSge8OsFAHMGzi/4Brzma0ainUVsXoDSEYBYqOuaJgcH/M0FE1TUSoUwPuCCPnbPVwylUZj
      PY+bS8sYS1wAABiaCsO00VnzoihBUZoY6fjyHwj6IRDO80ZlOR9OzKbdYRHLwy9yaHYoDgBw
      DNDUDIym2/erqy3Ex08iMtqh7JaBsdkziOldb3FNg2q5L9CWUkckMQbecK9lGBZqs46qxmJi
      tL38aZkGbMvavx5AUXVUSt5Nb4ltet4QxLZQKld6/FFtQnq6tXKpBL1jPK1pGpKpVI9SCDzn
      7f4AGIaJ0RG3pxAEHlpTQb3pviU3NjI4e/aMZygi8BxEXwCJZBLC9pid5dDUDQQEt+qUWglL
      y6tdH9AYwDZQ7Oy1eBHBgAxD6/hqaat49c015HObbr0QglQ6DZ+01QMwDOJhESbrR6noDg2J
      qaKlWxA77dvlCM6ePomR9PYYmEEoFITs93vG57B0yP4AXrn2hiOS5CCCgQCSHeNxThDB2joa
      2x8KCYFlA4lkAnxHb8SLMixdReerTBKFnvF5XWmhXvPuBFhvtlCruL0TL0ooFYvIFdwhla5p
      KJXKUFX3mbWUOiQ5gFjMnRdIsh/hSAQzUxOePELBMJiOFy0viCjmc/ujANVaDcGAH6Oj3uFJ
      U9VQLrkPUJBk+H0+NOq9G+l2K0UqPYJgx8RYayl93RSv37iOlTXXBFpt1rGeK0JTvR/66k0d
      PtG9/Xg8DrXZ8LydyqUCKrUGPE/VtqFp7Ya3TSAUASzLu98OMbFRqIGxO3oyS8d6JoNK3R0C
      VRs6RkI8/GH3IY6OjqFWKUFpdigKKyEajeL0iQ7jO5bD2fMXMDPp1nN70wDGXfvedgxnOKBj
      JUeQZCTS43jfk487slajCtViMTXe4THF82BZDuL2fI7YUA0DDMO6E3nbhGEYkOQguA4tU8qb
      ePala9h+5xHbRjqd8vSAABAPByH73Qm6obUQjUaRSrobgvn8QYg859mbSA6EMDExgbF0R4/K
      cuAYBrmNFeTL7pDUsm0EZO+w2u/379MkmJjIl6oe7W82amAIwPFe5xO/T0Qk6p3ZNxoNNDu+
      TDdqFRSrDYSDO9vUVCtlPPrIowgE3Hg+fxDxSAixjmGRbphIjyTh7xjGbG6sQyccIkFXFo8n
      kEqPoql0KijBSHoEqVTHQ2RF8ERFteGWuVaroV7OoaG6dVAs1XD65AwCfjePeq2KYDTuPWCQ
      WMhlNz32UwDw2ssv4MbK9hyKoFIq4/VXvuOOlQlBbjODpma4y5bERqXWQDAgexYgDMPA8uLr
      KHXYLMnBCETOhtUxB2gqdRBioapsKSMxsbaygrVCzXUkYtvfC/Qu48BwegYLM2lnEpzLZrCR
      zYPv2qmhuLmE15bcuaHo82N0bBzjo96z0WxiIx7vb2/WSWZzE5HECFIxd6EiEo15XrSEEIRj
      yf1RAJ8cwOT4qGfC5vMHEQ6HEfB7V4FKxRw28+5QqVErI54a82g1wzAQBMHzRY9hmJ4tQzhY
      eOnKVcTinctnDFpNBUrHJ3xJFKGpLSzeXHJks3MLuO/cAuJRt9IIw0NgdASCHUt0DAeBY7yT
      VlsH4f1odHTtLMthcmISkY5l1UR6FFNT0xA7hk+tZgP1Wt27JQzLt4dAYofM1hFOTkJgtxoZ
      IchVmnji8UfdXpVhMDI2AbNVw/LqlnkGwyIRj0PTdHc/HGKjpqg4efoMEhH3ZaHrGhr1usfK
      VZJDsC0LIf9WY+ckPPjww7h4egaq3k7P0FrgJD/qFff+tZaCajELxWSc+YNl2+1663hmtVIR
      4bFTOD3hNmzn2XZ9wZUEoWd4249YJIhcoeSRabqB6SnX1soyDehaa38mwYaho16toK4zGBtp
      N2SWZdFSVejEe1OhSByRhDvuDoZjuHz5MqLpSYyk2g05EIrgwn2RrutiCEW8k11/OIYn3vEO
      MExnHgQb2RwEOYipcXeoUC4WEIl5l1+7WVq8jmq9gXCCdxWDWDBseN5iq+ubCAdlhOKu0hZL
      ZYQjEcidZx/YJpZu3gTnj2H7cZ88fRYW8aYHs4mr19cwN60jHgkBhCBfM/D2xy4iv/1gGQYT
      I0msZ0s4OesOi0ytCc4XQjyZ9MiWV1bAySFEQgEADASeR2FzFTY4jCbCALGQ3VgDI/rd4c5W
      /fGC1N5ga6taWZZDcsQdJtmWBcuyPCtKkhyADRYTI+7LaHxiCuMTU546VlsN1FULhr7zBsAt
      pQ6GF8Hs4ijeRqOOluHWe6NWQb5YxtiE+zLiBbG9CHDb1PaAHAihUsqiarmrDqvLy5idO43V
      rt2eRVHwrG0DBCdmZ8F1L+/sApbl0PXSQKVSxXueegqVasfyGbFhsxJUpQbg1kowNj4OfWnZ
      83YmYMESC3rHEm8yEcfS8gp41R3Hzpw41ZsgsaG0VIT97licY4CrL19BfHQGU2PtRltp6EgH
      WQQibiNuVEtoKg34nFUgBuFYAmHvOwAMx4FhWLDY7ilsVKo1TE9Pw+8oI0EklkQyPdqxiMBi
      dGIaG5s5tHQDAVlsmxwTQPL5IEsCrFtsDSP5g5iZCWJ62rual0qlsVmqAaO33tw3NT6NmGn2
      bIrWjRwIQQ7c3ucht7GMliVgaqzzpRpFKpWCaXhNpv1+H/4/QWwTy6cHSCQAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Death Report (old)' width='192'>
      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
      TD2ngqhTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Death by GDP and Pop Density' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='47' name='Death/Infected/Population Metrics' width='192'>
      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
      yTmXDAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death/Infection Report' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2daZCcx3nff+8197k7ex/YAzcJkARISrx0UBYtWRdFKXYk2bIkW3ZcrvJR
      dsrlVKWSysc45aQSK18iW3IcR44kk1ZJJCXLpEiLpEgCIMEDNxZ737Ozc8+8Z+fDADBo0iTe
      F+AemP592QF2n+l+Z/rf/fTTT3crCwsLAomkTVE3uwISyWYiBSBpa6QAJG2NFICkrdE3uwKS
      9sF1bBrNJqFIjJCmYppNXKEQjYQRnku90cAIRwkbOlazge1BLBpFUVr2jm3SNG0i0RiaCvVa
      HdUIEQ3p1BtNotEownUwHYEiHPRQBNus47iCcCRKyGg1d8cyaZgWmm5IAUg2COHw3E+eoOF5
      LK67PHj/Qb7/4+cIqR4H7nmAyuTLrDddltbqfPxDd/L4j58hogv23PlBDoz1US8u8XePPkGu
      u4ud+w+xeuYF5qtgVYrc8YEPc+yJR/ngQ1+gdO55Js1OmhM/Y/+Hf4kj3/sG8aE9lAtFPvyx
      T9KdjnL+lWd59nSebMSTLpBko9C4+4M/x97RPhzHYfLsSUYPvJcPvPcAJ0+e5dA993Nwzw48
      x2H6/CmG9t3Oh++9jddOnAHg1PEXGTl4Dw98+AFGOjRemy7y8Y/9Ah+662aOHD/N7pFuJmdX
      uTA5y+6do5dLVRSDu+//eQ7vyvHKqcnL/z+69yCf+MiHpAAkG4QCx5/7B46cLfBLn/0Yuqbh
      ui6e56GqKueOP8tTL03x4EOfJB7WcT0X13VR1VYT1XUDy7Jb76WqCNfFEwLbttF1ndFdu5m9
      cJKlisJAZ+xNxTuOg65rb/g/z3OkACQbg2fWOH7yHMIs88STzzBy020snX6RJ54/yeHbbuLl
      l46hehZPP/1TescPkD//Ej985lXec/ggAPsP3836xDEefuRhzi9b3HdojIe/+12eemmCe++8
      hVTPMObiGTp27EFXQA+FUBUF3YAnvv8wJxdtDt88BoCq6Uy8foRHHnsaRa4ES9oZOQJI2hop
      AElbIwUgaWvetA6QzWY3ox4SyabwJgGEw2GUS0tvNziOWWducYVIPEVProO3emzPMSmUm6QM
      m2PnFrnr0IGNr6jkXaOtV4LXzr/Af/ja4+zOadzx8S/TbU3y0nSVX/zUA/zoe9+lGRtgd7LA
      n/7vp/jtX/9FHnnsHzhx/DiffvAjPPrww3TvuYOP3Hdosx9Dcg20/Rxg16138xtf/DTHnvsR
      X/+rR1k//yJPvzpFJtfNC9//NtHhXezce5g9w11EM72wdoJXXj/Nc69OoGlt//Fte9r+G5w9
      9xrf+s6j7D14iIihMHrwLnJiiR899TJhQ0WPpiktXWCpUCGWTJGIRXDVCHccGOF7D/8AW66i
      bGva2gUquEluG+8i1dnLUDrCRz/+c1yYy5PrynFg7yDh8C7WFou87659TC+V2DOYI0oCzWmg
      qQYPfvJDGO0xXbphedNKcG9vb9tMgiWSth0BZmZmmJiYoL+/n1AoxNTUFENDQ3R3d3P8+HHu
      u+8+FEXBcRyeeuopYrEYt9xyC0ePHiWRSLB3716OHDlCNBrlzjvvlJ3GNqVt5wDZbJZ77rmH
      2dlZcrkcd999N9PT01iWhW3bCNEaGCuVCgsLC/T29nLq1CkOHjyIbducOnWKwcFBSqUSrutu
      8tNIgtK2AiiXyxw7dox77rmHYrHI0aNHuffee8nlcuh6a2A0TZNEIsHnPvc5pqam6Ovr44UX
      XuDMmTNEIhEmJyexLAvP8zb5aSRBaVsXaG5uDtM0OXfuHNVqFdu2mZiYQAhBqVTi9ddfZ2lp
      ibvvvptjx46RSCTIZrPEYjHuvPNOBgcHWVtbI5lMYhjGZj+OJCByEvwvIITANE0ikchmV0Xy
      LvKmEaBUKkkBXIFpmptdBcm7yJsE0Gg0NqMeEsmm0LaTYIkEpAAkbY4UgKStkQKQtDVSAJK2
      RgpA0ta840pwKBQilUptRF0kkg3nHQWgKIpc6pfcsEgXSLLtEUJgz81hnp+4nMV7tbRtMpxk
      a+HV66CqqFeReyWEANdF2A7CdbDOnmP1T/8rOA6pzzxEeHwMz7LBsvBME2GaCNdFWGbLxjQR
      to2wLCmAGwWvVkN4Hloy6dtWuC6No0dB04jedhuKpr2z0RXYc3MUv/0djN5e0r/4r1D0q29W
      wnUxz50j/9/+O2o4TMdv/Ru0VBKvVscrl3ErlX/6Wa21XpdK4LkI1wPPQ5gmOA4AjWPHcFZW
      UAwDJRRCDYdRwmHQNLRkqvX/4fDF38sLMrYE7nqRwp//BQhBx69/Be0qDicTrtv68l0XZzVP
      /k/+BCGg6/d/FzWRaP0eEI4DF90CYTsXC7xoi0BYFubpM5QffgQUhdRDnyY0NHTZHtH6GwDh
      eZcbmvA8hN06rrzx4hGsiQkagLO+jhqNtuwdB2FZCLf1t8K2Wu91qfe++L5erYZXqeABa1/7
      n2jZDGo0hpZKoSYTqKkURm8vaqL1WksmUaIRlFAIJRQC16X0ne/iVatkPv+5q/r8LiEFcB0Q
      nkftmWdxl1dIfOSBt+yFhRAI02z1YpUybvliz1Yu03ztdZrHjwOwsrqKlslcbHgXh2zPQ9hX
      NhwTVA1FVUHTELaNVyoBtHrSeBwu9eKqinLx+BZFvxjM0DQUVQFFQQmFcNbWLlUS88wZ3GLx
      ilFAQQm17BRVhYsBEUVRLr/We7qxJiZQIhHC4+OoyUTrvY1WA1U07XKPi663XhsGihECBZyl
      Jdb+x9dQohFyv/976D09vjOSs7/6RV9/f4l3PB49HA7T0dER6M3bhebp06z8x/8EQHjfXkJj
      Y3jVKm6pjFet4tVrePUGiqq2erFkEjURR8tkUBMJEILKo4+BEGS++CuERnaAorYaj2GgqGqr
      8VxuSKE3lO/VG6z92dfA88j93u+gRKPvWOcrG5hnWlQefxxF00h+5OdRfEb9hOdhXbiAlsmg
      dXYGSqe/NHnd6FR8KYBrQAiBs7BA8Vt/Q+PoMQCihw8Rvf121EQCLZ1GiURaQ3ks+qaGeyXO
      ygqIVm8q2TikCxQAIQT21DSVx3+IOTFB4gPvJ3H//bilErH3vgf1Knrgf47eLRv+ZhBAAB75
      5UWm5gscPnSAdto7JjwP8+Qpyj94FK9WJfGhD5H90hdRY2++k0qyPQgggAbf++ZfYYzcxv5D
      B7j01Qvh4XkCVVUvX3x2ie2+xVK4Ls3XT1B++BGE45B68FNEb7vVV7hPsjUJ8A1G2HvHbVSc
      KFdOlVYXZphaWCabylAsFegaGsKrgqsLdo0OXbcKbySeadJ46SUqj/8QJRQi9elPEbnllm0v
      aMk/4VMALjMXTrO4ZnHroX1vyKNIZbJ02Sqqa3Pw9luZPjfBhdMLvPeB+69rhd8t3EoFPA8t
      ncar1aj99BmqT/4EY6Cf7K/8MqHx8VYYUHJD4VMACoYRYmBggHI+jzM+zKVo8eTEeZoiRG9X
      hlePvsqO3Tu5NTXA+soS6R2DW3quYE1Osvqf/wvCsYnfey+NV18jPDZK52/9JsbIiOzxb2B8
      CkClWlzghefPsOumvRy84jf7Dh6+/Lqv/6LLkwHY+lcuNU+dxl1fB8Cem6fr3/5BoMUYyfbD
      95i+68DdjPfEcBWPG+Vo/Mi+vSihEMbICNmvfAlDHg7WNgSYBNt4TZv8aokb4URM4bpUHvsh
      yU9+gvRnHpINv80IFAXqHRtl59DQtl9FE0JQe+ZZnPUC2a/+mmz8bUiAsEaTI08+x0uvnMC+
      /vXZUJzlFcqPPELHl7+E+jZpCpIbF58CEMyePU96rIfB4Z2E3506bQjCdVn/+p+T+tSnMAYG
      Nrs6kk3CpwCaHD+5wCc/81nshUma706d3nWE51H+/g/QOrIkPviBza6OZBPxKYAQN+8fZX5u
      nh379rNdnYbqkz/BPHGSjt/46mZXRbLJ+JzHCsqlIhXTxgglt2UY1JqZofLY43T/8R/JXB6J
      3xFAZXTXbhIhhaZpbTsBeKbJ+je+SfozD6F3dW12dSRbAN8CSGV0nn/seYrN+hvWAdaW57gw
      s0ituMrRF49QqJVYWy0zN794XSscFCEE5b/7HnpvL7G73rvZ1ZFsEQKEQcPc/9kHCHviDcad
      Pb1owmN9vcSBw/tZnZvl2AtHiWdy162y14J55iyNYy+R+cLnZVKb5DK+W8K5137Goz96job5
      xlWASrHAysoqrnCZOj+JHk8yOjbK2mp+010lt1pl/S++QfZLv4qWSGxybSRbCd+zwF0H7ubg
      TBE3keLK02M0LczIyCCpdIp6rU46k8TrVXDdzV0uE56g+H/+mujth4ns37epdZFsPQLlAhXL
      DkptERsuL4bFkmliF08DCV9cVVV10PXNXS6rP/88zuIiHb/2lU2th2Rr4lMATS6cX+fjD34E
      Vw1t+ZVge2mJ0ne+Q9cf/oHvoz4k7YFPAdg88+Mf0zvejxFOc+/738NWbVbCcVj/5l+S+sQn
      ZKqD5F/EpwAifOShT9Lds/XPCar86O9RQiHi73/fZldFsoXxGQUytkXjty5MUn3iSbJf/pLv
      g14l7cUNFxD36g0K/+vrZH/58+g+DkmVtCc3lACE51H89rcJ7dlN5LbbNrs6km3ADZEN5uTX
      KP71XyNsB7e4Tve/+2O5u0tyVWxrAQjHwatUKH3nO9R/9jwA2a98WR5VKLlqrrsAPMfk/OQc
      Y+ND2KaC4zRJvsOtJcJxqD75E7xajeQvfBQ1/E8rDJ5p4ubzOMsrOPk8zspK6/XqKl6phBqP
      o0Rb1+oohkFodPR6P5LkBua6C2BxdpqObJyJ6Vnsgkl6sI93urWn/uIR1v/iGwCYJ0+hZjK4
      a2u4hQJes4Gey6F3d6N3daH39hC95SBaVxd6Lnf5Igh7agolGkXv6bnejyS5gbnuAhBCIRKL
      IdbLrBUKdI3teEcbJRwGVW0dTdjZQfTwIfTOHFpHFjWdvip/Xvb8kiBc9wsyrHqZ0+emGd87
      jttUaJpVurq73vZoROG6NF5+GdFoErvrvXKnlmTDkDfESNqaG2odQCLxy5YRgN8bvrcWYtPr
      v9nlb1e2jADW88tMTk1RrjYCWAvmpiaYmZmjabu+rcuFFSYmJpiYmKBcNwOUD8vzs0xPz75p
      p9zVMjPxKq+8/Cpzy5VA9uX1VWZmZ2lajm9bz6szdWGJuQuTWIFKd7lwfhLvGkQ4OXEeN7B9
      q/wgncCWEYCqKFimydz0jO8vobSeZ2J6Hl3XCLIAHEuk6cikiUSi6AH3CysKmLbFzPRMoC2g
      HoK15dXLd/r6RVVUTNNmOkD5lfU1FpcWaCpawLCgQrWwyNGXX8d0gx2Z7DVLHDn6MsV6EAkq
      lFbnOXr8BLZPEWwZAawXCgyO7mT/TXt8H7gVjSXo7upC8ywqNf8foKoblMtlsh1ZQkaw7NF6
      pcjK0ir9O3YEuwzEizC6dyeZhP/jxurldVYKJXRNY3RsxHf56c4curnG+YmlgOe9ehRWCjiN
      Bg0nmADK1RI0LIqlIB6AS2GpgNVoYG5XAaTTSS6cOUWh7P8DCIUjxEIqa+UakYj/LTqqqmII
      i3MXpqk3gzQBQaGwjtVs0DT9uyAApdI6jm3jef7Hj2gyQzYZpVyuBHQjwmT7hzl4846AG5w0
      9t92gExXjlQoWAcytnM/iY40fV2pANY6N99+gGx3F3GfLsCWEcBafp7ZC+eZW6kGshdqiL37
      9pEIBxvETccjotrUTP9ziMXZGTr7dzAyNkoqFqwJ9fX3YzZqgVwIRVFIpLKEcWhY/usPgpCh
      c/bE6YAjgCC/VsSu17ADCBhgZXkVTXGoNYO4QB75QgmrUsFv97NlBNDRPcKevTvpzgZLZLOr
      eZ7+x59RagSbxlmWhVA8ps9P4bcJhcMhLMvECej/QsuNS8QU1tfrvm2tZoOVlSW0ZJZMgBEQ
      BJZpkevrCzAHECzNz1AoVbGbTawAAlhbWWB5rYhlmTR9j8Aei7MzrJfrWI0Gts/it4wAcG0a
      tRJr5WBnTq+XinjNJvVmABdECHLdvVgm7L95HL+DuCdAVTV0XUcNMAuvlYvk19Zw1DSjAwE2
      8SgQT2awK0XKgVwwh6WlPCtzF3jt9KTvwnsHhuhIJ8l2dRHR/D9/Z3c/nZkk4VAITffbJFX6
      hobIphJ09nQT8ln8lso5UEIxklH/PZgQsHP/rayvF8nE/Z9VMXPuJEsVG8u0SUb9T0KF52GE
      QiiogUKBoUiU7t5+qoU5phaK7BzyJ4JQOEooHCUaDqEF8sFD5Lo7cL0MkQDPD1Cr10hkOiHg
      faDRSISG7RI2gjRJhVq9SjLb6dtyywigWCjQM7SLTMK/C3TmlSMslEx6e3pB8d8Ah3ffxLDw
      WJidodKwSMX8iairb9B3mVdihMIYoTDR8ChpL/igHInFA1p66KpKodxgz4EgJ2gIPNfFNC0E
      Ar8iEEKgRxLs6IlStx3wHQf08BzvYvn+2DIuULYzy9T5c9QCDOG7Dx7i5l07KOTzOG7AxRRF
      pX94xHfjv56oeohIaPP6JMXzAl58qDHQ10s4HkUR/kcAq1Hh1KlTzM4vo+lBRjCdgb4ewomo
      7wa9ZUaA5aU8I8NZ5ueLpHd1+7KdOPU6VUdnaHgII+BCUjvjuYJ4KkbT033Pf1q4nD95CjuS
      IpPLYWj+mlU4lqIn10FYh1rDIpvw2wk5nH3tJF4qS2dPt69Q6JYQQLmwCkaY9XWTngAbWnbd
      dOu7UKt2webYCy8SToWA3oACUBi/+ZbWXEj1PwIIzyURj+AYaYZzQQ4vVhnbtxMv3klsO64D
      pDq6CCs1CoUCSyvBcmEkQTG4/a672TO2l1jU9R0CBqgW85w9N0ml0QgUBTv56it0D+8i4hRZ
      KvgPA4NKNJmkvLLkO41mSwgAIJXtwrNdcoFWAiXXgqIohGNJdo6PBBoBEpkcfT0ZHDvYKngq
      GWd+boZCzSIWeB3DJpHN+l7J3hIu0PTZc4RjYfbefifZgGE4yeZiNk1cx2ZmcZVdg/7c2KHx
      PQjPA0UNlMwILvm1MgYejZGh7TcHUFVBvrCObrroff0kNzESIwmCSjoZR8RSDPUFu3st+K09
      gmKhRLYjTtPVifhU0JYQwNDO3QxtdiUk14DL7MQFalqM7r5+AubDBSYSjSHyy1TLDTzw5cZt
      CQFItjOCfL7IobvuYHq1Rsx3KsO1l3/m1ZcR8U56ujO+16GlACTXiGB+dhbXE6SjEaq2Szpg
      Rm4wVG55zz2BraUAJNeIyq5d4ziKga4IIhvt/1wjUgCSayaW2L6h6y2zDiCRbAZSAJK25h1d
      INd1qVaDbVOUSLY67ygAx3GoVGR+juTGRLpAkrZGCkDS1kgBSNoaKQBJWyMFIGlrpAAkbY0U
      gKStkQKQtDVSAJK2RgpA0tZcVTr01dzTK5FsR95RAPKaVMmNjHSBJG2NFICkrQm0JfLSdZRy
      biDZbrTarsAzV3FrE0EE0ODIU8/w2kyNX/nVB32f5C6RbCRCeOA1cZuLuLUJ3Oo5vOY8qGG0
      +M4gAtAplWscOLg74F0gEsn1Rzg17OIxtOggipHGbczjVk/j1iYRbhXFyKLFxwnl3o8aHUI1
      0kAgF0iwMpMnNjAc8DIFieT6Y+Wfxlx8GNQwaqgTLTqMFh/DyN6JGupG0d/65qEAAlAIhVxm
      Ftd4zzVWWiK5Vjy7hLXyI+ziSyhGGj25n8jgF1C0yFXZBxCAw9i+Xbw2XZUjgGRTEEIgnCrW
      6o9xikcxOu8lsefft24nU8Mo6tU360BzgNXVNXbv2yvnAJINpdXwy1irT2Kvv4CROUxs1x9d
      9ueDtMcAAvBYX16jHFrkDg4EKFIi8Y/nVLDzP8UuPIee3E981x+ihnLX/L6BJsE9PTlm69Yb
      XKBmtcjsSpmxwRwnTp6mf3QvpaULqPEuoqJGvg79XVniYZW6a5BNBbsRXtJeCM/CXnsWK/8T
      9OQ+YuO/ixoOdgfBW+FTABbHjpzjgw99hldePPqG34SiCXStyNraKsM797M0d5ZQuAOnXqKi
      KqQUweLKPI0G3HrLTdftASQ3JkK42IUXsFb+Hi0+Qmzst1FC3dd98dWnAHSKK+d54skVyg3v
      DQ6QEAKz2SSuRygXC6BEaDaqCAU016XqQiSZJK43qJs2KXkVkuQKhOfgVk+DFkGYeczlx1Ej
      vURHfxMt0veuletTACof+tiDOLaLZuhvmHSYtQqqoqIncqilAmM7d1ItLKNGM4REk7IJmUSU
      sKFRt4LcRSi5ERGejXAqOKXjNOf/BgRoyb1Ehr+IHh9/18tXFhYW3vZq9TenQ1v83z/7K0bu
      uo3Dhw8hb/OSXC1CuAi7hNdcwK1P4zZm8cwlQEUx0niNWVSjg+j476DqQe4L9k+gZDhdt5le
      yHPn4etdHcl2xnMqeM0ltNgIKDrCKeHWZ/Aac7j1KbzmAqgGargbLTZKqPNe1Oggiha//PeK
      YoC2cQGSQALoGx+jc2x/wFvFJTcSQggQLsIu0Jj5Jm71PGp0EDwLFAU1MogWHSKU+wBqbAhF
      iwHqW05mFSOz4fUPlAphGBonXj7O+PigdIHaiEuZlZ5VwK1P45lLuPUZhFUARQXhgKKhpw4Q
      6rr/8gLVVsa3AOZnpigUKiTTnXI3zQ2GcE3s4hFUowMtuQfhVPDMPF5zHrcxg9eYR7hNFDWE
      Gh1Ai+1AT9+KGu5B1RMIp4Zn5VEjA77SETYT37UcGB5C0ToxaPK2s2fJtkIIgV16iebMX4Ia
      Qg11AEorjTg6gB7fhZq7HzXUgaJF3/I9FD2Opsc3tuLXiG8BHP/Z0zzxzGm6hkb53L/+5LtR
      J8kGIYTAa8zgmcs4lTMIp4SW2IMa6iDc+wkUIwVK6Ibe+edbACN7buNeO8JaI1jykWRzEcJD
      2EXswnPYxaMoWgwjcweR/ofeEH25kRv9lfgWQKYjyvSJ11hWe7GDvIFkwxFCgNvALr+Cs/4i
      nlVAT99KdPgraLHhza7ephKg/SYY3D3OQGaIt9xy4DnMLyySyORQ7BpKOIkhTKoWpOIRdE3F
      cgWRkHGtdZe8FUIghI2iGAjh4jamsfP/iFu/gBYdwch9ED2xB0WT8TsIJIA6pbqB3pijyc38
      8+mQWcxTcRQyqsfk3BJCy2NgY9lQzqQwXIt038hbi0dyzTjVU5gLj6DGRnCr51CMJEbmDsL9
      n0bdhDj7Vse3ADwvQk9XCCvU95aNWInEMGfOM2XViCc7cO0aKDoJQ1BqVFitOvSNSsfpWmkd
      7+G1QpWNOdzmAl5jHqdyAmEXUfQE0ZGvokb6UBQZsP6X8NkSbR7927+lbIf47Off95aTYM/z
      UFDJZruprc6iJi7tB1AY6O4nMayxXqzRld2YXI/tRmvXUwlFDYMaQVEUhHAQbhNhrbVSC8yl
      i3k0KyiKhhodRo30oqcPYnTejVN6rbUQFZJHWr4TPpPhanz7m4/QaNbIjO/nFz58H9KT/2cI
      gVufxG3MYmRuR3mLuLgQLggXhNNaXRUOXPzp1qdpzv8/1FAOLbkXr7mEZ66AcFH0FFp0EDXS
      jxYdQAl1oOjptonYvBsEyAaVXIkQHrgNPKeMsIt4Vh5z8fsIu4AW34lipBFuAzwH4ZmtHBm4
      GEPWQFFa/1DU1k/PxmvOo+hxQl0/hxYbRQ33oOhJOXF9FwjsjC9NzZAdGb4hc4E8u4y1+gRa
      bAg9fRjhVhHWOp5dQFgFPKuAZ+UR9jqeXQRUVCPVaqRGFi3ShwvomcNo0UFQQxdPKwiBGgZF
      RUG92OjViyJQL+fTOOXXUUOdqNFh2bu/ywQQgMkzTzxD3TP4wMiNF0MWwsFa/Qes5cdA0VC0
      b6FoYRQ9jRruQjFaP/XkPpRQFtXoANXg0jnDl3x2PAvUqP8GrIQwMoeu/4NJ3pJAm+I1I0r6
      BorjtyaeFez153HWjwICLTaGFh8h3P+Z1oTUB4qigyYjXduBQOnQk6+9gjY0xnbvp4RwcWsT
      2IXncGsX0BK7iQx9ATU61JqkKpoMId7gBNsQ09fNbMPetifDeXYZp/Qy9tqzoGgYnfcR7v/s
      G7fhyYbfFvgUQJMffPv7eJEwXfHUttoP0Mp8nMVa+ylO+TX05D4iQ59HjQ6hKHJvW7viUwBh
      Dhy6ifmlNWrW1m00Qri4lVOtM+CjA9il49iFnyHsMqHc+4j0fQplgzZdS7Y2vg/GevGnz1LG
      YGB4z5ZKh27tTXUQbh23epbG9NdB0VCNLGpsB+Gej6EldsneXvIGfArA4H0PfBTT9VC10FW7
      QI1qiYoF6XgEQ1exHEEk/PYHYwm3gWeuoEb6UdR/ijgJz0TYZTx7Hc9awzNXEVYez1xBuPXW
      xFUNt2LyeoLojq+iRQf8PaakbfB9MFbPwKDvQqZnZrEdqKaT6I5JdmD0bbNBhXBpzn0Le/1I
      a8+pkcazVvHMPMIzUfQ4qp5CDXejhLrQ0reihntRjGQrZKkYCKfSWnDSttcWPcnGsgHBaoER
      ihDXBeVGhVrVof9qskGF3QpFehZqpB89fRtqOIeip0DRAOVtF5kUI3X9HkFyw7IBAlCIhZQr
      skF1iqUaubfJBlUUjcjgFzBy96PFhn0vREkkV4tMhpO0NdsplC+RXHe2rgCEuHwh93ZjU+u9
      jT+3zWDrZmx5NlNT01SbDmPjO4lH/CXfzV44i61F6OzsIp1464Oc3rpcl7m5WUzbBT3M2PCA
      74zOynqexdU8RjTNyFAfqk/700efZs3U6Bw7yN4+n5N51+T8hWnUUJzRHQO+yrbrJV6bWCCq
      OezYuZ9YyN+aydL0OaxIJ32dKQzdf9OaOPU66f4RMokYuuazb7arHDs1x017xt4xxH4lW3gE
      8LBcQX9/P8XCmi/TammN2bkFGqaJ4/rMWFI1stksht8v4AoUFYxwgkQIGpb/jKnOngFQDXrS
      PoR7Zfm6QTqmUm36u4fBdhxUz0aPpIgY/p8/Fo8xcfYU07OLvm0BYhGNk6+9wpEGPysAAAXp
      SURBVFKh6t9YNSiuznPm3IQ/M/8lbRDCJZ8vYjsuA/29vkwT6U66unvZNdxDfr3ku+h4NEzT
      1RgbHgy0IaVaKjNx7gT5mkc87H/lebVYYaC/j5Dfb8e1mJpdQBECQklSUX+9cCwep7iywNTM
      bCDhrhcrOI5FuRqgAQOlYgnbalCqNf0bOw2WCnVqNX9lb10XSI/Sn0uwtJKnt8t/FGqgL8fU
      7DK9/QE27ag6Tn2NUxOCfeP+d2W5QqWnpxtDD9a/hDQN0zLx/PryWoiRwT5OnDmPKFXJZZL+
      7BWDvoEBTGEQ0v0Lf3h0J0Y0QWd3sCuNdt10K4nVdXp7A9z+GE7z0Q/cgRLx5zJu3RHALHHk
      xDSNRrDeJL+aJ9c3RDLIXWSuSdVSqaznfZuuzk1SqDWJxdJ0ZIIdD57KZGgU16iaAa+SEoJK
      rebfTlHZMbYTzW1iu/4n0nOT56hbNmfOT/kvGzh35jRWvcDk0rp/Y6vC2ZlVzp457cts6wog
      lOCuW3eTSmUDmUcjOk///WOcnV3xb6zqxAwVXYWVgj8XKjcwTC4Vo9moYlq2/7IvoiseNdPx
      Z+TazC6ukEhl2LdzxH+hwmPq/FlsJYTi8+zvZq1EsdKgXCoR9jEJvUR5fZVaw2R1rUTY8Lnb
      0HOYnl8CuwE+j2XfugJAQQuFWVlaCGS9ki/T29eFa1v+DIVHsVQmqnuYapzuDn+9eHF1ifnl
      VVQjSspP9OkipcIqNdMl2T3EjpzPlG1Vp69/gL6eHGfOT/ouG89mrdygVlzm2CsnfJlG4mky
      qTjZjhw9XZ2+i05lu4hFwgz25qg1TX/Gqs6OgR60UJwdg/4SH7fuHMC1WMkX6O7170+ajSqZ
      XBfhZpKs3/mD8FhaWkZ1TFz831WVzOTYE2n53r5DeUAy00ki3YG5Ns2F5TJ7+n0IUFHQdR2h
      aezfNeq7bLQwI4O9NF2IxwLc0+U5NCybtBdsr2B/fy9La2X6h4K4jgqm2cBx/bmNW1cACApr
      6+wY99+b1ColVvJrGEaEaMTncKzq7N1/M57n0ldv+C5bD4VJhYLnLqlqSzTR3Ai7Au64UBQF
      wwhy3oGHZZlMzy5y1z33+TaPRKKUarb/0DOt85XmV9cZ68sys1YiHfN5G7yqE9FV327n1nWB
      9ChjO/rQVP9VTHd00ZlJYWiCctV/IwZQVY1kIrFp5/Ioqoqqbk7Z6WwHWoCyw7E4tuPSrFV8
      2wrHYmlhgcW1SiDXEVWjYdlo+Js3bU0BCI9KYYGlosvysv85QGFlEdNViMbiRMM3zvEt7ypC
      UK1VEK6D5aqBBFCv18gvz1Os+fThAdWIMDrYi2ObNPxO/gFcm3xhjYVlf5G7LesC2YTJJqpE
      4/2+bbv6d+BzAJUAczPTKMLDIYzv9i8Epqdw13vvYnll1XfZjlnHVXRcRWdHLsBeDsXg4N5d
      hJL+ooZbcwRQVDqSIV4+cYHlleXNrk17oCjsvekWdu0/yIGdA/jOpxMu62t5pqam6ejs9l38
      uTPn6BvdyY5cmHNz/gWEoqLpGs1G3ZfZ1hwBhEDoSe44MAohubNrI1FVjUw6QBRG1elMJzDV
      CLMLi2RT477Mh4b6mDp/HsVzGBzd5b98PGq1Buj+gh5bUwBWhVcm11Bth4O75Ib27UI8lqBS
      rmM3GjQtl4iPbNJEtpubsv5Hjst4NnXLQ5j+Mge2pgukR0gaHoZhMLsgXaBtg6pQqZtkMxlf
      jf+a8RzmltboSEWJJ/2NXltzBNBCjI/7G0Ilm4/nedRKa6RSG3wXmaKRSSWYW1ginvIX/tia
      I4Bk21FZW0aNZchlssSjG3wFomdx9vwU4WgCvwm4W3MEkGw7LLPB2dNnGd53K4XFOei/Bn/e
      L1qYQ4cPBzKVp0JIrhuX9iILwaatYvtFjgCS68altJHtdKuTnANI2hopAElb844ukG3bFAqF
      jaiLRLLhvKMAPM/DNP1n90kk2wHpAknaGikASVsjBSBpa6QAJG2NFICkrZECkLQ1UgCStub/
      AwgBIWPno1emAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Deaths Per Gini Coefficient' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Economic Factors Dashboard' width='192'>
      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
      fV1VVVVyL0Dqnq5uK7e9Ge9lM23Y3aGF2I5MFy9evLiZG0jFFxkem8FmNROLx6m22cg3UVqO
      Rvj6wSTWaivL69QBzE6OoWgmMkoSBQtWU769j8rI/XsYMZNRU+vUwcTo1ySzBlBSxJZT2Gxr
      F+vMByZQjA4CE8NoBgOZTJZEWqW6ypK3zj8xTCarkM1q69al40Fi8RSKsv7rzU2PoqGRTuev
      iy0uEIkniS0ECceSGNGIx+NrHh+1GA4yPhNETcWIxFMYNHX9umSU+cUEJkP+18sk4wwPj2B3
      NTE9OY7JZFq3zmQ2Mz07j8VkzFtXbps+2QouRPHZLYwF/ATDiwU/1DZHLTVVFubn1q9TM8uE
      54IsLkYYGJ3Gbs2/K1UW/QTjGrFwcN06gGh0iVgsTt/16zhqa/PWNDXYiScSmKpcxMJTXPvy
      PnV5nk7/sC5LfX0jBjVRpC5DeDFMLBQuUpfC7w+SSiwWrHPU1ZNNJ4nGosRjMYb6ezHa1r4X
      Z20tVrOZdBbUTLJoXa2rHrPJULDOXFVDvdNGaG6GaEJhdnqUSDRdsG5qegYlncZfoK7cNj0A
      TpuF8XAMT0MjTpsVtcCEKzg9QTydwVG7fp2SyaKgkclodLY0Ek1k8taZHY3UVkEW07p1AGaz
      BZPJSHf3AcLhSN6aQCBIOBwhvjiL2ebi4N52wovxAnVzjI6Oohks69fN+0kmFRJZpcjrLdDY
      UEs6oxasWwwHmQkEMZrMGI0mug50E18IrambmpwkrShomSRp1VC0bmJ8DEXVCtYthwPMRBJo
      qkoiGsHR1EqVee1lLyt1jQ31KKk0dc3568pNjgGErpV1UbwQlUYCIHRNArBJlFiQDz76hLnI
      6vn64tIik1MTWzQq8Tg5BtgkycAdbid8hAYv8/X4LM+dO8fgvQk0JYGvsRpnQyuhqRFefPVP
      qK0pfj2V2ByVsTDzGWS02pm+eZPO9k4MzlbSy8u0NDdgNSo0uBsxoqHUWAgsLFNbU7fVw9Ut
      2QMIXZNjAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsS
      AKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgCh
      axIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsS
      AKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgCh
      axIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsS
      AKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgCh
      axIAoWsSAKFrEgChaxIAoWsSAKFrEgCha/8fJKfBj9rlcfwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hawaii Death Map Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJvklEQVR4nO3daXAT9x3G8We1uuUby0dtg4GUEhswV4rbQBMIJZDCdEpChmnaDsP0VScN
      7/uyrzuZyZTp9EXSJkOaIZRkMjmaBsJpsDHmsLEBE47YCGMDNj6QrGMl/fuCXARqy/KuZfv3
      fF4a6af/DPu1dle7lhYMBpXdbgeRRHa73Q6Xy5XpdRBlhC3TCyDKJAZAojEAEo0BkGgMgERj
      ACQaA5ggSikkk8lML4O+h5+AmWB4eBiH6+oRDEcRjhiIGgkY8QTC0ThCEQORWBxGIgG7rmP7
      5tWY99icTC+ZvqJFIhHFD8LSk0wmUddwEu8daoWeWwFN00Z9jhHsxUtrq1G7fPEErJBGwwDS
      oJRCIHADb31wCD1RH1yerDE9PxoawPrFxdi47qmUoiHrMIAxikSjePeD/6Lh8iC8ecVpzzGi
      YdSUati+dRNsNh6KZQoDSJFSCieazuDd/WegZZdDM2GjTcTjKHMP4ZVtv4Lb7TZhlTRWPAhO
      gVIKf/3HHlzstcGTO9O0ubrdjqu9cXT39GB2ZaVpcyl1DCAFnx2sw+UBNzw+839L5zui3Pgz
      iDufo7h95w4+argKh8v8jT+ZiOPHVRWmz6XUMYARKKXwxp7P4MwttWR+qL8Hq2qXWjKbUsMA
      RnCsvhFdYa9lpypnFjjg9/stmU2pYQAjcDp0ANZs/IlEHEt+VG7JbEodAxjBsqVLMNx3w5rh
      SlmUFo3FtA7AMIxxXYBmt9vxWFmeiSv6lqbZEIkZlsym1E3b06A3u3vw2q7/ACqJn6+Yj7VP
      r0xrzuOz/DjakYSmmfu7QrPZYBgMINOm5TvAl50BvPr2ARjeMhi+CnTd6kt7Vu3yGoRvXUY4
      OAClzLucWdM0GHFeHp1p0y6AS5ev4bXdR5H0FAIAEnEDZUXp78aUlpbib39+GS9vWoglxQYc
      wesI9feMe50JI4acbN+459D4TKtdoHPn2/H6R6dhzyr85mfBgTv44dyacc212Wyorq5CdXUV
      lFK4HujCzj1HkHAXjv7kRzAiIayodGPTs6vHtS4av2nzDnDyzDm8/knzAxs/AGjxCPyFM0x7
      HU3TMGtmOXb8eg208J0xPz8a7MfGpUX4zQvP8SrQSWBa/A8cqW/Crs/bYffmP/RvuV4dHo/H
      9Ncs/0EpdmxdDTWcegTxUB+2ravCs2vSOyAn8035AA7UNeLfxzrg8OZ+8zOlFML3+uEcDuD5
      Z5ZZ90luRRl2bH0KJXoftMEODHZfQWiwF0YsAqXUA+tRodv44/O1eGLpIkvWQumZ8vcD/P2t
      vbg0lAVN06CUQuhuF+aXerH2p4uwsLpqQu+4ikajCAQCCNy8ha5bfejuC+J2fwgOu45XfvsL
      lJSkfwMNWWPKB3C4rh7vnbwNh8uD+OAN/On3G1FSPLk2NKUUb32cpKb8LlD1/HmI3OtF3Ihh
      zeJZk27jB8CNfxKb8gH4/YXIcyVhG+7B+md4cEljMy0+B6gs8mHOrHLeV0tjNuWPAQAgEAig
      uLgYTqcz00uhKWZaBECUril/DEA0HgyARGMANKkopdB46iwGBwcn5PV4DECThlIKR+qbsPd4
      JzwYxh9eXI3Zleb9IbJH4TsATRrHG89g7/EOOL05SHhL8Oruo2hpa7f0NRkATQoNp5qx+8gV
      OL9zUaMjy493Pj72wIWFZmMAlHFNZ1vxrwPtcPoevnNvCNlobTtv2WszAMqo5tYL2LXvPJy+
      h+/lAAC3LxcHT7RZ9voMgDKm7eIX+OenLbD/n40fuH8h4YWuIO7evWvJGngWiCyVSCQQiUQQ
      DocRiUQQCg1jYOge+vqHsK+5BzZvwagzkokEnqzUsOWXG0xf37S4GI4mn7/sfAOdfTHEkwoK
      OuLKhqSmw+5wwe50weF0Q09h4wcAm66jvrUDmzcmoOu6qevkLhBZYt3TP0HcmQePfy68/krk
      FM1Enr8MWXmFcHuzodsdY5oXcxWi6XSz6etkAGSJRQuqUFPmNO0UpsuThcNNF02Z9V0MgCzz
      uxc2QA11mTbvWq+B7u5u0+YBDIAs5PV68dL6ZYiEzLmux5tfgv11TabM+hoDIEstX1qD+YXK
      lF0hm82GpvZuxGIxE1b21UzTJhE9gqZp2LZlA5JDN80Z6CtGXcO37wLRaBTtly6lPY4BkOVy
      cnKwZc1CRMPBcc9yuDz4sPE6Tjff/3T4bEsbdr6zD6FQKK15DIAmxJO1yzEnx5xdF91bgDf3
      ncehY4041XYV9oK52P3h52nNYgA0ITRNw/YX1yM2YM5ZIYc3D+83BNDSOQSbruN0RwgX2r8Y
      8xwGQBMmPz8fm3/2OKLh9HZXvs/hyUa2//73LLuzZ+Dtj4+P+QCZAdCEWr2qFuXeYUtmh+x+
      fPDpoTE9hwHQhNI0Dc+tqkE4aP49v7rdgcNtt3A9kPo3ezIAmnALqqugR9L/3raRuHKK8Ob7
      B5FIJFJ6PAOgCafrOhbNLXrgZ0opGLEI7t29jcHb1xEODaU1W9M03InnYN+h4yk9npdDU0as
      XFaFc3sOwp+XhYIcN4ryfPDPmIGZ5QuQn5+Pa192orHlMi4E+gHPDLi92SnP1h0u7N3fhJUr
      liA7e+Tn8YYYyoivL40Y7U/HRyIRtLSex4mWK2i/MQCbrxAuT9ZDj4sbMYQHelCaa8fCOSVY
      sWwhKsrLRp3PAGjKCIfDONvShsZzV3Dp5hCUIxta7B5mF/tQM68cTyxZhIKC/DF9HwMDoCkp
      FBpGZyCAWRUV8Pm8ac9hACQazwKRaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEi0/wFT4MdTR032UgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hawaii Time Series Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Infected to Hospital' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Major Reason for Death in relation to Covid' width='192'>
      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
      E78sAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Political Afflications and its Impact on Infection/Death Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dZ3RcRb7gf51zULeyHCQ5J2xjcMIMGLAHZgaGGQM2mDyEASa8N8x7+855
      u2c/7IfdL+/snrd7dt+QZrCJHjBxDBhsbLKNjXGSg6xgW9EKHdXx3lv7QViDsSR3K7ak+p3D
      OViqvlWlrv+t+sfSCSEEEskERT/aA5BIRhPj+f+JRqOoqjqohyWTSSwWS79tFEXBaDT22+b7
      aJqGXp+5nA53ewAhBDqdLmfGlG3785v+WJ9DNuPvqw/dUB6BQqEQHo+n3zZdXV04HI6Mn5mt
      wAx3eyEEmqZhMBhyZkwDeakAWS24XJuDqqrodLpBz0EegSQTGikAkgnNiAtANkcHiWS4GXEB
      OH/+lEhygREXAOl2kOQSUgeQTGiyEoC25kbiyQQnq2uIBjvpjMRpa20mkc7cf5CtzV0yOmia
      YPe39Wz5+CjBaGK0hzNsZGx4VZIxmk7XY04oFOc5OXu6CeF1Ez93lkq7D5O++3yvKEq/z1FV
      9ZJtftg+G4a7vRCi579cGdNA5gD962NH6tpQVJXrFk9l6ydVbLx+3rCOKdv2mqah0+my0il7
      6yNjAYgEO4klEqjxBA2REHazDUWJYLTnAd3WHb1ef0lnhk6ny8rhAeRU+4E4woZ7TNm2z8QR
      ZjYZUVVQNTAaDBgMhpyaw0AcYb31kXGPeUWTWF5QCjodqVQak8nY/SbR6dBn6ZKW5D5zpuYT
      jaf4qqqBddfMGe3hDBtZiajuO2mzWMwD7jDb+A3J6KDT6Vg6p6zn39kcW8cSI66RSiVYkktI
      R5hkQiMdYZIJjTyPSCY0UgeQTGjkapRMaKQSLJnQyB1AMqEZcQGQjjBJLiGVYMmEZsRX42BL
      r0gkQ4l8HUsmLKmzZ7MLhpNIxguJY8eIvPf+yAuArAohGU2EEMS/3kdszx78jz828gIgY4Ek
      o4YQdH28i1RtLf5fP4rOZBp5AZCOMMloIDSN8Dvvok+lyLv/PnTfZYZlLACpWJjq2nry3Hm0
      hiKUeh3EzS7SgUaKp8zGZTcN2+AlksEgVJXgiy9h8Ptx/+LWC3xRGQuA2WrHgEpC0dALlWRC
      JaaFSUSj5KsaqqpmlBQvhJBJ8aPcPpOk+JEe03AlxYtkktDmFzDPmoVl5YqL+slYAGJdEVSd
      CaNRj0EHerMFtyGJrXgqJoM+46R4o9GYU8nV2bafKEnxIz2mbNtnkhSvRiIEn/szjmuuwbZo
      Ya/VoTPu0e7KY968vO/+NTnjgV40KOkIk4wAaiBA5zPP4rn9Nszl5X22k34Aybgj3dhE8KWX
      8N51J6aysn7bSgGQjBuEEKRqagm/9TZ5D9yPMT//kp+RjjDJuCFx4Fuiu3bhf+xR9HZ7Rp+R
      fgDJmEcIQdcnn5I8foL83zyBzpx53SrpCZaMaYQQRN57HzUQwPerB3ocXJkidQDJ2EVVCb32
      OjqbDe+dG3oqF2bDiAuATIiRDAUinSa4aTOWGdNxXHvtgDMN5Q4gGXNosTiBp5/BsXI59iuv
      HNSzpBIsGVMoHR0EnvsLjpt/hnXmjEE/T+4AkjFDuqWV4OYX8N61AX1x8ZA8c8QFQFaFkGSL
      EIL06TOEtmwh7757MRYVDVlIjVSCJTlP4vARoh9+iO+xX2NwuYb02VIHkOQ0XZ99TvzgQfxP
      PIHeahny50tHmCQnEZpG9KMdKM3N+B5+CH0W3t1skEqwJOcQmkb4jTdBCLz33jOseqOsDCfJ
      KYSiEPjL8+hdTtzrfjnsRhO5A0hyBi2RoPPZ57AvWYJt2dIRsRhmnRRvd3gIBgMUel0kbB7S
      7Q2UVs7DnWFSvFSCJb2hhcMEN23GuWYN1nlzR6zfLJPiNSLxBLMqp1Jf34RObyCeSKBmkRQv
      b4of/fZZJ8ULQToQQLjdGUdbZjMmpa2d0KbNuG+/DeOUyRmtjxG/KT7WFUHTmfC7HVSfbqC0
      sIi0iOEoq8BslEnxozmmbNtnmxQfef8D1FiMRDSK9647MxaCTMaUOnuWyCtb8Ny9EWtZaUbP
      hVG4Kd7uymPud0nxZZMmZdXp95FK8NhDaW3FtfEuEp9/TrqhEXP51CF5buLYMSLb3iPvoQdh
      iB1cmSIdYZJLYiwrJbL1DUilcKxaNejnCSGI791L7Ot9+B9/DL3NNmo30UtHmOSSOK+/nnQ4
      jMnpRDfInG4hBF07d5KqP43/0UfQmUavoqAQQppBJZdGp9OhdzgGv/g1jfDb7yCSSfLuuzfr
      9MWhJJ5M8/KOI7IqhGRkOF+f01hUiPPnt4xaVLAQgiN159j6yXFuuWqmPAJJhh8tkSSwaRPW
      ObOxr1o1aou/K5Hmzc+OkkwrPLl+BU6bWSrBkuFFjXbR+fQzOK+9BtviRaMyBiEEVfVtvL67
      ip+tnMXlM0t6fid1AMmwobS30/ncn/HefjvmivJRGUNXIsVfP64irWj84+3LcTmsF/xeZoRJ
      hoV0YxPRLVvIu3sjptLMHVxDhRCCo/VtvP35CW5aOp1FM4oH5wkeKqQjbHwjhCBVW0vk9a34
      HnwQY75/xMeQSCm8uvMIybTKb3+5FJe970SaERcAWR59/CKEIHHgANGdu/A++ghGj2fE+z9a
      38bWT45x84qZLP7eWb8vpA4gGRKEEHTt2k3yZDX+3/0GbYR3+q54itd3HyOZVrrP+v289b+P
      FADJoBFCENm2DTUYwvfQg+gMBrQRCm04/9Z/89Pj3LRsOktmZadvSEeYZFAIRSH02uvoHfYB
      1+ccKLFkmtd2HSOtaPzhjhXYrdmHVUg/gGTAiFSawKZNmGfMwPGjq0fMwtdt12/nrc9PcNOy
      6Vw+s2Ts1AaVnuDxgZZI0PnU09hXDL4+ZzYkUwqv7jxKVyLF79Ytxf0Du362SB1AkjVKZyeB
      5/6M++e3YJkx+PqcmSCE4Njpdl7ffYyfLJ/OoulFQ7LjZCwAQmiEwxGcTgehUASHw47OYAQ1
      jcFkwaDPbDDSDzC2STc1E3zhBbwbN2LKIoNrMMSTaV7bVUUsmeYfbl+Gy24Z+dKISjJGoKOV
      pjNpdE4XeaFO2vUWEi11VM5ditfZXbgokyNOtsegXGp/vm0ujWmg7bP9TKr+NMEtfyXv/vsw
      FhRc8vNDMYfjZ9p5bVcVNy6bzhXfWXi+326wfWS+AwA6k5PJUyzU1Z6m02jH4FTQm51At3Kr
      adolJVNRlKykN1ulebjbn/9MNn/4XJvDQIQ4dugwiZ07yXv0EXQO+yW/w8HOIZFS+OvHVSQV
      jd/fthS7xXRBn5qmZX2a6G1MGQuApihEw0GcjmKsLg9lxcWomoIoNGI1GzNOis+kzffp7Xbv
      0WwvhECn02Vlzs21OWSbFN/12eekDh4k/zdPoLdmpnQOZg7n7fo3Lp3Wp4VnIEnxg7op3ur0
      Mm+eFwC/z5dxpz9EBsONHYQQRD/8CKW5Gc+vHsx48Q+UREphy8dHiScVfvvLpbgdQ18M94fI
      YDhJrwhVJfz2Oz31OYc7huv4mQ7e+PQENy2fzpJB2PWzRTrCJBch0mkCL76EadIknNdfN6yL
      8byFJxhN9Fh4RhLpCJNcgJZIEHjuL1gXL8K+fNmwLX4hBMfPtPPqzqPdFp6ZxVkXAxsKpCNM
      0oMaCtH5zLO41q7FumD+sPWTSCm8vruKcFeSP9yxArfDklt1gYTQaDxTj9Hupbhg4Apvb0gd
      IDfpvoBuM547bsc8dWgqv/XGiTPd3twbrqjkitml6EfZKNK7AGgxDn57ggVXXD7S45GMAqnT
      Zwi+8gq+++/HWFQ4LH0kUwpbPz1OIBLn8V9cidc5vBalTOlVAHQ6M+lYG41tQaaUFQ1ph1IJ
      zi0Sx44T+ds2fA8/jNGXNyx9nDzbwWu7qlh9eQUbrpuXU6bwPnaAJDbPJGKBNmDWCA9JMlLE
      9u4ltvdr/I//Gr3djpZIINLpIbuJMZlWeH33MQKRBI/feiVeV2689b9PrwLQ1h4k3HaawrlD
      H+aaS9I/YRGC6I6dKGfO9NTnVNraiGx7D53NhmXmDGyLBl7DRwjBybMdbP30BGuuqGTpnLKc
      /d57FQCLUaNsxmIGkGBzSaQSPLoITSPy1tuIVIq8B+7vqfcZP/AtzrVrMObnE/rrawMWgPMW
      nmA0wW/XLcUzyHj94aZXAVBVQaC9iRkLFg55h1IHGD2EohB85VX0Bfm4f37LBcVubUsuJ/Lu
      39CZzVgXLBjQ80+c7eC1XUdZc8U0Fk8vwmTKfSt7ryPM8+dx+mQ9Fm8eMyvKhrRD6QgbHbRE
      gsDzm7DOn49t+TL4wZHE6PfjvXMDQlHQ2+1ZPTuRUnjjOwvPb36xFI/TOmp2/WzpRQAE0S6N
      G35yFWmTd+RHJBlytK4uOp56Bue1P8K2eHGfu7DObEaX5YXU1Q0dvLLjCKsXV7B+9Tz0GSZG
      5Qq9CkBLQx2f7P4Kf+V85s0YWqfIaLi7JypCCBIHDxHftx/v+jswlV66UFSmNLaFeevzE1SW
      5vHbdctyxq6fLb2sRj0z5swnEkkRSAz9cUVRFCyWkQ14mogIIej69DOSR6vI+9UD6LN8s/dF
      WlHZ/nUNx8+0c8/ahRTmOYbkuaNFH69jQVc0Sn5p+YgORjI0CCGIvv8BSns7vod/NWQ3sTR3
      RNj0wSEWzyjm97ctx2gY+xa9PmKB0gSCUZraDlBRPhmP3YKSjFFTd4bi0lKam1ooLfSRMtpQ
      owHc+SXYzJllSMnCWMOLUBRCb7yJzmTCu/GuISlUpaga2746xYmzHTxw0yIKvPactetnS5+h
      EG6XlbKS2Xi+i8/WG834vC4azjYwqbiAhrMt4HUTP3eWSlcBZgMZXZSdTqez0gNy8ZLpXL0o
      WygK4RdfwjhlCo5rr0HVNOhF4c3mouzG9giv7qxifkU+v1u3FINel9H4hnvOw3pRtkBDUTTS
      qVTPz7oCrZyoa2JSsY9TdWfJc7pJpyMYHd3lr4crJxhy65LpXL0oW6+qdD79DPYrr8S+fFm/
      bTPJCVZVjff2nOL4mXbuvXEh+W5rTn0PmeYEB6MJ3vz0OAaDjl+smoXFcsmcYJUd2z4gYXBx
      /ZK/O0Sc/lKu8neXpZhanvE4JSOAFgwSeH4T7p/9FPPMmYN+XmNbmM3bD7FkZgl/WL8CvU43
      Zuz6P+SDvTXcevVs4sk0Hx84zc1XXRjb1qsZ1GSy0NUV4tDxWhbNmQYMXQyPDIUYWtItLQSf
      34z3rjsxT540uGf1WHg6eOAniyjKcw7RKEePAq+dI3XniCXSFPkutljpxBC6ZkOhEJ5LXIqQ
      SCSwZlFdINdKigzkCDQcYxJCkG5oIPjyK7g3bsSaRZW2Hx6BhBC0dEZ5/v2DLJ5ZwvWXV1xk
      4cm17yHTI5CmCQ6easFkNDBrig/TQMuiDBXyhpihIXnsGJG/bcP/2K8RNtuAn6OoGtu/ruFQ
      TSsP/GQxRWPcrv9D9Hpdz00xvR3jpFt2jCGEIPbll8T3H8D/myfQ22wDPp83toV5eccR5lcU
      8k8bVmIYB3b9bJECMIY4X6gq3dDQHcdvHli8uqYJtn9dw9H6NjauuYzS/KFJgBmLyBtixghC
      1Qi//TZCUbrj+AdolGhqj7B5+yEuqyzkyQ0rRz0pfbSRhbHGACKdJvjyKxiLinCuuWFAiz+t
      qHy0v5ajdW3cs2YBxX7nhF/8IAtj5TxaKkXgmWexLlqEfcXyrBd/t4Wni83bD3JZZRH/cPty
      xljE8rAidYAcRg2H6Xz2OZw3XI9tAFlaiqrx4b5aDte0cu+NCyn2/b2UvaQbWRw3R1HOnSPw
      /GY8t/0Sc0VFVp8VQtDUHuHlHUeYV1HIkxtWYJB/916RO0AOkm5sJPLyq+Tdfy+m4uKsPque
      f+vXnmPjmgUT2sKTCVIJzjGSJ04QeeddfA8/hNGfXVnKpvYIL2w/xPzKQp5cv2LMpSeOBnIH
      yBGEEMT3f0Psyy/xPvIwRrc748+qmsaOvac4WNPKxrWXUSbf+hkz4gIwXhIphhIhBF27dpM8
      WY3/0UdQszivt3RG2fT+QeZXFvKHO1aMiyytkUQqwaOM0DTC77yLiMXwPfRgd62eDEIbVFXj
      o/11fHuqmbuun8/kIlnBYyBIHWAUEYpC6K+vYfB6cd5yc8a7Y3NHhJc+OszsKQX8ccNKhPyb
      DhjpCBsltGSS4KbNWGbNwn71qowWv6pp7Nxfx4HqFjauWUBZQbeeoEgBGDAZC0A6GeNUfRMV
      hR6qGs5R5rHTZXaR6migtGIebvswFBIdp2ixGJ3PPodj5UpsSzK7g6GlM8oL2w8xe0o+f9yw
      Ulp4hoiMBcBkseN22lAAo1BJJDSSIko8nkBVuy/IziQpHnqPy+6L8ZYUr3Z2EvrL8zhvuRnT
      9Om9/i0uaK8Jduyv40hdGxuum0tpvgtNUy/IdR/IHCC742iufQ/DmhTfG6l4hOamJigrw6DX
      Y7bbMemT2MsqMBv1GSfFZ1sVAsZPUny6oZHwSy+Rd/fdl6zSZjQaaemMsvmDQ8yrKOAP6/u3
      8AznRdkD6WO42w/kouze+si4R7PNxRVXdt8XUFaaefrdD5moSnCyppbw1jfI+9WDGP3+ftuq
      mmDH3hq+PdXCPWsndrz+cCMdYcOMEILEoUPEd+3G9+gjGNz9L+bmjm5v7tzyQv4oY3iGHekI
      G0aEEMQ++4xE1TH8TzyOvp+aqKqqsfObOg6camH96rlMLR6e+7okFyIdYcNET33OtjY899/X
      7+Jv7Yyy+TsLz5PrV0i7/ggiq0IMA0JRCG19A73Fgvfujd0lCntB1bojNw+dujCGR9r1Rw6p
      AwwBaUVFEwKLyYhIpwlsfhFz+VQcq6/tPvL1sqBbvnvrzyu/tIVHMnxIARgkHaEYWz85htGg
      Z+m0Aoo+eAP7smXYly0FoCueYuc3dcycks/MSX40ofHRvjq+PdXC3TJyc9SRVSEGyRdHznLL
      qll4tRRH/8f/wvmru7DM+nv9yS27qrh+8VS+ONrYIwxzphZIC0+OIGOBBsnls0r47KN9LDz8
      GQUb78Q6e/YFv1dVDY/TiqoJ3vniJA/9dHFPDI9k9BnxV9B4c4QVRANcXbuXssceYvKiORf9
      fsmsEv7Tn3ZgNRv413uulos/x5hQOoAajhD98EN0ViuuH68d9NVBiaoqIu+9j//xxzC4LjzL
      a0KwfW8NB2ta+Ne7V8l4/RxlxHeA0fQDRLdvx3HtNZinVRL74suBP0gIur78iq6Pd+N/7NcX
      Lf6Wzij/9sqXaELw5PqVlPjHfpnx8cqE8gTrLBbUzk7U9nb0jgFWQRaCyIcfIVpb8T3yEDrT
      38PANU3w0f5aDlS3cPf34/WV8XXsG0+M+Ot4NB1hrptuJN3YhM5mw3b54qw/L1SV8FtvQzSK
      9757L1j8LZ1R/m3Ll6QVlT9uWCHP+mOECaUD6IxGnNdeM6DPilSa4CuvoHZ14fzx2p6fq6rG
      jm+67fob1yyg1O+aUPFOY51xKQAdoRhvf34Co9HAHdfOxWIe3DRFKkXH088gkkmsCxeSOHwE
      4gnCpVPZ9MFBZk/NlxUZxijj0hH2wd4abl89j2AkwY5v6vjJ8hkDfpYaDtP5zLM4b7ie1ImT
      2JdeSToaZdvL26ku7vzOmyuPO2OVcVkVIt9r51BNK4FInEmDOIt31+fchHvdLzmUslAtCqj4
      jxf4GD+LVq3gyaXT5Vt/jJNVUvzJ2kamFHmorm8k3+0kafeQajvDpOmX4XGYM3rOSHiCr19S
      waGaVnwuH7Om9J991Reps2cJvvwKvvvupVln5cyxJsyFBfyppoT/9uC10q4/TsgqKd7rthON
      J5g1rZzT9U3oTF0k0yqaJjJOildVddiT4g3AgoqCjD7f2++TJ07Q9d77eB58ALxeOmrPsfOb
      Wq6cXcbyuWUU5dnHfGI/yKR4yDIpvqWlhbKyUmrONDGppIiUFsc1uRKLyZBxUrzJZMqp5Orv
      txdCkDhwgPgXX5L/2GNoVisff1PHN9Ut3LF6Hu2hODevnInBYMi5m+JlUvzA+sgqKX7JkiUA
      FBf3X9FgLCKEoGv3J6Sqq/E9/BDtMYXN737FjEl+/nDHCkzGv9+pO17imTRNIBATOip1XCrB
      2SKEIPzW22ixGN4HH2TngXr2nWhi45oFTC7s/+Lvscq5QBfvfHESnU7HDVdUUl48MXWaceEH
      qG0KsKeqgfmVhczJUukVikLw1S0Y8vJIXX0d//O1Pcyc7OPJ9SswGcdX7sL3+ezwGdZdMxez
      ycA7n5+QAjBSDLWXNK2ofHygng3XzePNz45T6nfi92Q2LS2RJLxpM6ZZs9jrKGPf+wfH9Vv/
      +yyoLOKdL05iNumZPbVgtIczaoyLqhCaEKQUlbSiZXz1pxaL0fnUM0TmLWRrs5EZkxX+uGHl
      hLHrz5jko9jnRNUEPrdttIczaowJHUAIQTiWxGE1X7RATUYDP1sxg53f1HH1ZVNw2S/tj1A6
      O2n7j6c4UL6IQ6167vnxfErzJ14Mj8dpHe0hjDpjIiVy+9c1hKJJIvEUd69dgMV04bBL/C7W
      XTMXuHTh3dTZBk79v2d5t3ABs6dW8Psl5disfdfskYxvxsR+f/ZcmDuum8fMyX7qm4MDfk6i
      +hTv/J8XeWPKUu6863p+tngy6c8+JVVXD+MsV1mSGWNCB5hS5OHVnUeIxtMsm1OW9eeFEDQd
      q+H5LZ8w/+af88/LZ2AyGgi8+BLWlSuIff01eocdY2Fh1s+WjG3GhBl0zRWVRGIp7FbTBTqA
      SKWI7v4EvcWCfdVV6HoRLlXV+HhfDV8fOc09j6+70MKjKBiLilD9frSu2JCPu+fyu9Onsc2d
      i+3KKyacnpHrjAklWKfT4XZcfE6PfPgRltmz0MIRYl9+ieOqqwBQgyEi771H0OpiS9jBdI+J
      f7r/uosUaMfq1US2voF5Uhmm8qkDm1A/qIEAWjiM5+6NRP/6GtaFl6Hrp0aoZOQZEztAn2ga
      OrMZncWMCId7fhz68EP2Fc/m8x37WD/NwZxb1ve6O5inTMa9YX3WMSuZonc4UINBkkeOIhRl
      0FUoJEPPiCvBQ3EEEKpKsroa25LLSRw6TLqxCcdVKwHoDMd5pgGatmzlYUMTFYvm9Lr4RwK9
      xYL7F7ci0mk8t63rvgJVklPkvBIc6koCKfwee8/PItve6w5dqK/H9eO1GAsKEELw8YE6dr/z
      KT9r/pZJeTa8627HsmD+EM8gOwxuN9bFi9DLt39OktM6wImz7fzlvW8xGQwsnVNGgdfO5TNL
      UDs7cf30J+gdDtJNTQRNDjZtP8gUi+DBc/sp/N1jpGprMZYUS6VT0i8jfjbIxhG2p6qRh3+6
      mHtvXMjeY41YzUbe+PQ49mXLCG5+gUT1Kb5M2nj63f38fGYe15z4HMeiy0jX16MGgxjy5C0r
      kv7J6X35ilmlPLvtWxRVsHL+ZBZUFvH18SYss+cRLZnMX94/SGVS4/fLS+na+ga2ZUtRE0ms
      8+ZiLC6WSqfkkuhElrEJQk3T0tqOx+tGb7QglCQmiw2jQU8oFMLj6T+SMpFIYLVmFoMihOBc
      IIqqwVdVDXSG49ywpJK65gBfVjVw79qF5Lc3EHl/O87rVqM0N2OcM5vknr1419+RUR+Kogz7
      NanZ9jHc7QeSEZZrcxhIRlhvfWT9ioy0tRJKCYznWjmnM5NoradyzpV4nd1BaJc642ualpUe
      4HNZMRgM3LpqFp2RBJs/OEh5sZc/rl9Bev9+ogcO4HvkIZKnTmHw+zH4fGipVEZ9CAHxZBpH
      lop5tllhudgestPHcnEO2eYE99ZH1gJgsNvRdTTQppoxuFLoza6eh2dyg7qqqv22qapvo74l
      yOrFFdgsxu8GLfjk4Gm+ONrAPWsvY1KBi+iHH6G2tuJ94H4wmbDMm0ds124S7/4N1403XnIc
      Qghe2XkUIQQuu4WbV87MaP4DuSk+F9tnSy7O4Xxi/GD6yFoArDY7BquLqaUlqKoCxQbMJhN6
      vR6dTnfJo4Fe332rvBCCL440UNccYNWCKZSXeKlrDlDdGGDpnDJe/+Q49924kPZgjBd3HGFy
      oYd/2bgKA4Lwm28hFIW8e+/5+x/AYMC15oaMt9KWzigep42bllby8s4q0qrAmkEFuYEcgYQQ
      OdV+IEegXJsDkPURqLc+srYCGUxWpk+rwGqz4nA6cdhsPQnjmXB+wbYGumgNRFl3zRw+3FcD
      QCwUxZ2KkWc1kFZUPjt0hj+9+w23rprN7dfOxaCpBF94Eb3Lhef22wZl4sz32OkIxXjni2os
      JgMWk3RSTURGzRFmMRmIxJLdji6dDi2ZpPirj2mcupD/eHob7Y48PA4L/7xhBVaLGS2RIPDc
      n7EuXoxjxfJBj8No0HP32stoD0Yp9E28ZBhJN6N2T7DXaWPVZVPZe6yRO1bPRYtEMPh82Hxe
      ulIqj264nPJSH4qioIa+q8+59gZsCxZk3FdVfRv7TjQxr6KQJTMvLuViNOjJ99gzTqOUjD9G
      LyFGUykLtXDTNA8eu4Ww2cGz1THqtu/i99dUMCXPhkinUTs66PjTU7hv/XlWiz+ZUthzrJH1
      183jxJl2QtHEME5GMlYZNU9R5P0PMPr9xA8d4ZC/gs+a49x55xoqS/OIHznKjv/+f5lqSOGM
      dJL/mycwl5df9AyhaaQbGjAWFKK3WuB7b3K9XkdaUQlFk8STyrgucSIZOCO+A5zXwtX2dhJz
      5vN8qoAX95ym0GvncG0rQgjO7P6CksXzcYY6OJM/pc/7vMJvvkXqVA3Bl15CS1z4hjcZDfzy
      R3P4qqqBG5dNx2419foMycRmVK5J1TTBt4Uz+PentrE00cLqK6bx8M1LUFRBIJKgIN+L7c0t
      xIwWQjPmIfoonKpFIjhWX4t52jSU1taLfp/vsXPLVbPkbeySPhnxI1BHKMbWbYcp8bv5z39Y
      h04H1dsPsX1vDaFoHMPXX6FGI9j/y39FPV7FFZE2XDfd2OuzLHNmE9y0Gb3DgYBUpq4AAAdV
      SURBVOnqVSM8E8l4IOtYoP7oLxZI0wSfHznDrgN13L12IRUlf4/UPH+l0Y3hGqxqCu+dG3qS
      WHItBkXGAuVG+1GLBRoIneE4L3x4iKI8B/+w7kpczu5Uwc5n/4yWSLCr4gqWtp7icFrPj37/
      4KhlcEkmHsMqAJoQ7K1q5KP9tdyxuruuTzweJ1VfT+dTT6MzmTBNmcKyj1/Hf89GDqW8JBUV
      q0UqrJKRYdgEIBhN8OKHh/G5rPzTnSuxmIwIAftONPP5zgPMd05iZYGJ2BdfEiyfxc6ok7nl
      eXgcslyfZOQYcgHQNMHeY43s+KaOO1bPZXqZryfM4JuTTez89iwryvN456tO5lbvwV5cwPxf
      38fC/HwisRSqqmGYIAVqJaPPkApAqCvJCzv34XNZ+eOGFRfV8GwPxVBVlWMnG7m97RAfTFsO
      /nzKa0Mo1Z3EEwqxZJp7fnzZhL61RDJyDOkqO90SZO2Vldx5w8UFbAGuLrOz4sAOVh/dTens
      SqrCGnffuIi0ovbU/yzxO2lqjwzlsCSSPsl6B4hHApysbaDY7yFpcZEONFM0eQZOm4nLphX1
      aQYV6TShf//fLC6w00gex5zFFKYVTpxspDVtJd9t56+7qojGU9ywpHLQE5NIMiFrAQiGI8wo
      n0R9fRN4BYlwEJ/Sf1qaEILYV3tINzbiefIfmfzeBxQf/pQF+QW0FK/iF+VF+N02Ql1JnDaz
      1AEkI0bWAuB22DlRd4ZiXz5pXRxzwZR+b1URmkZk23uogQD+Jx6n86mnMZeWUfAv/4yxpITy
      79XK9MoLGyQjTI8nOJlMDvoW92g0itPpvPBnO3aiRSK4f34L6HQkolGsdjtkqOSqqpqV13W4
      25/PK83GA5mLc4DsylTm2hzO5wMPdg49O8BQZUT98DmuG66/4N9muz2rGpnZTnK423//c7ky
      poHM4XxVhVwZ00DbD7aPHgEwmy99t9alSCQSWC5R/lvTtKzenrnWfiA7QC7OAbIT4vE6h5wv
      jptr7Qfyts3FOWTLeJ3DiAlAS0M9DS0hJk8qIp1O4i+ehK2fSgypeISTp+pwWFyYPWYsVi/5
      Hkef7YXQOLjnC4onz0A1qdhsefhcfV//KdQkhw4fZ1J5JYlwG5rJxeSS/u/LrTp8AMwefG4r
      8WSa8vKp9PU1hAPttIUTmLU45yIpygr9pBJxyqaWY+jly0vFI1SfaaWixMep+noszkLcZoEr
      vxhnL8k8mqpwuOoYl82fT83xb3F4/CTSZuwOG0X5vZuim+qPYvDOINBwDE9hGSgJkoqe8iml
      vbYPtjURTBrQYh2EklBS4COZiDN5anmvedRd4U5qa2uxuvKJhIN48wuxkSaveBLWXr5rJZXg
      VHU1FqeHeCSA1enCoLdid3so8Pb2XWvUVVeT1Fnw2dIEYmZcDhNpTc/UScW9zqG18TSNHV34
      bHqwebEaNBLJNFOnTumOJu31U8NAUtMxrdBDRyREayje7+IHMJosuN0ePA4T1fVNeF32ftuf
      O1tDRzhGMBTk1NnWS8YUqbEQMVVHMBik+uRJvJkU0hUCVVM5d6YandXT5+IHcHv9WI06hN5M
      gdtJMNBCV1rf6+IHMNtceJ02zFYbHk8BNn2SxrYQjj4CA/UGI/l+H7FAK2dbOwkGgpysrsfr
      7Tv5p7CoEKEpRCIxgsEg9dUnsXv6nrfXn4/JoOsOAVc1OtsbSarmPosIWCxW3HlFmA06KitK
      CLW10xqMY+kjHdVgNOJweSgqLMDp9OJzmamubcDn6eu71uN0OSnMc3C85gyhQIBTx0/g9vn7
      nIPN4aSkqJBwJEI4GKS1+Qyawdazg4xYPkC48xynW0OUlxQgUDHYPDgsfW9AXcFznDrbRkl+
      ITaPlVQK/P18uZqmEulsR9NZMNoNpNN6fO6+dwyESs3Jk9jzirBbdCSTKoWF+f3Or+7UcTST
      i3yPg2QqRUFBIX3txIG2Zuoa2igt8hGMKRTne9GUFK68AkyGiz+UiIaoOlmDz+shEk+RX1CI
      26pHNdpx2y/WqzQ1xZHDR8gvmUqe00gykUIY7ShKmgK/t7cJc/pUFV24cRmTqAY7XreTVDJB
      YR+XA7Y3n+VMa5hCn41IAkoKfSjpFHn+Agz6i+fQ2dxAUyBMYb6fc+1BikuKsOpUdH1818mu
      ECdqTuPzuGkPd1FanI/N6iCR1ijwuXsZkcLRg0dw5ZdQWuSisyOG2WollYxTWNj77l1XfYyk
      zobPYSAY0yj0e0ilUhQUFHQfZ0dKACSSXES6XCUTGikAkgmNFIAcRGgK+/d+QUNr54U/F4J0
      WuHcuYsrYEgGhrxCJQcRSpqoaqBt/x6i5aWk9U4MiXYUYWTPkVpKfQb8RZW4zQr2/KmUl/Zv
      vpX0jRSAHKXzXDMWq5M9n+2mePZimg7vx1M2l+J8Lw6HkVQ8QFt7iFRIJwVgEEgrUA4ihCAY
      6MTm9ICSIC30CDWF2WwnleoON9HpIJVMoDfZsFsHH8YyUZECIJnQ/H9kOCPwmSM4cQAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Death Toll' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAATP0lEQVR4nO3dW5Ac1X3H8W93z31md/YuiV3tasVFAhkkRDAB7AAC2xWX7aRsktgpJ2Xn
      MXl2JalU3pI8pmL7KamkcnmJnVQl8aXKGDCWhE1xs8AGhG5ICFa7c92d+0xfTx4GyxhG0szu
      zPb07P9TpUI1Gs38S/Rvu/ucf5+jKaUUQuxAmqZput9FCOEnCYDY0SQAYkeTAIgdTQIgdrRQ
      t28sr+fYaLikQh6WHmMiFcdxHMbHxwdZnxAD1fUZIBpP4pgtCsUC68V1zr7+KjXTG2RtQgxc
      1wG4eO5NHKVhOy6WZTEzt4tGrYpMIogg07qdCFOehwI0TfvAJ2hoHf+GEMNN0zSt63sATdfl
      QBcjp+sACBEkbrVK89Qp9GSS+OHDaOFwx/dJAMTIUY5D8RvfpPXa66BppB//AukvfL7je2Ue
      QIwEpRRuqUTrzTNUn3iC1uk3f/kHNE+duubfkzOAGErWO+9Q/q//BqVIP/4FIsvLQPtA92o1
      3EIR+8oK9rsr2CtXcEsl9LEUoT17CC8sELl5P9a586BpxO46fM3v6XoUSIjtohyH3N/8LeaZ
      swCEF+ZJPPAA9soVnEIePRrFmJkhvHcv4fmbCC8soKdS6NHo1c9wy2UaL76EnkyS+I170CKR
      D31PT6NAQmwHpRRuuYydyV59za3WCO3aReK++zCmJtHj8Rt+jpFOM/aJx274PjkDiKGgPA/r
      rYvUnv4RTiZDeHEv9Z8+B8DEF/+A1Cce+/Ac1BZpmqZJAISvvHqdxgsvUj9xEmNultQjjxA9
      eAA0Da9SAaXQ0+m+H/wgARA+UUphX75M7fgJ7LcvE7v7CMkHHyA0M7OtdfQUgPzau1wp1klH
      IZyaJoSF6cDS3vlB1ykCSDkOrddex61UiB+9Gz2VQjWbNE+don7yJ2ixGKlHjxG7/WDHG9Tt
      0FMAKqUiDQtyK2+hxycxS6vsue0oN02PDbpOEUCV732f0n9+CzyPyK23Ej14APON08TvOUri
      Yw8S3rXL7xJ7GwUqrRcxVZRde/ZQt3UW5+/GskwUY9IjNKKUZeGZJnoyiabfeM5UeR5uuYxb
      KFI/fgK8dru8deECqUePMfH7v3fNlgS/dB2Axf23DbIOMQDKdVGmiRaLdXUAv5+dyVD8+jdx
      8jkSDzzA5B//EVoohLJt3GoVd30dZy2Dncng5HJ4pdJ7YUkRmpkmtDCPvboKShG55WaSD9w/
      dAc/yDDoyHJrNdb/+V+wzp4lduedTP7JV9FjsQ+9TykFrotynPZ/LQuv0aD8f9+h8exP2m/S
      deJ3H8EzLZRlYaRSGDPThHbtIrR7N+Fdc+jpNHoigWYY7c+1bRovv4xXrpC476MYExMwgJGc
      rZCJsCFnvbtC7cknCS8skHr0GFqo8/8upRS875fXbFL/8XGaz78AQP3ks2jhMPrkJF6thmo2
      8RoNvHoDZZpg6O3PNgz0SAQtkcDJ5n71BYZB6tFHidx2a/tyqIsDWQuHSd5/f1/+HQZJAjCk
      PNOk+PVvYK+stMfE6zUi+/bh1mp4lSpupYKq13ErFbxa/b3rbYXyFHo8jjJbv/Z5eipFdP8y
      ejKFloijxxPoiThaPN7xgHarVTb+9d+wV66QeuRhYkcO93wZFQRyCTRA1uV3KH/72yjPI/34
      40RvufnX/lwphWo2cUvl9jV1Pt/+lcvhFouYZ89dvZGM3nYb0bvuxEil0FMpjIk0eiKJPj6G
      nkqhGSHQNdB1NE3DazbZ+Pf/wDz9JrEjR5j88h/2PNyolGp//3ufOWpkImyA2g1df4d55gwA
      4YUFxj77mfaBnsvhlst41RpaOIwxkcaYmiI0N0dodgZjZgYjnab0rW+3Z0jT48x+7WtElvf1
      VoPnoRwHLRQayZ/eWyX3AAOilMJrNHCy72voKpfxKhXCC/PEjxxBT6cxxlLXHRmZ+upXSD16
      DGNigtDUVM91aLru2yRTUMgZoM+sy5ep/egZrEuXCC8s0HzxJZRSA2voEpsnl0B94plme4r/
      +Am0UIjUpz5F7NAdoOt4tVq7oWtsTA7+ISMB2AKlFE42S/34CVqnTxM7dIjUww9hzM3JgR4Q
      PQXAdWxsVxGNhHEcB8MwUEphvDfxMYqUUrgbG6hWi9CuXWiGgbJtWmfOUHvyaZRtkfz4x4nf
      c7TjJJMYbj0FYD2f4Z3MOotz41zO1ZlK6nihJMuLNw26Tt80fnaK9X/8J1SzSeJjDxLavZvW
      qVcILy2SfPghovv3+12i2IKeRoE8pVhaXODyhTPUTA3ddJle6H1kIkhqP/xh+6EMoH78BBNf
      +iKzf/419ETC58pEv3QdAMcy2ahaHL7nXpr1Jpqu47pOe7nEARboJ2N29le/n5wk9egxOfhH
      jNwEX4ezsUH2r/6ayP5lxj79aaK3H5Qb3BEiE2E34BbXiR66g5k/+1O/SxEDIvPj11F76ilS
      Dz/kdxligCQA1+CWyjj5PNEDB/0uRQyQBOAaGs8/T+K++9BCozvPISQAHSnXpf7T50jc/5t+
      lyIGTALQgXnmDJHFvRiyAeDIkwB8gFKK6pNPkfrkJ/0uRWwDCcAHuMV1vGqN8OJev0sR20AC
      8AH148dJPfyQTHjtEF0HoFYusrKWp1TMkslv0Gq1qNfrg6xt23mmSfOVV4h/9F6/SxHbpOsA
      6KEozXqFcDROrVLi3OlfUKqZg6xt27VeeZXYoUPS2ryDdB2A1XffJhJLcfniWyTGxhlPp2m1
      miOzUbZSivqJkyQfftjvUsQ26roXaGFpGduF2clb8TCIT9/CKPXR2SsrEA4R2rPb71LENuo6
      ALF4klG+MKj96BmSD8nN704jo0CA12hgX3qb+F13+l2K2GYSAKDx/AvE7zk6lKsXi8Ha8QFQ
      nkf95LMkHnzA71KED3Z8AKy3LmLMzmBsYuU1EXw7OgBKKWrPPEPqkUfk5neH2tEB8MoV7JUV
      Ynfc7ncpwic7OgD1Z58l+ZA88riT7dgAKNum8dLLJO77qN+lCB/t2AC0Xn+DyPI+jDHZ5nUn
      63omuJBZYb3hMR5R2HqcdCqGbdtMT08Psr6BqR8/wfjnf9fvMoTPuj4DpCeniRg6lqfh2U0u
      vPEqlhYdZG0DY6+t4bWahPfKQy87XdcBeOv8WUzbxWxWaVoeNy3tp1XdCGQ3aP3ks+2hT9k2
      aMfr+hLo4EeODLKObaNsm9bp04z/zuf8LkUMgR33I7DxwotEDxyQh14EsMMCoJSifvIkY489
      5ncpYkjsqADYKyto0SjG7IzfpYghsWMCoJSi9tTTpI4dk74fcdWOCYBXb2BdvEjs8F1+lyKG
      yI4JQOO559qL3crQp3ifHXE0KNel8fzzJH/r436XIobMSO8Q47VaVP7nfzHPX0CLxdBlsVvx
      ASMdgNpTT1P57vcA0GIxnNVVwvPzPlclhslIXwI5hcLV3yvLwq1UfaxGDKOuzwAbhSs03RRm
      ZQ1bjzOVTmBaDvM37RlkfVuSOvYIzZ+dwl1fJ370KJH9y36XJIZMD9ukNrlypUmttIKlx7A2
      Vpk/eC+7p5KDrXALlFK0Xn2V5ksvM/nVr8iyJ+LXaJqmdX0JlF/Lki/kCEejRCNRlg/ehTKr
      Q90NqmkabrlMeGlJDn7RUdeXQLN79jE7vFc71+RkskQPyk6PorORvgkGcLI5Qrvm/C5DDKmR
      D4BbKmFMTPhdhhhSIx0ApRTKddAiEb9LEUNqpAPg1evosTiaIZtdi85GOgBONkdIev/FdYx2
      AHI5QrtlxxdxbaMdgLU1CYC4rtEOQDZHaG7W7zLEEBvZACilcPJ5QnMyByCubWQDgOuibAtN
      lj8R19FDN+i7lFsJnFqGWHoOzaljeSGWlxYGWd+mKctCi8rBL66v6zPA5MwMYU2jXq9RKBbI
      rq4QSQzvysru+gahyUlZAUJcV9dngPxannLFYn7vIg1bZ2rfXmzbRgHDeIg5uaz0AIkb6qEb
      dDFQ3aB2JitDoOKGRvYm2MlmCe3a5XcZYsiNbADcYhFjatLvMsSQG8kAKNfFLVekDVrc0GgG
      wDTRImHpAhU31DEAG1fe5omnfsCp1y5udz194Var6LL5nehCxwAk0+O4lkcyGcw9wNxcnrDc
      AIsudAiAx8qF84THpphIp7a/oj5wclnpARJd6RAARa3lMTUeo1gobX9FfWBncjIEKrrSIQAG
      jlUnlyuSnkpvf0V94BbyGDPB3L9YbK+O9wD79y/zzsW3WLmSv/qaY7VomTZKedTrDWzbxjTN
      bSu0F26liiErQYsudGyFSEzNcOTwIabfdwZoNEuUq2FiRp21dZO4bhIZn2VpfrguNZRlgeug
      xeN+lyICoOMZoF7Mc/7tK6zn16++lkgkcW2LtUyecrmE49iANnRLI7rlMvrYmHSBiq50PAOs
      V8qs53Is/vbi1dcqpTqa4fGRu49ityw0XcN13W0rtFvu+jrG1JTfZYiA6HAGqHNppcGXv/Q5
      Lp69dPXVqdndLC3Oo6MRjUWJRCLE4/Gha4V28nkZARJd6xCACNOTUS5ezrG4FKD+5/c4mSxh
      aYMWXep4D9Bs1KlWqziet931bJm9skJoiDftEMOlQwDC3HnHLaytrlKp1re/oi1yazUZAhVd
      63gG0PQQS8t7GbohnhtQrouybFkJQnStYwBee/lFshs19O43kBkKbqmMMZaSzbBF1zoeKYfv
      vZexSJhoPFjLiruFPMa0tECI7nVshvMU6IaObTvbX9EWyGK4olcdAlDlmR//nKnJKaYC1g7t
      ZHOEd8scgOhex27Qmw8c4MCBA0xPDO8WqJ3Y2SyGPAcgetChFSLJobv2f+jVjcIVTDWG1ypS
      tw2mJ1JYls3uIfmJq5TCLRYJyT2A6EEPSyNO4VoO6fQkiUSMS2d+AdEhukRSClxX9gMTPelh
      acQM2VyL0nqLeHqOpdsO0aqXUZPJoegHUqYJoRDIEKjoQQ9LIy4P9dKITiZLaHZW2qBFT0bm
      x6UshSg2Y3QCIG3QYhNGJwAZWQ5d9G50ApBr3wMI0YuRCIByXbxmU5ZDFD0bjQCYJlosJiNA
      omcjEQC3XMYYD+YiXsJfIxEAZ21NNsQWmzIaAcjnCQ1JT5IIltEIQFaeAxCb08NG2SvUrARW
      dQ1LTzCZimDasLQ4P8j6uuIUioRkMSyxCT10g06jKwjHx0hEdFbfvkA44f/qC0op3FIJXfYD
      E5vQdQDyazk2SkVCukKPxLnl0N1EMH1fOEK1WmiGgS5t0GITeugGXRrKblCvWkVP+38mEsEU
      +Jtgp1CQ63+xacEPQEbaoMXmBT8A2awMgYpNC34ACgWZBRabFvgAuKUyekq6QMXmBDoAynFQ
      lomeTPhdigioQAegvRtkWhbDFZsW6CNH9gMTWxXoADiZjNwAiy3pOQCW2cK0bFzXxXH8XT3a
      yedkDkBsSdetEL904fxZXD3GeFTDi4yxvNe//ggnmyN+9B7fvl8EX49nAIWuaSilKJc2CIX9
      bUBzCkWMabkHEJvX8xlgbnYWS48xkdqH4zgo8G1tUNVqoUejPn27GAU9BkBjam44WkK9ZhMt
      HG4viCvEJgV2FKi9FOKcLIUitiS4AcjlCcluMGKLghuArCyFKLYuuAHI5WQpFLFlgQyAUqo9
      CyzPAYgtCmQAUAqv0URPSBeo2JpABkA5Dpqhy35gYssCeQR5GyX0dFqGQMWWBTIAdjZDeM9w
      TMiJYOt5GrVeXqfUUkyNJ3Fdh1Rq+/cKdvJ5GQIVfdHzGeDc+XPousa50z+nXLcGUdMNOWsZ
      aYMWfdFzAFKpMbJra0xMTNJqNX1ZGtGVlSBEn/R8CbR88624SiNkGCjlDaKm61JK4WxsyKOQ
      oi96DkAoHHnfX9r+e2hlmmiajiZdoKIPAjcK5NXr6Mmk32WIERG4ALiFIsbMtN9liBERuADY
      mQxh6QESfRK4AEgXqOinwAXAzRcwZBJM9EnwAlAqYch+YKJPAhUA5Th4rZaMAom+CVQAvGoN
      PZmQLlDRN4EKgFsuY0xO+l2GGCE9B8C1Gly6vEqlUqFQKAyipmtqL4YrK0GI/ul5acTV1Sye
      Y3HhjVdw9NhgqroGOyNdoKK/eguA8rAsk3xxg5v23UKrWtrWblA3X5AAiL7qraNMM7j5toPc
      PKBibsRZX5c9gUVfBeYmWCnVboRLxP0uRYyQ4ASg2USLhNEi/i7JLkZLYALgyuWPGIDABMAp
      FDBmZvwuQ4yYwATAXl2TESDRd4EJgJuXB+FF/wUmAE4uKw/CiL4LTAC8Wh1NFsMVfRaIACjX
      Rblue08wIfooEAFwSyWMyQk0WQ1a9FnPi+usvnuJiqkxM5HENB3m5we/SK2TycoIkBiI3pdG
      HBtnIj3G5XNvoMfHB1HThzjZrLRBi4HoOQCZ1Ss0mi32H7wLrNpAu0GV41B94odUvv99nEIB
      5boD/DaxE2lKKT/Wt+1K4+WXKfz9P4Dnga4z95d/QezOj/hdlhgRmqZpQ31X6RYK7YMfwPNw
      itv7BJoYfUMbALdSwTx3vr0EimEQ2b+f+JEjfpclRszQXQIppWj+7BSV73yX8c9+htgdt+MU
      1wnNzaLHYiArQog+0TRN+3+qzTrA1xlCngAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Infected Toll' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Mainland Time Series Map Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
