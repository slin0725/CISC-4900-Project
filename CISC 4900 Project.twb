<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0910.0334                               -->
<workbook original-version='18.1' source-build='2024.2.3 (20242.24.0910.0334)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' inline='true' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='united_states_governors_1775_2020' name='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/united_states_governors_1775_2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us_states_covid19_daily_revised' name='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us_states_covid19_daily_revised.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us-airports' name='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us-airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19_state' name='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/COVID19_state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017' name='excel-direct.0nwqjag1pmirqe14ajkis19u24pf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
          <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Tested' ordinal='1' />
            <column datatype='integer' name='Infected' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='real' name='Pop Density' ordinal='5' />
            <column datatype='real' name='Gini' ordinal='6' />
            <column datatype='integer' name='ICU Beds' ordinal='7' />
            <column datatype='integer' name='Income' ordinal='8' />
            <column datatype='integer' name='GDP' ordinal='9' />
            <column datatype='real' name='Unemployment' ordinal='10' />
            <column datatype='real' name='Sex Ratio' ordinal='11' />
            <column datatype='real' name='Smoking Rate' ordinal='12' />
            <column datatype='real' name='Flu Deaths' ordinal='13' />
            <column datatype='real' name='Respiratory Deaths' ordinal='14' />
            <column datatype='integer' name='Physicians' ordinal='15' />
            <column datatype='integer' name='Hospitals' ordinal='16' />
            <column datatype='integer' name='Health Spending' ordinal='17' />
            <column datatype='real' name='Pollution' ordinal='18' />
            <column datatype='integer' name='Med-Large Airports' ordinal='19' />
            <column datatype='real' name='Temperature' ordinal='20' />
            <column datatype='real' name='Urban' ordinal='21' />
            <column datatype='real' name='Age 0-25' ordinal='22' />
            <column datatype='real' name='Age 26-54' ordinal='23' />
            <column datatype='real' name='Age 55+' ordinal='24' />
            <column datatype='date' name='School Closure Date' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
            <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Governor(6)' ordinal='1' />
              <column datatype='string' name='Party(6)' ordinal='2' />
              <column datatype='string' name='State Abbreviations' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
            <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
              <column datatype='date' name='Data As Of' ordinal='0' />
              <column datatype='date' name='Start Date' ordinal='1' />
              <column datatype='date' name='End Date' ordinal='2' />
              <column datatype='string' name='Group' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='integer' name='Month' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='Condition Group' ordinal='7' />
              <column datatype='string' name='Condition' ordinal='8' />
              <column datatype='string' name='ICD10_codes' ordinal='9' />
              <column datatype='string' name='Age Group' ordinal='10' />
              <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
              <column datatype='integer' name='Number of Mentions' ordinal='12' />
              <column datatype='string' name='Flag' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
            <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='6'>
              <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='positive' ordinal='2' />
              <column datatype='integer' name='probableCases' ordinal='3' />
              <column datatype='integer' name='negative' ordinal='4' />
              <column datatype='integer' name='pending' ordinal='5' />
              <column datatype='integer' name='totalTestResults' ordinal='6' />
              <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
              <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
              <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
              <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
              <column datatype='integer' name='recovered' ordinal='11' />
              <column datatype='integer' name='death' ordinal='12' />
              <column datatype='integer' name='hospitalized' ordinal='13' />
              <column datatype='integer' name='deathConfirmed' ordinal='14' />
              <column datatype='integer' name='deathProbable' ordinal='15' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='ident' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
              <column datatype='real' name='latitude_deg' ordinal='4' />
              <column datatype='real' name='longitude_deg' ordinal='5' />
              <column datatype='integer' name='elevation_ft' ordinal='6' />
              <column datatype='string' name='continent' ordinal='7' />
              <column datatype='string' name='country_name' ordinal='8' />
              <column datatype='string' name='iso_country' ordinal='9' />
              <column datatype='string' name='region_name' ordinal='10' />
              <column datatype='string' name='local_region' ordinal='11' />
              <column datatype='string' name='municipality' ordinal='12' />
              <column datatype='integer' name='scheduled_service' ordinal='13' />
              <column datatype='string' name='gps_code' ordinal='14' />
              <column datatype='string' name='iata_code' ordinal='15' />
              <column datatype='string' name='local_code' ordinal='16' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age 0-25]' value='[COVID19_state].[Age 0-25]' />
          <map key='[Age 26-54]' value='[COVID19_state].[Age 26-54]' />
          <map key='[Age 55+]' value='[COVID19_state].[Age 55+]' />
          <map key='[Age Group]' value='[Conditions_Contributing_to_COVI].[Age Group]' />
          <map key='[COVID-19 Deaths]' value='[Conditions_Contributing_to_COVI].[COVID-19 Deaths]' />
          <map key='[Condition Group]' value='[Conditions_Contributing_to_COVI].[Condition Group]' />
          <map key='[Condition]' value='[Conditions_Contributing_to_COVI].[Condition]' />
          <map key='[Data As Of]' value='[Conditions_Contributing_to_COVI].[Data As Of]' />
          <map key='[Deaths]' value='[COVID19_state].[Deaths]' />
          <map key='[End Date]' value='[Conditions_Contributing_to_COVI].[End Date]' />
          <map key='[Flag]' value='[Conditions_Contributing_to_COVI].[Flag]' />
          <map key='[Flu Deaths]' value='[COVID19_state].[Flu Deaths]' />
          <map key='[GDP]' value='[COVID19_state].[GDP]' />
          <map key='[Gini]' value='[COVID19_state].[Gini]' />
          <map key='[Governor(6)]' value='[united_states_governors_1775_20].[Governor(6)]' />
          <map key='[Group]' value='[Conditions_Contributing_to_COVI].[Group]' />
          <map key='[Health Spending]' value='[COVID19_state].[Health Spending]' />
          <map key='[Hospitals]' value='[COVID19_state].[Hospitals]' />
          <map key='[ICD10_codes]' value='[Conditions_Contributing_to_COVI].[ICD10_codes]' />
          <map key='[ICU Beds]' value='[COVID19_state].[ICU Beds]' />
          <map key='[Income]' value='[COVID19_state].[Income]' />
          <map key='[Infected]' value='[COVID19_state].[Infected]' />
          <map key='[Med-Large Airports]' value='[COVID19_state].[Med-Large Airports]' />
          <map key='[Month]' value='[Conditions_Contributing_to_COVI].[Month]' />
          <map key='[Number of Mentions]' value='[Conditions_Contributing_to_COVI].[Number of Mentions]' />
          <map key='[Party(6)]' value='[united_states_governors_1775_20].[Party(6)]' />
          <map key='[Physicians]' value='[COVID19_state].[Physicians]' />
          <map key='[Pollution]' value='[COVID19_state].[Pollution]' />
          <map key='[Pop Density]' value='[COVID19_state].[Pop Density]' />
          <map key='[Population]' value='[COVID19_state].[Population]' />
          <map key='[Respiratory Deaths]' value='[COVID19_state].[Respiratory Deaths]' />
          <map key='[School Closure Date]' value='[COVID19_state].[School Closure Date]' />
          <map key='[Sex Ratio]' value='[COVID19_state].[Sex Ratio]' />
          <map key='[Smoking Rate]' value='[COVID19_state].[Smoking Rate]' />
          <map key='[Start Date]' value='[Conditions_Contributing_to_COVI].[Start Date]' />
          <map key='[State (COVID19!state)]' value='[COVID19_state].[State]' />
          <map key='[State (Conditions!Contributing!to!COVI)]' value='[Conditions_Contributing_to_COVI].[State]' />
          <map key='[State Abbreviations]' value='[united_states_governors_1775_20].[State Abbreviations]' />
          <map key='[State]' value='[united_states_governors_1775_20].[State]' />
          <map key='[Temperature]' value='[COVID19_state].[Temperature]' />
          <map key='[Tested]' value='[COVID19_state].[Tested]' />
          <map key='[Unemployment]' value='[COVID19_state].[Unemployment]' />
          <map key='[Urban]' value='[COVID19_state].[Urban]' />
          <map key='[Year]' value='[Conditions_Contributing_to_COVI].[Year]' />
          <map key='[continent]' value='[us-airports].[continent]' />
          <map key='[country_name]' value='[us-airports].[country_name]' />
          <map key='[date]' value='[us_states_covid19_daily].[date]' />
          <map key='[deathConfirmed]' value='[us_states_covid19_daily].[deathConfirmed]' />
          <map key='[deathProbable]' value='[us_states_covid19_daily].[deathProbable]' />
          <map key='[death]' value='[us_states_covid19_daily].[death]' />
          <map key='[elevation_ft]' value='[us-airports].[elevation_ft]' />
          <map key='[gps_code]' value='[us-airports].[gps_code]' />
          <map key='[hospitalizedCumulative]' value='[us_states_covid19_daily].[hospitalizedCumulative]' />
          <map key='[hospitalizedCurrently]' value='[us_states_covid19_daily].[hospitalizedCurrently]' />
          <map key='[hospitalized]' value='[us_states_covid19_daily].[hospitalized]' />
          <map key='[iata_code]' value='[us-airports].[iata_code]' />
          <map key='[id]' value='[us-airports].[id]' />
          <map key='[ident]' value='[us-airports].[ident]' />
          <map key='[iso_country]' value='[us-airports].[iso_country]' />
          <map key='[latitude_deg]' value='[us-airports].[latitude_deg]' />
          <map key='[local_code]' value='[us-airports].[local_code]' />
          <map key='[local_region]' value='[us-airports].[local_region]' />
          <map key='[longitude_deg]' value='[us-airports].[longitude_deg]' />
          <map key='[municipality]' value='[us-airports].[municipality]' />
          <map key='[name]' value='[us-airports].[name]' />
          <map key='[negative]' value='[us_states_covid19_daily].[negative]' />
          <map key='[onVentilatorCumulative]' value='[us_states_covid19_daily].[onVentilatorCumulative]' />
          <map key='[onVentilatorCurrently]' value='[us_states_covid19_daily].[onVentilatorCurrently]' />
          <map key='[pending]' value='[us_states_covid19_daily].[pending]' />
          <map key='[positive]' value='[us_states_covid19_daily].[positive]' />
          <map key='[probableCases]' value='[us_states_covid19_daily].[probableCases]' />
          <map key='[recovered]' value='[us_states_covid19_daily].[recovered]' />
          <map key='[region_name]' value='[us-airports].[region_name]' />
          <map key='[scheduled_service]' value='[us-airports].[scheduled_service]' />
          <map key='[state]' value='[us_states_covid19_daily].[state]' />
          <map key='[totalTestResults]' value='[us_states_covid19_daily].[totalTestResults]' />
          <map key='[type]' value='[us-airports].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D51:no:A1:D51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N10001:no:A1:N10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P14304:no:A1:P14304:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Governor(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Governor(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Governor(6)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Party(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Party(6)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Abbreviations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Abbreviations]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State Abbreviations</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state)]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data As Of</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data As Of]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Data As Of</remote-alias>
            <ordinal>30</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>31</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[End Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>End Date</remote-alias>
            <ordinal>32</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Conditions!Contributing!to!COVI)]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition Group</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICD10_codes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICD10_codes]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>ICD10_codes</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COVID-19 Deaths]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>COVID-19 Deaths</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Mentions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Mentions]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Number of Mentions</remote-alias>
            <ordinal>42</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>44</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>probableCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[probableCases]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>probableCases</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalTestResults</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalTestResults]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>totalTestResults</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCurrently</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCumulative</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCurrently</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCumulative</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathConfirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathConfirmed]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathConfirmed</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathProbable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathProbable]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathProbable</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ident</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ident]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>ident</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>latitude_deg</remote-alias>
            <ordinal>64</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>longitude_deg</remote-alias>
            <ordinal>65</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation_ft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elevation_ft]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>elevation_ft</remote-alias>
            <ordinal>66</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_country]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iso_country</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>region_name</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_region]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_region</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>municipality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[municipality]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>municipality</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[scheduled_service]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>scheduled_service</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gps_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gps_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>gps_code</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iata_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iata_code</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_code</remote-alias>
            <ordinal>76</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Age 0-25]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 26-54]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 55+]' role='measure' type='quantitative' />
      <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
      </column>
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
      <column caption='ICD10 codes' datatype='string' name='[ICD10_codes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Party (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (COVID19!state) (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska&quot;'>
            <value>&quot;Alaska&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State1 (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;IN&quot;'>
            <value>&quot;IN&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Conditions_Contributing_to_COVI' datatype='table' name='[__tableau_internal_object_id__].[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='united_states_governors_1775_20' datatype='table' name='[__tableau_internal_object_id__].[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_states_covid19_daily' datatype='table' name='[__tableau_internal_object_id__].[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
      <column caption='Death Confirmed' datatype='integer' name='[deathConfirmed]' role='measure' type='quantitative' />
      <column caption='Death Probable' datatype='integer' name='[deathProbable]' role='measure' type='quantitative' />
      <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Elevation Ft' datatype='integer' name='[elevation_ft]' role='measure' type='quantitative' />
      <column caption='Gps Code' datatype='string' name='[gps_code]' role='dimension' type='nominal' />
      <column caption='Hospitalized Cumulative' datatype='integer' name='[hospitalizedCumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalized Currently' datatype='integer' name='[hospitalizedCurrently]' role='measure' type='quantitative' />
      <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
      <column caption='Iata Code' datatype='string' name='[iata_code]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Ident' datatype='string' name='[ident]' role='dimension' type='nominal' />
      <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude Deg' datatype='real' name='[latitude_deg]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Code' datatype='string' name='[local_code]' role='dimension' type='nominal' />
      <column caption='Local Region' datatype='string' name='[local_region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Longitude Deg' datatype='real' name='[longitude_deg]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Municipality' datatype='string' name='[municipality]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Cumulative' datatype='integer' name='[onVentilatorCumulative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Currently' datatype='integer' name='[onVentilatorCurrently]' role='measure' type='quantitative' />
      <column caption='Pending' datatype='integer' name='[pending]' role='measure' type='quantitative' />
      <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Probable Cases' datatype='integer' name='[probableCases]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Scheduled Service' datatype='integer' name='[scheduled_service]' role='measure' type='quantitative' />
      <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Test Results' datatype='integer' name='[totalTestResults]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[Age 0-25]' derivation='Attribute' name='[attr:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Avg' name='[avg:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Avg' name='[avg:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Avg' name='[avg:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
      <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='5' column='[Age 0-25]' derivation='Percentile' name='[prc5:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Sum' name='[sum:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Sum' name='[sum:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Sum' name='[sum:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state))' hidden='true' name='[Action (State (COVID19!state))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State Abbrev)' hidden='true' name='[Action (State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State1)' hidden='true' name='[Action (State1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Governor(6),State Abbreviations)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Governor(6):nk]' />
          <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (COVID19!state),WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State1,WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group caption='United States' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
            <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[prc5:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Party(6):nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party(6) (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID19_state' id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Conditions_Contributing_to_COVI' id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B'>
            <properties context=''>
              <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
                <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Data As Of' ordinal='0' />
                  <column datatype='date' name='Start Date' ordinal='1' />
                  <column datatype='date' name='End Date' ordinal='2' />
                  <column datatype='string' name='Group' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='integer' name='Month' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='Condition Group' ordinal='7' />
                  <column datatype='string' name='Condition' ordinal='8' />
                  <column datatype='string' name='ICD10_codes' ordinal='9' />
                  <column datatype='string' name='Age Group' ordinal='10' />
                  <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
                  <column datatype='integer' name='Number of Mentions' ordinal='12' />
                  <column datatype='string' name='Flag' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='united_states_governors_1775_20' id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE'>
            <properties context=''>
              <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
                <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Governor(6)' ordinal='1' />
                  <column datatype='string' name='Party(6)' ordinal='2' />
                  <column datatype='string' name='State Abbreviations' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_states_covid19_daily' id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B'>
            <properties context=''>
              <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
                <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='6'>
                  <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='positive' ordinal='2' />
                  <column datatype='integer' name='probableCases' ordinal='3' />
                  <column datatype='integer' name='negative' ordinal='4' />
                  <column datatype='integer' name='pending' ordinal='5' />
                  <column datatype='integer' name='totalTestResults' ordinal='6' />
                  <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
                  <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
                  <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
                  <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
                  <column datatype='integer' name='recovered' ordinal='11' />
                  <column datatype='integer' name='death' ordinal='12' />
                  <column datatype='integer' name='hospitalized' ordinal='13' />
                  <column datatype='integer' name='deathConfirmed' ordinal='14' />
                  <column datatype='integer' name='deathProbable' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us-airports' id='us-airports_65636316B8D74AF2A1176E9E7E31D698'>
            <properties context=''>
              <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
                <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='ident' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='name' ordinal='3' />
                  <column datatype='real' name='latitude_deg' ordinal='4' />
                  <column datatype='real' name='longitude_deg' ordinal='5' />
                  <column datatype='integer' name='elevation_ft' ordinal='6' />
                  <column datatype='string' name='continent' ordinal='7' />
                  <column datatype='string' name='country_name' ordinal='8' />
                  <column datatype='string' name='iso_country' ordinal='9' />
                  <column datatype='string' name='region_name' ordinal='10' />
                  <column datatype='string' name='local_region' ordinal='11' />
                  <column datatype='string' name='municipality' ordinal='12' />
                  <column datatype='integer' name='scheduled_service' ordinal='13' />
                  <column datatype='string' name='gps_code' ordinal='14' />
                  <column datatype='string' name='iata_code' ordinal='15' />
                  <column datatype='string' name='local_code' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (Conditions!Contributing!to!COVI)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Abbreviations]' />
              <expression op='[state]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[region_name]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us-airports_65636316B8D74AF2A1176E9E7E31D698' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Map with Charts Dashboard' type='sheet' worksheet='Total Monthly Death Toll' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map with Charts Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_086B8D2789A744D0AE153557B5FD510E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Airports Dashboard' type='sheet' worksheet='# of Airports within each State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Airports Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_F5B03D4E998D46849F7CCDD52D58732E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Map with Charts Dashboard' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Map with Charts Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='# of Airports within each State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1AD2B499-30E1-4F3C-861C-407A8AC34176}' />
    </worksheet>
    <worksheet name='Airport Per State to Positive Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Airport Per State to Total Positive Cases Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]'>
            <groupfilter function='level-members' level='[State (COVID19!state)]' user:ui-action-filter='[Action3_086B8D2789A744D0AE153557B5FD510E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='cols' value='Total Positive Cases' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US airports' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' max='1419311' min='-72542' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' field-type='quantitative' max='1986' min='-117' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</cols>
      </table>
      <simple-id uuid='{B636ABC4-D851-432E-BFF8-8C4FF51DD856}' />
    </worksheet>
    <worksheet name='Death Rate by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
            </column>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' z-order='3' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk])</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{49BEE33E-2AC3-422C-B54B-D12DF3E86875}' />
    </worksheet>
    <worksheet name='Death by GDP and Pop Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]' field-type='quantitative' max='90765' min='40000' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk])</cols>
      </table>
      <simple-id uuid='{FA052490-9185-4859-B657-2A8F61E89A58}' />
    </worksheet>
    <worksheet name='Death/Infected/Population Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
            <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hospitalized]' derivation='Sum' name='[sum:hospitalized:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:hospitalized:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' value='191' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-decoration' data-class='total' value='none' />
            <format attr='text-decoration' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-decoration' value='underline' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{A5F8D895-4944-4C1A-AB30-16F5F9E2D43A}' />
    </worksheet>
    <worksheet name='Deaths Per Gini Coefficient'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Gini]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gini]' derivation='Sum' name='[sum:Gini:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' field-type='quantitative' max='0.55776000000000003' min='0.40000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' scope='rows' value='Gini Coefficient' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{A4D1A66D-7C3F-4FFB-94E8-6B2AEB2923CC}' />
    </worksheet>
    <worksheet name='Infected to Hospital'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]</cols>
      </table>
      <simple-id uuid='{A179A824-76BB-42F9-87B2-4F3E728606C8}' />
    </worksheet>
    <worksheet name='Major Reason for Death in relation to Covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Conditions!Contributing!to!COVI)]' derivation='None' name='[none:State (Conditions!Contributing!to!COVI):nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]'>
            <groupfilter function='member' level='[none:State (Conditions!Contributing!to!COVI):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]</cols>
      </table>
      <simple-id uuid='{C882F5DD-BA72-4DB0-9AE7-73C9B4D92D14}' />
    </worksheet>
    <worksheet name='Political Afflications and its Impact on Infection/Death Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Political Afflications Of Each State and its Impact on Covid Infection and Death Rate
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Republican&quot;'>
                  <value>&quot;Republican&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='member' level='[mn:date:ok]' member='9' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Governor(6):nk]' />
                <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Governor(6):nk]' member='%null%' />
                <groupfilter function='member' level='[none:State Abbreviations:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk])</cols>
      </table>
      <simple-id uuid='{74B9E1EC-6DEA-4693-906F-9CE3514BB839}' />
    </worksheet>
    <worksheet name='Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:state:nk]' member='%null%' />
                <groupfilter function='member' level='[twk:date:ok]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.79000002145767212' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{1397F377-72EE-4189-AD53-4A43FE85925B}' />
    </worksheet>
    <worksheet name='Total Monthly Death Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Death Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{070A88E5-483E-4C2A-81FE-BD5E2569370A}' />
    </worksheet>
    <worksheet name='US Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{71A4E8A4-1896-4475-8F52-2EFAD3C2A21A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airports Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88324' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='10827'>
            <zone h='88324' id='6' type-v2='layout-basic' w='89702' x='468' y='10827'>
              <zone h='44162' id='3' name='Airport Per State to Positive Cases' w='44849' x='468' y='10827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='88324' id='5' name='# of Airports within each State' show-title='false' w='44853' x='45317' y='10827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='44162' id='47' type-v2='text' w='44849' x='468' y='54989'>
                <formatted-text>
                  <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                  <run>


Outliers: Alaska, New Jersey
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='88324' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='10827'>
              <zone h='6900' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='9362' x='90170' y='10827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9978' id='10' type-v2='text' w='99064' x='468' y='849'>
            <formatted-text>
              <run fontalignment='1' fontsize='20'>Airport Correlation to Infection</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='54' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='53' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='9978' id='10' type-v2='text' w='99064' x='468' y='849'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='20'>Airport Correlation to Infection</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44162' id='3' is-fixed='true' name='Airport Per State to Positive Cases' w='44849' x='468' y='10827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88324' id='5' is-fixed='true' name='# of Airports within each State' show-title='false' w='44853' x='45317' y='10827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6900' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='9362' x='90170' y='10827'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44162' id='47' type-v2='text' w='44849' x='468' y='54989'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                    <run>


Outliers: Alaska, New Jersey
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7DE4F89-6482-48AC-BCEB-DD05B978FDE1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Economic Factors Dashboard'>
      <style />
      <size maxheight='868' maxwidth='1324' minheight='868' minwidth='1324' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98156' id='3' param='vert' type-v2='layout-flow' w='49396' x='50000' y='922' />
          <zone h='49078' id='5' param='horz' type-v2='layout-flow' w='49396' x='604' y='50000' />
          <zone h='49078' id='6' param='horz' type-v2='layout-flow' w='49396' x='604' y='922'>
            <zone h='49078' id='7' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
              <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='18' param='vert' type-v2='layout-flow' w='98792' x='604' y='922'>
                <zone fixed-size='280' h='49078' id='7' is-fixed='true' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
                  <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BA36339-ACCC-451D-9381-DE03DB3DB634}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Map with Charts Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='9' param='horz' type-v2='layout-flow' w='99064' x='468' y='50000'>
            <zone h='49151' id='7' type-v2='layout-basic' w='89702' x='468' y='50000' />
            <zone fixed-size='160' h='49151' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='50000'>
              <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49151' id='54' param='horz' type-v2='layout-flow' w='99064' x='468' y='849' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100000' id='3' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='713' h='100000' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='41720' x='0' y='0'>
            <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
              <formatted-text>
                <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='5414' id='17' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
              <layout-cache fixed-size-h='43' fixed-size-w='573' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90128' id='12' name='Total Monthly Death Toll' w='41720' x='0' y='9872'>
              <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='100000' id='5' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
            <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='60' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='59' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='5' is-fixed='true' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='35' h='5414' id='17' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
                  <layout-cache fixed-size-h='43' fixed-size-w='573' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='90128' id='12' is-fixed='true' name='Total Monthly Death Toll' w='41720' x='0' y='9872'>
                  <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E79A1F6F-B349-4E2D-9E5C-1053EADE6491}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='1' param='vert' removable='false' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='4297' id='3' type-v2='title' w='98828' x='586' y='1042' />
            <zone h='13151' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98828' x='586' y='5339' />
            <zone h='80468' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98828' x='586' y='18490'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Airport Correlation To Infection' captured-sheet='Airports Dashboard' id='1'>
                    <capturedDeltas>
                      <worksheet name='Airport Per State to Positive Cases'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US Airports' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Total Monthly Death Toll by State' captured-sheet='Map with Charts Dashboard' id='2'>
                    <capturedDeltas>
                      <worksheet name='Death/Infected/Population Metrics'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_88931425E2674AD6A1F33999DE5FA2A5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
                            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Total Monthly Death Toll'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-action-filter='[Action1_88931425E2674AD6A1F33999DE5FA2A5]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
                            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
                          </groupfilter>
                        </filter>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State1)]'>
                          <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1_88931425E2674AD6A1F33999DE5FA2A5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                        </filter>
                      </worksheet>
                      <worksheet name='US Death Map Chart'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</field>
                                  <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>%null%</value>
                                <value>&quot;AL&quot;</value>
                                <value>417014</value>
                                <value>&quot;POLYGON((-88.2001 34.9956,-88.203 35.008,-87.6061 35.0035,-87.2232 34.9993,-86.8364 34.9918,-86.3188 34.9912,-85.8639 34.9883,-85.6052 34.9847,-85.5831 34.8604,-85.5137 34.5242,-85.4622 34.2864,-85.3044 33.4829,-85.2324 33.1081,-85.1841 32.8705,-85.1546 32.8398,-85.1679 32.8116,-85.1223 32.7744,-85.135 32.7465,-85.1168 32.7399,-85.1126 32.6834,-85.0672 32.5793,-85.0011 32.5105,-84.9935 32.4507,-84.9634 32.4225,-84.972 32.3777,-85.0028 32.3224,-84.9338 32.2983,-84.8885 32.2609,-84.923 32.2309,-84.9733 32.2177,-84.9618 32.1985,-85.0092 32.1816,-85.0621 32.1325,-85.0451 32.0881,-85.056 32.0631,-85.0489 32.023,-85.0682 31.9919,-85.0789 31.9402,-85.1131 31.9119,-85.1407 31.8575,-85.1411 31.7805,-85.1273 31.7626,-85.1259 31.6963,-85.0575 31.6186,-85.0455 31.5171,-85.0716 31.4684,-85.0663 31.4295,-85.0922 31.3646,-85.0877 31.3087,-85.1103 31.2817,-85.0968 31.2252,-85.1 31.1653,-85.0371 31.1098,-85.0024 31.0007,-85.2436 31.0009,-85.4983 30.9969,-86.035 30.9933,-86.6883 30.9945,-86.7859 30.997,-87.1626 30.9991,-87.5989 30.9975,-87.5891 30.9636,-87.6349 30.8659,-87.6005 30.8206,-87.5449 30.7783,-87.5303 30.7414,-87.407 30.6752,-87.3942 30.6417,-87.4087 30.5837,-87.4483 30.5131,-87.3956 30.4414,-87.5162 30.3011,-87.6583 30.2495,-87.839 30.2278,-87.7589 30.2941,-87.9083 30.4143,-87.9367 30.4827,-87.9017 30.5509,-87.9368 30.7135,-88.0103 30.7134,-88.0851 30.5704,-88.1071 30.378,-88.1922 30.3174,-88.1875 30.366,-88.3375 30.4047,-88.3959 30.3866,-88.4254 30.9983,-88.4644 31.6979,-88.4732 31.8939,-88.4314 32.2277,-88.3888 32.5781,-88.3479 32.9291,-88.2489 33.745,-88.2072 34.0583,-88.1563 34.4632,-88.0979 34.8922,-88.1546 34.9224,-88.2001 34.9956))&quot;</value>
                                <value>32.75</value>
                                <value>-86.75</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Death Rate % and Population Density by State' captured-sheet='Death Rate by State' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='4557' hidden='true' id='6' story-point-id='3' type-v2='text' w='16837' x='80966' y='34635'>
          <formatted-text>
            <run fontsize='9'>Death Rate % = Death/Infected</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{44A79766-1119-4F82-BDBE-4F7EF583F60D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Airport Per State to Positive Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State1 (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D3038513-041A-4A1D-B829-DFD6ABD9DBC5}' />
    </window>
    <window class='worksheet' name='Political Afflications and its Impact on Infection/Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{506A2545-3A3B-43E5-A3F8-91C2E5B1D6C2}' />
    </window>
    <window class='worksheet' name='Death Rate by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D732364-654D-4095-9ACF-A45179BBCC58}' />
    </window>
    <window class='worksheet' name='Deaths Per Gini Coefficient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{1497C8DF-4485-47A1-AA4F-B81F1243F789}' />
    </window>
    <window class='worksheet' name='Death by GDP and Pop Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DE7FE10-ED05-48F7-AB1C-F5518CE74174}' />
    </window>
    <window class='worksheet' name='US Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4F0610E-E3BA-4CED-8831-372498677E79}' />
    </window>
    <window class='worksheet' name='Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12CF59F3-AC08-40CF-9003-A07700D363FA}' />
    </window>
    <window class='worksheet' name='Total Monthly Death Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CE1E20EF-C2A3-4A7E-8A6A-D4F0BB32F6BE}' />
    </window>
    <window class='worksheet' name='Death/Infected/Population Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state1):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F7DE0-FBC3-4B2E-BCD6-7D9A25099CCC}' />
    </window>
    <window class='worksheet' name='# of Airports within each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A3B6861-1B43-442B-94A1-1C04A970296E}' />
    </window>
    <window class='worksheet' name='Infected to Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6706D4C-D15D-4D55-B522-88BD3A0680D6}' />
    </window>
    <window class='worksheet' name='Major Reason for Death in relation to Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C985839-02A7-436E-9C51-FBB5B690285C}' />
    </window>
    <window class='dashboard' name='Economic Factors Dashboard'>
      <viewpoints>
        <viewpoint name='Deaths Per Gini Coefficient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{CD636EFA-5D86-4B7F-ADC4-F57687B237EA}' />
    </window>
    <window class='dashboard' maximized='true' name='Airports Dashboard'>
      <viewpoints>
        <viewpoint name='# of Airports within each State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Airport Per State to Positive Cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}' />
    </window>
    <window class='dashboard' name='Map with Charts Dashboard'>
      <viewpoints>
        <viewpoint name='Death/Infected/Population Metrics' />
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1777F54D-B7AB-4DF6-AEB7-EE97E4599829}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{67A894E8-08FB-49BB-9AEA-DD5295CA1228}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# of Airports within each State' width='192'>
      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
      cinRhjKUawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Airport Per State to Positive Cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Airports Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death Rate by State' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Death by GDP and Pop Density' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='47' name='Death/Infected/Population Metrics' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths Per Gini Coefficient' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Economic Factors Dashboard' width='192'>
      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
      fV1VVVVyL0Dqnq5uK7e9Ge9lM23Y3aGF2I5MFy9evLiZG0jFFxkem8FmNROLx6m22cg3UVqO
      Rvj6wSTWaivL69QBzE6OoWgmMkoSBQtWU769j8rI/XsYMZNRU+vUwcTo1ySzBlBSxJZT2Gxr
      F+vMByZQjA4CE8NoBgOZTJZEWqW6ypK3zj8xTCarkM1q69al40Fi8RSKsv7rzU2PoqGRTuev
      iy0uEIkniS0ECceSGNGIx+NrHh+1GA4yPhNETcWIxFMYNHX9umSU+cUEJkP+18sk4wwPj2B3
      NTE9OY7JZFq3zmQ2Mz07j8VkzFtXbps+2QouRPHZLYwF/ATDiwU/1DZHLTVVFubn1q9TM8uE
      54IsLkYYGJ3Gbs2/K1UW/QTjGrFwcN06gGh0iVgsTt/16zhqa/PWNDXYiScSmKpcxMJTXPvy
      PnV5nk7/sC5LfX0jBjVRpC5DeDFMLBQuUpfC7w+SSiwWrHPU1ZNNJ4nGosRjMYb6ezHa1r4X
      Z20tVrOZdBbUTLJoXa2rHrPJULDOXFVDvdNGaG6GaEJhdnqUSDRdsG5qegYlncZfoK7cNj0A
      TpuF8XAMT0MjTpsVtcCEKzg9QTydwVG7fp2SyaKgkclodLY0Ek1k8taZHY3UVkEW07p1AGaz
      BZPJSHf3AcLhSN6aQCBIOBwhvjiL2ebi4N52wovxAnVzjI6Oohks69fN+0kmFRJZpcjrLdDY
      UEs6oxasWwwHmQkEMZrMGI0mug50E18IrambmpwkrShomSRp1VC0bmJ8DEXVCtYthwPMRBJo
      qkoiGsHR1EqVee1lLyt1jQ31KKk0dc3568pNjgGErpV1UbwQlUYCIHRNArBJlFiQDz76hLnI
      6vn64tIik1MTWzQq8Tg5BtgkycAdbid8hAYv8/X4LM+dO8fgvQk0JYGvsRpnQyuhqRFefPVP
      qK0pfj2V2ByVsTDzGWS02pm+eZPO9k4MzlbSy8u0NDdgNSo0uBsxoqHUWAgsLFNbU7fVw9Ut
      2QMIXZNjAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsS
      AKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgCh
      axIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsS
      AKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgCh
      axIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsS
      AKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgChaxIAoWsSAKFrEgCh
      axIAoWsSAKFrEgChaxIAoWsSAKFrEgCha/8fJKfBj9rlcfwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Infected to Hospital' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Major Reason for Death in relation to Covid' width='192'>
      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
      E78sAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map with Charts Dashboard' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Political Afflications and its Impact on Infection/Death Rate' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      K+LGlwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Time Series Map Chart' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Death Toll' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Death Map Chart' width='192'>
      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
      id8wZlgRV0wZT35BPscbj+PxeBg/flysy4spTdNQFKX7zzMhAYhzm7ftYPlHy5lz7WyGDxtG
      aupna/R0Pf+rxu3Fq0QgZ4HikKZpvLHkI/btP0BOmo1F9/w9HR0dOJ3OHkc4RVGk8Z8jOQsU
      R6LRKA0NDWiaxpZt29m8fRejL7iA3NxciouLv3SxKHFuZAgUJ1RV5dcv/5lN23YzclAOSUlO
      rrliBuPG6Xt8f77pYgjk9/vxer1kZWXF3VVPn89HUlISf122ghNNbv7w6ydo93jIy/3qRWVF
      79HFEOijFR/z7Yd+xOo1a2JdSjdN01i/YQO/fel3BINBIn4PP/qXf8TpdJKflyeNv4/oYgj0
      6a2xbncLkUiE3NzYvXL003H+ytVrWTDvJpKSnNLYY0gXPcCndzpWVFZ13wF5PkWjUf7hwX/h
      UFkZmqahaRqv/ekvABgMBrKzs7nz9m/iciVJ448xXfQAp6vZ7eaNN97k1oW3UFVdzaSLLqKl
      pZXSwxVMn3IJ0NW4Ozo62LxtJ1MnT2L//gPsP3gIr6eNOddeQzgSoa62juz8AahhP6qqMm7s
      2O7FqkR8kQB8zqeP3ZnNZurq6igvr2DWrMt7NNydO3cxceIEHn/i5xTkZVN3tJ6wqrBwwVzG
      jxsbw+rF2ZAAnERFZSV79pQw/+vzUBSFjo5OysvLdX/rQX8iATgDkUgEg8Fw0vvLRWLRxXWA
      3iKvkup/5FAmdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0
      TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0C
      IHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0
      TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0C
      IHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0
      TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0CIHRNAiB0TQIgdE0C
      0E+VlVeyZ9/BWJcR90yxLkD0vs1bthLVFFRN6f7M6/XicrliWFV8UgKBgGa1WmNdh+hFmqah
      KJ81/tJDZfzk6Rf5r589SmpqKhaLJYbVxRcJgA5omobP5yMYDPK9R77PlKnTmDrlUsaOGRXr
      0mJOAqAzR2pq+WTjZqKKhdtvmYvBoO9poARAhzRNo62tjZde+ysLbryK4sGDYl1SzPwvatjv
      A/EPPZ8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
