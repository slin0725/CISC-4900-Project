<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.1011.1414                               -->
<workbook original-version='18.1' source-build='2024.2.4 (20242.24.1011.1414)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
    <ZoneFriendlyName />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' inline='true' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='united_states_governors_1775_2020' name='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/united_states_governors_1775_2020.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us_states_covid19_daily_revised' name='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us_states_covid19_daily_revised.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='us-airports' name='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/us-airports.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='COVID19_state' name='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/COVID19_state.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017' name='excel-direct.0nwqjag1pmirqe14ajkis19u24pf'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/wwwye/Downloads/Conditions_Contributing_to_COVID-19_Deaths__by_State_and_Age__Provisional_2020-2023_20241017.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
          <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
            <column datatype='string' name='State' ordinal='0' />
            <column datatype='integer' name='Tested' ordinal='1' />
            <column datatype='integer' name='Infected' ordinal='2' />
            <column datatype='integer' name='Deaths' ordinal='3' />
            <column datatype='integer' name='Population' ordinal='4' />
            <column datatype='real' name='Pop Density' ordinal='5' />
            <column datatype='real' name='Gini' ordinal='6' />
            <column datatype='integer' name='ICU Beds' ordinal='7' />
            <column datatype='integer' name='Income' ordinal='8' />
            <column datatype='integer' name='GDP' ordinal='9' />
            <column datatype='real' name='Unemployment' ordinal='10' />
            <column datatype='real' name='Sex Ratio' ordinal='11' />
            <column datatype='real' name='Smoking Rate' ordinal='12' />
            <column datatype='real' name='Flu Deaths' ordinal='13' />
            <column datatype='real' name='Respiratory Deaths' ordinal='14' />
            <column datatype='integer' name='Physicians' ordinal='15' />
            <column datatype='integer' name='Hospitals' ordinal='16' />
            <column datatype='integer' name='Health Spending' ordinal='17' />
            <column datatype='real' name='Pollution' ordinal='18' />
            <column datatype='integer' name='Med-Large Airports' ordinal='19' />
            <column datatype='real' name='Temperature' ordinal='20' />
            <column datatype='real' name='Urban' ordinal='21' />
            <column datatype='real' name='Age 0-25' ordinal='22' />
            <column datatype='real' name='Age 26-54' ordinal='23' />
            <column datatype='real' name='Age 55+' ordinal='24' />
            <column datatype='date' name='School Closure Date' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
            <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='string' name='Governor(6)' ordinal='1' />
              <column datatype='string' name='Party(6)' ordinal='2' />
              <column datatype='string' name='State Abbreviations' ordinal='3' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
            <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
              <column datatype='string' name='State' ordinal='0' />
              <column datatype='integer' name='Tested' ordinal='1' />
              <column datatype='integer' name='Infected' ordinal='2' />
              <column datatype='integer' name='Deaths' ordinal='3' />
              <column datatype='integer' name='Population' ordinal='4' />
              <column datatype='real' name='Pop Density' ordinal='5' />
              <column datatype='real' name='Gini' ordinal='6' />
              <column datatype='integer' name='ICU Beds' ordinal='7' />
              <column datatype='integer' name='Income' ordinal='8' />
              <column datatype='integer' name='GDP' ordinal='9' />
              <column datatype='real' name='Unemployment' ordinal='10' />
              <column datatype='real' name='Sex Ratio' ordinal='11' />
              <column datatype='real' name='Smoking Rate' ordinal='12' />
              <column datatype='real' name='Flu Deaths' ordinal='13' />
              <column datatype='real' name='Respiratory Deaths' ordinal='14' />
              <column datatype='integer' name='Physicians' ordinal='15' />
              <column datatype='integer' name='Hospitals' ordinal='16' />
              <column datatype='integer' name='Health Spending' ordinal='17' />
              <column datatype='real' name='Pollution' ordinal='18' />
              <column datatype='integer' name='Med-Large Airports' ordinal='19' />
              <column datatype='real' name='Temperature' ordinal='20' />
              <column datatype='real' name='Urban' ordinal='21' />
              <column datatype='real' name='Age 0-25' ordinal='22' />
              <column datatype='real' name='Age 26-54' ordinal='23' />
              <column datatype='real' name='Age 55+' ordinal='24' />
              <column datatype='date' name='School Closure Date' ordinal='25' />
            </columns>
          </relation>
          <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
            <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
              <column datatype='date' name='Data As Of' ordinal='0' />
              <column datatype='date' name='Start Date' ordinal='1' />
              <column datatype='date' name='End Date' ordinal='2' />
              <column datatype='string' name='Group' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='integer' name='Month' ordinal='5' />
              <column datatype='string' name='State' ordinal='6' />
              <column datatype='string' name='Condition Group' ordinal='7' />
              <column datatype='string' name='Condition' ordinal='8' />
              <column datatype='string' name='ICD10_codes' ordinal='9' />
              <column datatype='string' name='Age Group' ordinal='10' />
              <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
              <column datatype='integer' name='Number of Mentions' ordinal='12' />
              <column datatype='string' name='Flag' ordinal='13' />
            </columns>
          </relation>
          <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
            <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='2'>
              <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
              <column datatype='string' name='state' ordinal='1' />
              <column datatype='integer' name='positive' ordinal='2' />
              <column datatype='integer' name='probableCases' ordinal='3' />
              <column datatype='integer' name='negative' ordinal='4' />
              <column datatype='integer' name='pending' ordinal='5' />
              <column datatype='integer' name='totalTestResults' ordinal='6' />
              <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
              <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
              <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
              <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
              <column datatype='integer' name='recovered' ordinal='11' />
              <column datatype='integer' name='death' ordinal='12' />
              <column datatype='integer' name='hospitalized' ordinal='13' />
              <column datatype='integer' name='deathConfirmed' ordinal='14' />
              <column datatype='integer' name='deathProbable' ordinal='15' />
            </columns>
          </relation>
          <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='string' name='ident' ordinal='1' />
              <column datatype='string' name='type' ordinal='2' />
              <column datatype='string' name='name' ordinal='3' />
              <column datatype='real' name='latitude_deg' ordinal='4' />
              <column datatype='real' name='longitude_deg' ordinal='5' />
              <column datatype='integer' name='elevation_ft' ordinal='6' />
              <column datatype='string' name='continent' ordinal='7' />
              <column datatype='string' name='country_name' ordinal='8' />
              <column datatype='string' name='iso_country' ordinal='9' />
              <column datatype='string' name='region_name' ordinal='10' />
              <column datatype='string' name='local_region' ordinal='11' />
              <column datatype='string' name='municipality' ordinal='12' />
              <column datatype='integer' name='scheduled_service' ordinal='13' />
              <column datatype='string' name='gps_code' ordinal='14' />
              <column datatype='string' name='iata_code' ordinal='15' />
              <column datatype='string' name='local_code' ordinal='16' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age 0-25 (COVID19!state1)]' value='[COVID19_state1].[Age 0-25]' />
          <map key='[Age 0-25]' value='[COVID19_state].[Age 0-25]' />
          <map key='[Age 26-54 (COVID19!state1)]' value='[COVID19_state1].[Age 26-54]' />
          <map key='[Age 26-54]' value='[COVID19_state].[Age 26-54]' />
          <map key='[Age 55+ (COVID19!state1)]' value='[COVID19_state1].[Age 55+]' />
          <map key='[Age 55+]' value='[COVID19_state].[Age 55+]' />
          <map key='[Age Group]' value='[Conditions_Contributing_to_COVI].[Age Group]' />
          <map key='[COVID-19 Deaths]' value='[Conditions_Contributing_to_COVI].[COVID-19 Deaths]' />
          <map key='[Condition Group]' value='[Conditions_Contributing_to_COVI].[Condition Group]' />
          <map key='[Condition]' value='[Conditions_Contributing_to_COVI].[Condition]' />
          <map key='[Data As Of]' value='[Conditions_Contributing_to_COVI].[Data As Of]' />
          <map key='[Deaths (COVID19!state1)]' value='[COVID19_state1].[Deaths]' />
          <map key='[Deaths]' value='[COVID19_state].[Deaths]' />
          <map key='[End Date]' value='[Conditions_Contributing_to_COVI].[End Date]' />
          <map key='[Flag]' value='[Conditions_Contributing_to_COVI].[Flag]' />
          <map key='[Flu Deaths (COVID19!state1)]' value='[COVID19_state1].[Flu Deaths]' />
          <map key='[Flu Deaths]' value='[COVID19_state].[Flu Deaths]' />
          <map key='[GDP (COVID19!state1)]' value='[COVID19_state1].[GDP]' />
          <map key='[GDP]' value='[COVID19_state].[GDP]' />
          <map key='[Gini (COVID19!state1)]' value='[COVID19_state1].[Gini]' />
          <map key='[Gini]' value='[COVID19_state].[Gini]' />
          <map key='[Governor(6)]' value='[united_states_governors_1775_20].[Governor(6)]' />
          <map key='[Group]' value='[Conditions_Contributing_to_COVI].[Group]' />
          <map key='[Health Spending (COVID19!state1)]' value='[COVID19_state1].[Health Spending]' />
          <map key='[Health Spending]' value='[COVID19_state].[Health Spending]' />
          <map key='[Hospitals (COVID19!state1)]' value='[COVID19_state1].[Hospitals]' />
          <map key='[Hospitals]' value='[COVID19_state].[Hospitals]' />
          <map key='[ICD10_codes]' value='[Conditions_Contributing_to_COVI].[ICD10_codes]' />
          <map key='[ICU Beds (COVID19!state1)]' value='[COVID19_state1].[ICU Beds]' />
          <map key='[ICU Beds]' value='[COVID19_state].[ICU Beds]' />
          <map key='[Income (COVID19!state1)]' value='[COVID19_state1].[Income]' />
          <map key='[Income]' value='[COVID19_state].[Income]' />
          <map key='[Infected (COVID19!state1)]' value='[COVID19_state1].[Infected]' />
          <map key='[Infected]' value='[COVID19_state].[Infected]' />
          <map key='[Med-Large Airports (COVID19!state1)]' value='[COVID19_state1].[Med-Large Airports]' />
          <map key='[Med-Large Airports]' value='[COVID19_state].[Med-Large Airports]' />
          <map key='[Month]' value='[Conditions_Contributing_to_COVI].[Month]' />
          <map key='[Number of Mentions]' value='[Conditions_Contributing_to_COVI].[Number of Mentions]' />
          <map key='[Party(6)]' value='[united_states_governors_1775_20].[Party(6)]' />
          <map key='[Physicians (COVID19!state1)]' value='[COVID19_state1].[Physicians]' />
          <map key='[Physicians]' value='[COVID19_state].[Physicians]' />
          <map key='[Pollution (COVID19!state1)]' value='[COVID19_state1].[Pollution]' />
          <map key='[Pollution]' value='[COVID19_state].[Pollution]' />
          <map key='[Pop Density (COVID19!state1)]' value='[COVID19_state1].[Pop Density]' />
          <map key='[Pop Density]' value='[COVID19_state].[Pop Density]' />
          <map key='[Population (COVID19!state1)]' value='[COVID19_state1].[Population]' />
          <map key='[Population]' value='[COVID19_state].[Population]' />
          <map key='[Respiratory Deaths (COVID19!state1)]' value='[COVID19_state1].[Respiratory Deaths]' />
          <map key='[Respiratory Deaths]' value='[COVID19_state].[Respiratory Deaths]' />
          <map key='[School Closure Date (COVID19!state1)]' value='[COVID19_state1].[School Closure Date]' />
          <map key='[School Closure Date]' value='[COVID19_state].[School Closure Date]' />
          <map key='[Sex Ratio (COVID19!state1)]' value='[COVID19_state1].[Sex Ratio]' />
          <map key='[Sex Ratio]' value='[COVID19_state].[Sex Ratio]' />
          <map key='[Smoking Rate (COVID19!state1)]' value='[COVID19_state1].[Smoking Rate]' />
          <map key='[Smoking Rate]' value='[COVID19_state].[Smoking Rate]' />
          <map key='[Start Date]' value='[Conditions_Contributing_to_COVI].[Start Date]' />
          <map key='[State (COVID19!state)]' value='[COVID19_state].[State]' />
          <map key='[State (COVID19!state1)]' value='[COVID19_state1].[State]' />
          <map key='[State (Conditions!Contributing!to!COVI)]' value='[Conditions_Contributing_to_COVI].[State]' />
          <map key='[State Abbreviations]' value='[united_states_governors_1775_20].[State Abbreviations]' />
          <map key='[State]' value='[united_states_governors_1775_20].[State]' />
          <map key='[Temperature (COVID19!state1)]' value='[COVID19_state1].[Temperature]' />
          <map key='[Temperature]' value='[COVID19_state].[Temperature]' />
          <map key='[Tested (COVID19!state1)]' value='[COVID19_state1].[Tested]' />
          <map key='[Tested]' value='[COVID19_state].[Tested]' />
          <map key='[Unemployment (COVID19!state1)]' value='[COVID19_state1].[Unemployment]' />
          <map key='[Unemployment]' value='[COVID19_state].[Unemployment]' />
          <map key='[Urban (COVID19!state1)]' value='[COVID19_state1].[Urban]' />
          <map key='[Urban]' value='[COVID19_state].[Urban]' />
          <map key='[Year]' value='[Conditions_Contributing_to_COVI].[Year]' />
          <map key='[continent]' value='[us-airports].[continent]' />
          <map key='[country_name]' value='[us-airports].[country_name]' />
          <map key='[date]' value='[us_states_covid19_daily].[date]' />
          <map key='[deathConfirmed]' value='[us_states_covid19_daily].[deathConfirmed]' />
          <map key='[deathProbable]' value='[us_states_covid19_daily].[deathProbable]' />
          <map key='[death]' value='[us_states_covid19_daily].[death]' />
          <map key='[elevation_ft]' value='[us-airports].[elevation_ft]' />
          <map key='[gps_code]' value='[us-airports].[gps_code]' />
          <map key='[hospitalizedCumulative]' value='[us_states_covid19_daily].[hospitalizedCumulative]' />
          <map key='[hospitalizedCurrently]' value='[us_states_covid19_daily].[hospitalizedCurrently]' />
          <map key='[hospitalized]' value='[us_states_covid19_daily].[hospitalized]' />
          <map key='[iata_code]' value='[us-airports].[iata_code]' />
          <map key='[id]' value='[us-airports].[id]' />
          <map key='[ident]' value='[us-airports].[ident]' />
          <map key='[iso_country]' value='[us-airports].[iso_country]' />
          <map key='[latitude_deg]' value='[us-airports].[latitude_deg]' />
          <map key='[local_code]' value='[us-airports].[local_code]' />
          <map key='[local_region]' value='[us-airports].[local_region]' />
          <map key='[longitude_deg]' value='[us-airports].[longitude_deg]' />
          <map key='[municipality]' value='[us-airports].[municipality]' />
          <map key='[name]' value='[us-airports].[name]' />
          <map key='[negative]' value='[us_states_covid19_daily].[negative]' />
          <map key='[onVentilatorCumulative]' value='[us_states_covid19_daily].[onVentilatorCumulative]' />
          <map key='[onVentilatorCurrently]' value='[us_states_covid19_daily].[onVentilatorCurrently]' />
          <map key='[pending]' value='[us_states_covid19_daily].[pending]' />
          <map key='[positive]' value='[us_states_covid19_daily].[positive]' />
          <map key='[probableCases]' value='[us_states_covid19_daily].[probableCases]' />
          <map key='[recovered]' value='[us_states_covid19_daily].[recovered]' />
          <map key='[region_name]' value='[us-airports].[region_name]' />
          <map key='[scheduled_service]' value='[us-airports].[scheduled_service]' />
          <map key='[state]' value='[us_states_covid19_daily].[state]' />
          <map key='[totalTestResults]' value='[us_states_covid19_daily].[totalTestResults]' />
          <map key='[type]' value='[us-airports].[type]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D51:no:A1:D51:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Z52:no:A1:Z52:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N10001:no:A1:N10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:P14304:no:A1:P14304:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us-airports]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Governor(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Governor(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Governor(6)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Party(6)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Party(6)]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>Party(6)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State Abbreviations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State Abbreviations]</local-name>
            <parent-name>[united_states_governors_1775_20]</parent-name>
            <remote-alias>State Abbreviations</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25 (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54 (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+ (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date (COVID19!state1)]</local-name>
            <parent-name>[COVID19_state1]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (COVID19!state)]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tested</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tested]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Tested</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infected</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infected]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Infected</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pop Density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pop Density]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pop Density</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gini</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gini]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Gini</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICU Beds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ICU Beds]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>ICU Beds</remote-alias>
            <ordinal>37</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Income</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Income]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Income</remote-alias>
            <ordinal>38</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>39</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unemployment</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unemployment]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Unemployment</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex Ratio</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sex Ratio]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Sex Ratio</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Smoking Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Smoking Rate]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Smoking Rate</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flu Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Flu Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Flu Deaths</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respiratory Deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Respiratory Deaths]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Respiratory Deaths</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Physicians</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Physicians]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Physicians</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hospitals</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hospitals]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Hospitals</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Spending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Health Spending]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Health Spending</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pollution</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Pollution]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Pollution</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Med-Large Airports</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Med-Large Airports]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Med-Large Airports</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Temperature</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Urban]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Urban</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 0-25</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 0-25]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 0-25</remote-alias>
            <ordinal>52</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 26-54</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 26-54]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 26-54</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age 55+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age 55+]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>Age 55+</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>School Closure Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[School Closure Date]</local-name>
            <parent-name>[COVID19_state]</parent-name>
            <remote-alias>School Closure Date</remote-alias>
            <ordinal>55</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data As Of</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data As Of]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Data As Of</remote-alias>
            <ordinal>56</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Start Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Start Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Start Date</remote-alias>
            <ordinal>57</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>End Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[End Date]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>End Date</remote-alias>
            <ordinal>58</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Group</remote-alias>
            <ordinal>59</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State (Conditions!Contributing!to!COVI)]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition Group</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Condition</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Condition]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Condition</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICD10_codes</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICD10_codes]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>ICD10_codes</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COVID-19 Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[COVID-19 Deaths]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>COVID-19 Deaths</remote-alias>
            <ordinal>67</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Mentions</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number of Mentions]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Number of Mentions</remote-alias>
            <ordinal>68</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flag</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Flag]</local-name>
            <parent-name>[Conditions_Contributing_to_COVI]</parent-name>
            <remote-alias>Flag</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>70</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>positive</remote-alias>
            <ordinal>72</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>probableCases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[probableCases]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>probableCases</remote-alias>
            <ordinal>73</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>negative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[negative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>negative</remote-alias>
            <ordinal>74</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pending</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pending]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>pending</remote-alias>
            <ordinal>75</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totalTestResults</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totalTestResults]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>totalTestResults</remote-alias>
            <ordinal>76</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCurrently</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalizedCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalizedCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalizedCumulative</remote-alias>
            <ordinal>78</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCurrently</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCurrently]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCurrently</remote-alias>
            <ordinal>79</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>onVentilatorCumulative</remote-name>
            <remote-type>20</remote-type>
            <local-name>[onVentilatorCumulative]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>onVentilatorCumulative</remote-alias>
            <ordinal>80</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>81</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death</remote-name>
            <remote-type>20</remote-type>
            <local-name>[death]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>death</remote-alias>
            <ordinal>82</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospitalized</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hospitalized]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>hospitalized</remote-alias>
            <ordinal>83</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathConfirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathConfirmed]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathConfirmed</remote-alias>
            <ordinal>84</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deathProbable</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deathProbable]</local-name>
            <parent-name>[us_states_covid19_daily]</parent-name>
            <remote-alias>deathProbable</remote-alias>
            <ordinal>85</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>86</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ident</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ident]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>ident</remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[type]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>type</remote-alias>
            <ordinal>88</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>latitude_deg</remote-alias>
            <ordinal>90</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude_deg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude_deg]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>longitude_deg</remote-alias>
            <ordinal>91</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elevation_ft</remote-name>
            <remote-type>20</remote-type>
            <local-name>[elevation_ft]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>elevation_ft</remote-alias>
            <ordinal>92</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>93</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_country]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iso_country</remote-alias>
            <ordinal>95</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>region_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[region_name]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>region_name</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_region]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_region</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>municipality</remote-name>
            <remote-type>130</remote-type>
            <local-name>[municipality]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>municipality</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>scheduled_service</remote-name>
            <remote-type>20</remote-type>
            <local-name>[scheduled_service]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>scheduled_service</remote-alias>
            <ordinal>99</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gps_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[gps_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>gps_code</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iata_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iata_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>iata_code</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>local_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[local_code]</local-name>
            <parent-name>[us-airports]</parent-name>
            <remote-alias>local_code</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us-airports_65636316B8D74AF2A1176E9E7E31D698]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]&quot;' value='Death' />
        </aliases>
      </column>
      <column datatype='real' name='[Age 0-25]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 26-54]' role='measure' type='quantitative' />
      <column datatype='real' name='[Age 55+]' role='measure' type='quantitative' />
      <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
      </column>
      <column datatype='string' name='[Condition (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Condition]' new-bin='true' />
      </column>
      <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
      <column caption='ICD10 codes' datatype='string' name='[ICD10_codes]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Month]' role='dimension' type='quantitative' />
      <column datatype='string' name='[Party (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
          <bin default-name='true' value='&quot;Democratic&quot;'>
            <value>&quot;Democratic&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Republican&quot;'>
            <value>&quot;Republican&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
      <column datatype='string' name='[State (COVID19!state) (group) 1]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' new-bin='true' />
      </column>
      <column datatype='string' name='[State (COVID19!state) (group) 2]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' new-bin='true' />
      </column>
      <column datatype='string' name='[State (COVID19!state) (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State (COVID19!state)]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Alaska&quot;'>
            <value>&quot;Alaska&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (COVID19!state1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[State1 (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;IN&quot;'>
            <value>&quot;IN&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state1' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_17C8D48792824FAEAA08A29DB41F75A3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='COVID19_state' datatype='table' name='[__tableau_internal_object_id__].[COVID19!state_E0233537B40A4D458FCD64BB5A7412D5]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Conditions_Contributing_to_COVI' datatype='table' name='[__tableau_internal_object_id__].[Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='united_states_governors_1775_20' datatype='table' name='[__tableau_internal_object_id__].[united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_states_covid19_daily' datatype='table' name='[__tableau_internal_object_id__].[us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
      <column caption='Death Confirmed' datatype='integer' name='[deathConfirmed]' role='measure' type='quantitative' />
      <column caption='Death Probable' datatype='integer' name='[deathProbable]' role='measure' type='quantitative' />
      <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
      <column caption='Elevation Ft' datatype='integer' name='[elevation_ft]' role='measure' type='quantitative' />
      <column caption='Gps Code' datatype='string' name='[gps_code]' role='dimension' type='nominal' />
      <column caption='Hospitalized Cumulative' datatype='integer' name='[hospitalizedCumulative]' role='measure' type='quantitative' />
      <column caption='Hospitalized Currently' datatype='integer' name='[hospitalizedCurrently]' role='measure' type='quantitative' />
      <column caption='Hospitalized' datatype='integer' name='[hospitalized]' role='measure' type='quantitative' />
      <column caption='Iata Code' datatype='string' name='[iata_code]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Ident' datatype='string' name='[ident]' role='dimension' type='nominal' />
      <column caption='Iso Country' datatype='string' name='[iso_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Avg' caption='Latitude Deg' datatype='real' name='[latitude_deg]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Local Code' datatype='string' name='[local_code]' role='dimension' type='nominal' />
      <column caption='Local Region' datatype='string' name='[local_region]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Avg' caption='Longitude Deg' datatype='real' name='[longitude_deg]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Municipality' datatype='string' name='[municipality]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Negative' datatype='integer' name='[negative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Cumulative' datatype='integer' name='[onVentilatorCumulative]' role='measure' type='quantitative' />
      <column caption='On Ventilator Currently' datatype='integer' name='[onVentilatorCurrently]' role='measure' type='quantitative' />
      <column caption='Pending' datatype='integer' name='[pending]' role='measure' type='quantitative' />
      <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
      <column caption='Probable Cases' datatype='integer' name='[probableCases]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='integer' name='[recovered]' role='measure' type='quantitative' />
      <column caption='Region Name' datatype='string' name='[region_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Scheduled Service' datatype='integer' name='[scheduled_service]' role='measure' type='quantitative' />
      <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Total Test Results' datatype='integer' name='[totalTestResults]' role='measure' type='quantitative' />
      <column caption='Type' datatype='string' name='[type]' role='dimension' type='nominal' />
      <column-instance column='[Age 0-25]' derivation='Attribute' name='[attr:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Avg' name='[avg:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Avg' name='[avg:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Avg' name='[avg:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Max' name='[max:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[recovered]' derivation='Max' name='[max:recovered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
      <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
      <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
      <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
      <column-instance aggregation-param='5' column='[Age 0-25]' derivation='Percentile' name='[prc5:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 0-25]' derivation='Sum' name='[sum:Age 0-25:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 26-54]' derivation='Sum' name='[sum:Age 26-54:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Age 55+]' derivation='Sum' name='[sum:Age 55+:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
      <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state))' hidden='true' name='[Action (State (COVID19!state))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),MONTH(Date),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),MONTH(Date),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State (COVID19!state),State Abbrev)' hidden='true' name='[Action (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[State (COVID19!state)]' />
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State Abbrev)' hidden='true' name='[Action (State Abbrev)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Action (State1)' hidden='true' name='[Action (State1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Governor(6),State Abbreviations)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Governor(6):nk]' />
          <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State (COVID19!state),WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (State1,WEEK(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:state:nk]' />
          <groupfilter function='level-members' level='[twk:date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Inclusions (State (COVID19!state),State Abbrev)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:State (COVID19!state):nk]' />
          <groupfilter function='level-members' level='[none:state:nk]' />
        </groupfilter>
      </group>
      <group caption='United States' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
            <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
            <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='US' name='[State (COVID19!state) (group) 2 Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Alabama&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Alaska&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Arkansas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;California&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Colorado&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Connecticut&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Florida&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Hawaii&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Idaho&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Iowa&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Kansas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Louisiana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Maine&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Maryland&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Massachusetts&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Minnesota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Mississippi&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Missouri&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Montana&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Nevada&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Hampshire&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Jersey&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;New York&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;North Carolina&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;North Dakota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Oregon&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Pennsylvania&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Rhode Island&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;South Carolina&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;South Dakota&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Tennessee&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Vermont&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Virginia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Washington&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;West Virginia&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Wisconsin&quot;' />
          <groupfilter function='member' level='[State (COVID19!state) (group) 2]' member='&quot;Wyoming&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[prc5:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 0-25:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 55+:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:recovered:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[avg:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Age 26-54:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 1]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Party(6):nk]' type='shape'>
            <map to='circle'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party(6) (group) 2]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Party (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Republican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='COVID19_state1' id='COVID19!state_17C8D48792824FAEAA08A29DB41F75A3'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state1' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='COVID19_state' id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5'>
            <properties context=''>
              <relation connection='excel-direct.0t6y41c0vaifqd1af2isd1gvxhto' name='COVID19_state' table='[COVID19_state$]' type='table'>
                <columns gridOrigin='A1:Z52:no:A1:Z52:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='integer' name='Tested' ordinal='1' />
                  <column datatype='integer' name='Infected' ordinal='2' />
                  <column datatype='integer' name='Deaths' ordinal='3' />
                  <column datatype='integer' name='Population' ordinal='4' />
                  <column datatype='real' name='Pop Density' ordinal='5' />
                  <column datatype='real' name='Gini' ordinal='6' />
                  <column datatype='integer' name='ICU Beds' ordinal='7' />
                  <column datatype='integer' name='Income' ordinal='8' />
                  <column datatype='integer' name='GDP' ordinal='9' />
                  <column datatype='real' name='Unemployment' ordinal='10' />
                  <column datatype='real' name='Sex Ratio' ordinal='11' />
                  <column datatype='real' name='Smoking Rate' ordinal='12' />
                  <column datatype='real' name='Flu Deaths' ordinal='13' />
                  <column datatype='real' name='Respiratory Deaths' ordinal='14' />
                  <column datatype='integer' name='Physicians' ordinal='15' />
                  <column datatype='integer' name='Hospitals' ordinal='16' />
                  <column datatype='integer' name='Health Spending' ordinal='17' />
                  <column datatype='real' name='Pollution' ordinal='18' />
                  <column datatype='integer' name='Med-Large Airports' ordinal='19' />
                  <column datatype='real' name='Temperature' ordinal='20' />
                  <column datatype='real' name='Urban' ordinal='21' />
                  <column datatype='real' name='Age 0-25' ordinal='22' />
                  <column datatype='real' name='Age 26-54' ordinal='23' />
                  <column datatype='real' name='Age 55+' ordinal='24' />
                  <column datatype='date' name='School Closure Date' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Conditions_Contributing_to_COVI' id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B'>
            <properties context=''>
              <relation connection='excel-direct.0nwqjag1pmirqe14ajkis19u24pf' name='Conditions_Contributing_to_COVI' table='[Conditions_Contributing_to_COVI$]' type='table'>
                <columns gridOrigin='A1:N10001:no:A1:N10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Data As Of' ordinal='0' />
                  <column datatype='date' name='Start Date' ordinal='1' />
                  <column datatype='date' name='End Date' ordinal='2' />
                  <column datatype='string' name='Group' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='integer' name='Month' ordinal='5' />
                  <column datatype='string' name='State' ordinal='6' />
                  <column datatype='string' name='Condition Group' ordinal='7' />
                  <column datatype='string' name='Condition' ordinal='8' />
                  <column datatype='string' name='ICD10_codes' ordinal='9' />
                  <column datatype='string' name='Age Group' ordinal='10' />
                  <column datatype='integer' name='COVID-19 Deaths' ordinal='11' />
                  <column datatype='integer' name='Number of Mentions' ordinal='12' />
                  <column datatype='string' name='Flag' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='united_states_governors_1775_20' id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE'>
            <properties context=''>
              <relation connection='excel-direct.1rkxog30xchnt10zj0mwq0rjt4t0' name='united_states_governors_1775_20' table='[united_states_governors_1775_20$]' type='table'>
                <columns gridOrigin='A1:D51:no:A1:D51:0' header='yes' outcome='2'>
                  <column datatype='string' name='State' ordinal='0' />
                  <column datatype='string' name='Governor(6)' ordinal='1' />
                  <column datatype='string' name='Party(6)' ordinal='2' />
                  <column datatype='string' name='State Abbreviations' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_states_covid19_daily' id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B'>
            <properties context=''>
              <relation connection='excel-direct.1v4pq5z0pyxj181ey7ans1dapimb' name='us_states_covid19_daily' table='[us_states_covid19_daily$]' type='table'>
                <columns gridOrigin='A1:P14304:no:A1:P14304:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='yyyyMMdd' name='date' ordinal='0' />
                  <column datatype='string' name='state' ordinal='1' />
                  <column datatype='integer' name='positive' ordinal='2' />
                  <column datatype='integer' name='probableCases' ordinal='3' />
                  <column datatype='integer' name='negative' ordinal='4' />
                  <column datatype='integer' name='pending' ordinal='5' />
                  <column datatype='integer' name='totalTestResults' ordinal='6' />
                  <column datatype='integer' name='hospitalizedCurrently' ordinal='7' />
                  <column datatype='integer' name='hospitalizedCumulative' ordinal='8' />
                  <column datatype='integer' name='onVentilatorCurrently' ordinal='9' />
                  <column datatype='integer' name='onVentilatorCumulative' ordinal='10' />
                  <column datatype='integer' name='recovered' ordinal='11' />
                  <column datatype='integer' name='death' ordinal='12' />
                  <column datatype='integer' name='hospitalized' ordinal='13' />
                  <column datatype='integer' name='deathConfirmed' ordinal='14' />
                  <column datatype='integer' name='deathProbable' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us-airports' id='us-airports_65636316B8D74AF2A1176E9E7E31D698'>
            <properties context=''>
              <relation connection='excel-direct.1mbf49z1a8kr9r13u06t10xv85s1' name='us-airports' table='[&apos;us-airports$&apos;]' type='table'>
                <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='2'>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='string' name='ident' ordinal='1' />
                  <column datatype='string' name='type' ordinal='2' />
                  <column datatype='string' name='name' ordinal='3' />
                  <column datatype='real' name='latitude_deg' ordinal='4' />
                  <column datatype='real' name='longitude_deg' ordinal='5' />
                  <column datatype='integer' name='elevation_ft' ordinal='6' />
                  <column datatype='string' name='continent' ordinal='7' />
                  <column datatype='string' name='country_name' ordinal='8' />
                  <column datatype='string' name='iso_country' ordinal='9' />
                  <column datatype='string' name='region_name' ordinal='10' />
                  <column datatype='string' name='local_region' ordinal='11' />
                  <column datatype='string' name='municipality' ordinal='12' />
                  <column datatype='integer' name='scheduled_service' ordinal='13' />
                  <column datatype='string' name='gps_code' ordinal='14' />
                  <column datatype='string' name='iata_code' ordinal='15' />
                  <column datatype='string' name='local_code' ordinal='16' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state1)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_17C8D48792824FAEAA08A29DB41F75A3' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (COVID19!state)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='COVID19!state_E0233537B40A4D458FCD64BB5A7412D5' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[State (Conditions!Contributing!to!COVI)]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='Conditions!Contributing!to!COVI_3668A767A2834960B68B6D1B680FD61B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State Abbreviations]' />
              <expression op='[state]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us!states!covid19!daily_14C5E23B7BB344E88888DBE647CE347B' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[State]' />
              <expression op='[region_name]' />
            </expression>
            <first-end-point object-id='united!states!governors!1775!20_E57213AD49B24EB39920F117F0E701DE' />
            <second-end-point object-id='us-airports_65636316B8D74AF2A1176E9E7E31D698' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 2 (generated)' name='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='Total Monthly Death Toll' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_086B8D2789A744D0AE153557B5FD510E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Airports Dashboard' type='sheet' worksheet='# of Airports within each State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Airports Dashboard' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3_F5B03D4E998D46849F7CCDD52D58732E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death Report (old)' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Death Report (old)' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_7D098748666743099FF1FB542282EA34]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='US Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,US Death Map Chart,Hawaii Death Map Chart,Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_7DFE20DBD5644CE3AA03C49AFB1E9B89]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='Hawaii Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action6_BBB13193C6E74EB281DBDA031FD37000]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Death/Infection Report' type='sheet' worksheet='Alaska Death Map Chart' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Alaska Death Map Chart,US Death Map Chart,Hawaii Death Map Chart,Hawaii Death Map Chart,Alaska Death Map Chart,US Death Map Chart' />
        <param name='special-fields' value='all' />
        <param name='target' value='Death/Infection Report' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='# of Airports within each State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' min='0' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1AD2B499-30E1-4F3C-861C-407A8AC34176}' />
    </worksheet>
    <worksheet name='Airport Per State to Positive Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Airport Per State to Total Positive Cases Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='us-airports' datatype='integer' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='us-airports' datatype='table' name='[__tableau_internal_object_id__].[us-airports_65636316B8D74AF2A1176E9E7E31D698]' role='measure' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]'>
            <groupfilter function='level-members' level='[State (COVID19!state)]' user:ui-action-filter='[Action3_086B8D2789A744D0AE153557B5FD510E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='cols' value='Total Positive Cases' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US airports' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' max='1419311' min='-72542' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' field-type='quantitative' max='1986' min='-117' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</cols>
      </table>
      <simple-id uuid='{B636ABC4-D851-432E-BFF8-8C4FF51DD856}' />
    </worksheet>
    <worksheet name='Alaska Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_DCF9831441914AD8A8798BF49F0B92F3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{727F25AB-ABE1-4441-AAED-AC2E60C2ECDC}' />
    </worksheet>
    <worksheet name='Alaska Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='%null%' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;District of Columbia&quot;' />
                    <groupfilter function='member' level='[state]' member='%null%' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='#2020-01-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[tmn:date:ok]' member='#2020-02-01 00:00:00#' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-03-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-04-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-05-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-06-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-07-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-08-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-09-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-10-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-11-01 00:00:00#' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-12-01 00:00:00#' />
                  </groupfilter>
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='%null%' />
                      <groupfilter function='member' level='[state]' member='&quot;DC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alabama&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Alaska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AK&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arizona&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AZ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Arkansas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;AR&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;California&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Colorado&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CO&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Connecticut&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;CT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Delaware&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;DE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Florida&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;FL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Georgia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;GA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Hawaii&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;HI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Idaho&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ID&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Illinois&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IL&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Indiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Iowa&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;IA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kansas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;KS&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Kentucky&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;KY&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Louisiana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;LA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maine&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ME&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Maryland&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MD&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Massachusetts&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Michigan&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Minnesota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Mississippi&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MS&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Missouri&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MO&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Montana&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;MT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nebraska&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NE&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Nevada&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NV&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Hampshire&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NH&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Jersey&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NJ&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New Mexico&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NM&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;New York&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NY&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Carolina&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;NC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;North Dakota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;ND&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Ohio&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OH&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oklahoma&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OK&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Oregon&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;OR&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Pennsylvania&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;PA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Rhode Island&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;RI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Carolina&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;SC&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;South Dakota&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;SD&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Tennessee&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;TN&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Texas&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;TX&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Utah&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;UT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Vermont&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VT&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;VA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Washington&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WA&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;West Virginia&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WV&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wisconsin&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WI&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[State (COVID19!state)]' member='&quot;Wyoming&quot;' />
                      <groupfilter function='member' level='[state]' member='&quot;WY&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[State (COVID19!state)]' />
                <hierarchy name='[tmn:date:ok]' />
                <hierarchy name='[state]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alabama&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;AL&quot;' />
                    <groupfilter function='member' level='[tmn:date:ok]' member='#2020-03-01 00:00:00#' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-04-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-05-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-06-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-07-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-08-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-09-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-10-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-11-01 00:00:00#' />
                      <groupfilter function='member' level='[tmn:date:ok]' member='#2020-12-01 00:00:00#' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[tmn:date:ok]' />
                <hierarchy name='[none:State (COVID19!state):nk]' />
                <hierarchy name='[none:state:nk]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (MONTH(Date),State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' max='27000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{A9713877-2563-459B-84FD-DC41AFB4C7A5}' />
    </worksheet>
    <worksheet name='Death Rate by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column caption='Death Rate %' datatype='real' datatype-customized='true' default-format='p0.00%' name='[Calculation_1624392157645037573]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(MAX([death]))/(MAX([positive]))' />
            </column>
            <column datatype='string' name='[Party (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' default='&quot;Republican&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1624392157645037573]' derivation='User' name='[usr:Calculation_1624392157645037573:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='1' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]' z-order='2' />
            <reference-line axis-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]' z-order='3' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[usr:Calculation_1624392157645037573:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk])</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk])</cols>
      </table>
      <simple-id uuid='{49BEE33E-2AC3-422C-B54B-D12DF3E86875}' />
    </worksheet>
    <worksheet name='Death by GDP and Pop Density'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column datatype='real' name='[Pop Density]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pop Density]' derivation='Sum' name='[sum:Pop Density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[death]' derivation='Sum' name='[sum:death:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]' field-type='quantitative' max='90765' min='40000' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Pop Density:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:GDP:qk])</cols>
      </table>
      <simple-id uuid='{FA052490-9185-4859-B657-2A8F61E89A58}' />
    </worksheet>
    <worksheet name='Death/Infected/Population Metrics'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='Attribute' name='[attr:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]&quot;</bucket>
              <bucket>&quot;[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alabama&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Alaska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arizona&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Arkansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;California&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Colorado&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Connecticut&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Delaware&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Florida&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Hawaii&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Idaho&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Illinois&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Indiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Iowa&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kansas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Kentucky&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Louisiana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maine&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Maryland&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Massachusetts&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Michigan&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Minnesota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Mississippi&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Missouri&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Montana&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nebraska&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Nevada&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Hampshire&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Jersey&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New Mexico&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;New York&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;North Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Ohio&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oklahoma&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Oregon&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Pennsylvania&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Rhode Island&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Carolina&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;South Dakota&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Tennessee&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Texas&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Utah&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Vermont&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Washington&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;West Virginia&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wisconsin&quot;' />
              <groupfilter function='member' level='[none:State:nk]' member='&quot;Wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]' value='191' />
            <format attr='vertical-align' data-class='subtotal' value='center' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='text-align' value='center' />
            <format attr='text-decoration' data-class='total' value='none' />
            <format attr='text-decoration' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]' value='true' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-decoration' value='underline' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-width' scope='rows' value='0' />
            <format attr='border-style' data-class='subtotal' scope='rows' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='text-decoration' value='none' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk] / [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A5F8D895-4944-4C1A-AB30-16F5F9E2D43A}' />
    </worksheet>
    <worksheet name='Deaths Per Gini Coefficient'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='real' name='[Gini]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gini]' derivation='Sum' name='[sum:Gini:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:State:nk]' />
              <groupfilter function='member' level='[none:State:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' field-type='quantitative' max='0.55776000000000003' min='0.40000000000000002' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]' scope='rows' value='Gini Coefficient' />
          </style-rule>
        </style>
        <panes>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]</cols>
      </table>
      <simple-id uuid='{A4D1A66D-7C3F-4FFB-94E8-6B2AEB2923CC}' />
    </worksheet>
    <worksheet name='Hawaii Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_BBB13193C6E74EB281DBDA031FD37000]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{C8CED8A6-1A24-4BCE-9663-53590EC1CAE7}' />
    </worksheet>
    <worksheet name='Hawaii Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='crossjoin' user:ui-enumeration='all' user:ui-exclude='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:state:nk]' />
              <groupfilter function='level-members' level='[twk:date:ok]' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-16809713.700985081' min='-18259911.136666499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='2776465.8887046324' min='1907409.8083608563' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{92D5A6CD-0930-4D7A-8DDF-96577DA4A74F}' />
    </worksheet>
    <worksheet name='Infected to Hospital'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Hospitals]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[Hospitals]' derivation='Sum' name='[sum:Hospitals:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Hospitals:qk]</cols>
      </table>
      <simple-id uuid='{A179A824-76BB-42F9-87B2-4F3E728606C8}' />
    </worksheet>
    <worksheet name='Medical Condition that Contributed to Death in relation with Covid'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column datatype='integer' name='[COVID-19 Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[Condition]' role='dimension' type='nominal' />
            <column datatype='string' name='[State (Conditions!Contributing!to!COVI)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Condition]' derivation='None' name='[none:Condition:nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Conditions!Contributing!to!COVI)]' derivation='None' name='[none:State (Conditions!Contributing!to!COVI):nk]' pivot='key' type='nominal' />
            <column-instance column='[COVID-19 Deaths]' derivation='Sum' name='[sum:COVID-19 Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]'>
            <groupfilter function='member' level='[none:Age Group:nk]' member='&quot;All Ages&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]'>
            <groupfilter function='member' level='[none:State (Conditions!Contributing!to!COVI):nk]' member='&quot;United States&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:COVID-19 Deaths:qk]</cols>
      </table>
      <simple-id uuid='{C882F5DD-BA72-4DB0-9AE7-73C9B4D92D14}' />
    </worksheet>
    <worksheet name='Political Afflications and its Impact on Infection/Death Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Political Afflications Of Each State and its Impact on Covid Infection and Death Rate
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column caption='Governor' datatype='string' name='[Governor(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Infected]' role='measure' type='quantitative' />
            <column caption='Political Party' datatype='string' name='[Party(6) (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Party(6)]' new-bin='true'>
                <bin default-name='true' value='&quot;Democratic&quot;'>
                  <value>&quot;Democratic&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Republican&quot;'>
                  <value>&quot;Republican&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Party' datatype='string' name='[Party(6)]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[State Abbreviations]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Governor(6)]' derivation='None' name='[none:Governor(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[Party(6)]' derivation='None' name='[none:Party(6):nk]' pivot='key' type='nominal' />
            <column-instance column='[State Abbreviations]' derivation='None' name='[none:State Abbreviations:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Infected]' derivation='Sum' name='[sum:Infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='member' level='[mn:date:ok]' member='9' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Governor(6):nk]' />
                <groupfilter function='level-members' level='[none:State Abbreviations:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Governor(6):nk]' member='%null%' />
                <groupfilter function='member' level='[none:State Abbreviations:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Democratic&quot;' />
              <groupfilter function='member' level='[none:Party(6):nk]' member='&quot;Republican&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (Governor(6),State Abbreviations)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]' />
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Governor(6):nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Population:qk]</rows>
        <cols>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Deaths:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk])</cols>
      </table>
      <simple-id uuid='{74B9E1EC-6DEA-4693-906F-9CE3514BB839}' />
    </worksheet>
    <worksheet name='Total Monthly Death Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Death Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='false' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' scope='rows' value='Total Deaths' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.49375692009925842' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='0' />
                <format attr='line-visibility' value='off' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{070A88E5-483E-4C2A-81FE-BD5E2569370A}' />
    </worksheet>
    <worksheet name='Total Monthly Infected Toll'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Monthly Infected Toll</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[positive]' derivation='Max' name='[max:positive:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column caption='Positive Cases' datatype='integer' name='[positive]' role='measure' type='quantitative' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action5_FEB04893FD9F4E4FBE124D67071E0F54]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action3_F5B03D4E998D46849F7CCDD52D58732E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action4_2C5973F71515453B916BB89299B8563B]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='tick-color' value='#00000000' />
            <encoding attr='space' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='1' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
                <format attr='line-interpolation' value='linear' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk] + [federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk])</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[mn:date:ok]</cols>
        <show-full-range>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[date]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{5A6A41C2-B505-4668-8919-C1CBD1AE00AC}' />
    </worksheet>
    <worksheet name='US Death Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[mn:date:ok]' user:ui-action-filter='[Action2_5DBB217AC9DE494DBE6775DDE1B8656D]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_BBB13193C6E74EB281DBDA031FD37000]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]'>
            <groupfilter function='level-members' level='[state]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                  <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                </groupfilter>
                <groupfilter function='union'>
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-04-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-03 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-10 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-17 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-24 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-05-31 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-07 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-14 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-21 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-06-28 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-05 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-12 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-19 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-07-26 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-02 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-09 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-16 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-23 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-08-30 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-06 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-13 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-20 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-09-27 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-04 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-11 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-18 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-10-25 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-01 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-08 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-15 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-22 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-11-29 00:00:00#' />
                  <groupfilter function='member' level='[twk:date:ok]' member='#2020-12-06 00:00:00#' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),State Abbrev)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
            <format attr='map-style' value='dark' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='Search&#10;'>
              <formatted-text>
                <run>Search&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{71A4E8A4-1896-4475-8F52-2EFAD3C2A21A}' />
    </worksheet>
    <worksheet name='US Mainland Time Series Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='united_states_governors_1775_20+ (Multiple Connections)' name='federated.1jvlmkl0m64u3e1dn904e1r0ax9r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1jvlmkl0m64u3e1dn904e1r0ax9r'>
            <column datatype='string' name='[State (COVID19!state)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='quantitative' />
            <column caption='Death' datatype='integer' name='[death]' role='measure' type='quantitative' />
            <column-instance column='[death]' derivation='Max' name='[max:death:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[State (COVID19!state)]' derivation='None' name='[none:State (COVID19!state):nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State Abbrev' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:date:ok]' member='1' />
              <groupfilter function='member' level='[mn:date:ok]' member='2' />
              <groupfilter function='member' level='[mn:date:ok]' member='3' />
              <groupfilter function='member' level='[mn:date:ok]' member='4' />
              <groupfilter function='member' level='[mn:date:ok]' member='5' />
              <groupfilter function='member' level='[mn:date:ok]' member='6' />
              <groupfilter function='member' level='[mn:date:ok]' member='7' />
              <groupfilter function='member' level='[mn:date:ok]' member='8' />
              <groupfilter function='member' level='[mn:date:ok]' member='9' />
              <groupfilter function='member' level='[mn:date:ok]' member='10' />
              <groupfilter function='member' level='[mn:date:ok]' member='11' />
              <groupfilter function='member' level='[mn:date:ok]' member='12' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_A889BFCA765748FFA82F4B387354C258]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[State (COVID19!state)]' />
              <groupfilter function='level-members' level='[tmn:date:ok]' />
              <groupfilter function='level-members' level='[state]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:state:nk]' />
                <groupfilter function='level-members' level='[twk:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                <groupfilter function='member' level='[twk:date:ok]' member='#2020-03-01 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]'>
            <groupfilter function='level-members' level='[none:state:nk]' />
          </filter>
          <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' />
          </filter>
          <slices>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Exclusions (State1,WEEK(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (MONTH(Date))]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Action (State (COVID19!state),MONTH(Date),State Abbrev)]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
            <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-7134432.7690936662' min='-14206738.130375603' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='7923064.2579004914' min='1237693.3698786832' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='break-on-special' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' value='Deaths Per Month&#10;&#10;'>
              <formatted-text>
                <run>Deaths Per Month&#10;&#10;</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.64999997615814209' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' />
              <lod column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' />
              <geometry column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]</rows>
        <cols>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tmn:date:ok]</column>
        </pages>
        <page-trail-options enabled='true' />
      </table>
      <simple-id uuid='{1397F377-72EE-4189-AD53-4A43FE85925B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Airports Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='88325' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='10826'>
            <zone h='88325' id='6' type-v2='layout-basic' w='89702' x='468' y='10826'>
              <zone h='44162' id='3' name='Airport Per State to Positive Cases' w='44848' x='468' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='88325' id='5' name='# of Airports within each State' show-title='false' w='44854' x='45316' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='44163' id='47' type-v2='text' w='44848' x='468' y='54988'>
                <formatted-text>
                  <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                  <run>Æ&#10;&#10;</run>
                  <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                  <run>


Outliers: Alaska, New Jersey
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='88325' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='10826'>
              <zone h='6900' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='9362' x='90170' y='10826'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9977' id='10' type-v2='text' w='99064' x='468' y='849'>
            <formatted-text>
              <run fontalignment='1' fontsize='20'>Airport Correlation to Infection</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='71' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='9977' id='10' type-v2='text' w='99064' x='468' y='849'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='20'>Airport Correlation to Infection</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44162' id='3' is-fixed='true' name='Airport Per State to Positive Cases' w='44848' x='468' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='88325' id='5' is-fixed='true' name='# of Airports within each State' show-title='false' w='44854' x='45316' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6900' id='9' name='# of Airports within each State' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type-v2='color' w='9362' x='90170' y='10826'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='44163' id='47' type-v2='text' w='44848' x='468' y='54988'>
                  <formatted-text>
                    <run bold='true' fontsize='12'>Airports generally act as the entrance for the spread of foreign diseases. </run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='12'>The trend line analysis shows a R-squared value of .5 and a P-value of .0001. Therefore, it can be assume that we can reject the null hypothesis and that airports do play a considerable part in the spread of COVID-19.</run>
                    <run>


Outliers: Alaska, New Jersey
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7DE4F89-6482-48AC-BCEB-DD05B978FDE1}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 5'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='72399' id='3' param='horz' type-v2='layout-flow' w='6788' x='92744' y='12102'>
            <zone h='72399' id='6' param='vert' type-v2='layout-flow' w='6788' x='92744' y='12102'>
              <zone h='8705' id='11' name='US Mainland Time Series Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type-v2='color' w='6788' x='92744' y='12102'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11677' id='12' name='US Mainland Time Series Map Chart' synchronized='1' type-v2='currpage' w='6788' x='92744' y='20807'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='72399' id='5' param='vert' type-v2='layout-flow' w='8836' x='468' y='12102' />
          <zone h='72399' id='7' param='vert' type-v2='layout-flow' w='83440' x='9304' y='12102'>
            <zone h='72399' id='10' name='US Mainland Time Series Map Chart' show-title='false' w='83440' x='9304' y='12102'>
              <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='11253' id='8' param='horz' type-v2='layout-flow' w='99064' x='468' y='849' />
          <zone h='14650' id='9' param='horz' type-v2='layout-flow' w='99064' x='468' y='84501' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='19' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone fixed-size='280' h='72399' id='10' is-fixed='true' name='US Mainland Time Series Map Chart' show-title='false' w='83440' x='9304' y='12102'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8705' id='11' name='US Mainland Time Series Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type-v2='color' w='6788' x='92744' y='12102'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11677' id='12' name='US Mainland Time Series Map Chart' synchronized='1' type-v2='currpage' w='6788' x='92744' y='20807'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{202F6B54-0778-43F1-B68A-AC1CA3BF13CE}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death Report (old)'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='49151' id='9' param='horz' type-v2='layout-flow' w='99064' x='468' y='50000'>
            <zone h='49151' id='7' type-v2='layout-basic' w='89702' x='468' y='50000' />
            <zone fixed-size='160' h='49151' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='9362' x='90170' y='50000'>
              <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='49151' id='54' param='horz' type-v2='layout-flow' w='99064' x='468' y='849' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='100000' id='3' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='713' h='100000' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='41720' x='0' y='0'>
            <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
              <formatted-text>
                <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='7643' id='17' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
              <layout-cache fixed-size-h='64' fixed-size-w='574' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='87899' id='12' name='Total Monthly Death Toll' w='41720' x='0' y='12101'>
              <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone h='100000' id='5' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
            <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='78' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98302' id='77' param='vert' type-v2='layout-flow' w='99064' x='468' y='849'>
                <zone forceUpdate='true' h='4458' id='4' type-v2='text' w='41720' x='0' y='0'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='18'>2020 Covid Death Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='100000' id='5' is-fixed='true' name='US Death Map Chart' show-title='false' w='58280' x='41720' y='0'>
                  <layout-cache minwidth='201' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2335' id='10' name='US Death Map Chart' pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:death:qk]' type-v2='color' w='9362' x='90170' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='7643' id='17' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='41720' x='0' y='4458'>
                  <layout-cache fixed-size-h='64' fixed-size-w='574' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='87899' id='12' is-fixed='true' name='Total Monthly Death Toll' w='41720' x='0' y='12101'>
                  <layout-cache cell-count-w='11' minheight='223' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E79A1F6F-B349-4E2D-9E5C-1053EADE6491}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Death/Infection Report'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#e6e6e6' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='17' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='15' type-v2='layout-basic' w='98828' x='586' y='1042'>
              <zone h='83911' id='5' param='vert' type-v2='layout-flow' w='49415' x='49999' y='15047'>
                <zone h='83911' id='10' name='US Death Map Chart' show-title='false' w='49415' x='49999' y='15047'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='9708' id='7' name='Death/Infected/Population Metrics' show-title='false' w='98828' x='586' y='5339'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='5' />
                </zone-style>
              </zone>
              <zone h='83911' id='8' param='vert' type-v2='layout-flow' w='49413' x='586' y='15047'>
                <zone h='41955' id='9' name='Total Monthly Death Toll' show-title='false' w='49413' x='586' y='15047'>
                  <layout-cache cell-count-w='11' minheight='180' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
                <zone h='41955' id='11' name='Total Monthly Infected Toll' show-title='false' w='49413' x='586' y='57002'>
                  <layout-cache minheight='180' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='10' />
                    <format attr='padding' value='10' />
                  </zone-style>
                </zone>
              </zone>
              <zone forceUpdate='true' h='4297' id='14' type-v2='text' w='98828' x='586' y='1042'>
                <formatted-text>
                  <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='14'>2020 COVID Death and Infection Report</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='2' />
                  <format attr='padding' value='2' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='19094' id='12' name='Alaska Death Map Chart' show-title='false' w='8741' x='51926' y='74110'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </zone-style>
        </zone>
        <zone h='19094' id='13' name='Hawaii Death Map Chart' show-title='false' w='8741' x='61185' y='74110'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='0' />
            <format attr='padding' value='0' />
          </zone-style>
        </zone>
        <zone friendly-name='Search ' h='9223' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11852' x='85556' y='17314' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='36' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='35' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone forceUpdate='true' h='4297' id='14' type-v2='text' w='98828' x='586' y='1042'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontname='Tableau Bold' fontsize='14'>2020 COVID Death and Infection Report</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='9708' id='7' is-fixed='true' name='Death/Infected/Population Metrics' show-title='false' w='98828' x='586' y='5339'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41955' id='9' is-fixed='true' name='Total Monthly Death Toll' show-title='false' w='49413' x='586' y='15047'>
                  <layout-cache cell-count-w='11' minheight='180' non-cell-size-w='59' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone friendly-name='Search ' h='9223' id='18' name='US Death Map Chart' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type-v2='highlighter' w='11852' x='85556' y='17314'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83911' id='10' is-fixed='true' name='US Death Map Chart' show-title='false' w='49415' x='49999' y='15047'>
                  <layout-cache minheight='201' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41955' id='11' is-fixed='true' name='Total Monthly Infected Toll' show-title='false' w='49413' x='586' y='57002'>
                  <layout-cache minheight='180' type-h='scalable' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19094' id='12' is-fixed='true' name='Alaska Death Map Chart' show-title='false' w='8741' x='51926' y='74110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='145' h='19094' id='13' is-fixed='true' name='Hawaii Death Map Chart' show-title='false' w='8741' x='61185' y='74110'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F000C517-4B7D-4B1A-A5FC-BCAFB59B1AA2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Economic Factors Dashboard'>
      <style />
      <size maxheight='868' maxwidth='1324' minheight='868' minwidth='1324' preset-index='2' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98156' id='3' param='vert' type-v2='layout-flow' w='49396' x='50000' y='922' />
          <zone h='49078' id='5' param='horz' type-v2='layout-flow' w='49396' x='604' y='50000' />
          <zone h='49078' id='6' param='horz' type-v2='layout-flow' w='49396' x='604' y='922'>
            <zone h='49078' id='7' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
              <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='37' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98156' id='36' param='vert' type-v2='layout-flow' w='98792' x='604' y='922'>
                <zone fixed-size='280' h='49078' id='7' is-fixed='true' name='Deaths Per Gini Coefficient' w='49396' x='604' y='922'>
                  <layout-cache minwidth='163' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7BA36339-ACCC-451D-9381-DE03DB3DB634}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style>
        <style-rule element='story-description'>
          <format attr='border-width' id='story-description_6' value='0' />
          <format attr='border-style' id='story-description_6' value='none' />
        </style-rule>
      </style>
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='1' param='vert' removable='false' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='4297' id='3' type-v2='title' w='98828' x='586' y='1042' />
            <zone h='13151' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98828' x='586' y='5339' />
            <zone h='80468' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98828' x='586' y='18490'>
              <flipboard active-id='3' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='2020 Death/Infection Report' captured-sheet='Death/Infection Report' id='5'>
                    <capturedDeltas>
                      <worksheet name='Alaska Death Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Alaska&quot;' />
                            <groupfilter function='member' level='[none:state:nk]' member='&quot;AK&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Hawaii Death Map Chart'>
                        <filter class='categorical' column='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Inclusions (State (COVID19!state),State Abbrev)]'>
                          <groupfilter function='crossjoin' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[none:State (COVID19!state):nk]' member='&quot;Hawaii&quot;' />
                            <groupfilter function='member' level='[none:state:nk]' member='&quot;HI&quot;' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='US Death Map Chart'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Latitude (generated)]' field-type='quantitative' max='9545650.4240261111' min='-1433869.925298746' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                            <encoding attr='space' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Longitude (generated)]' field-type='quantitative' max='-7014977.0959144514' min='-16013482.886579752' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Airport Correlation To Infection' captured-sheet='Airports Dashboard' id='1'>
                    <capturedDeltas>
                      <worksheet name='Airport Per State to Positive Cases'>
                        <style delta-type='added'>
                          <style-rule element='axis'>
                            <format attr='title' class='0' field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[__tableau_internal_object_id__].[cnt:us-airports_65636316B8D74AF2A1176E9E7E31D698:qk]' scope='rows' value='# of US Airports' />
                          </style-rule>
                        </style>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Death Rate % and Population Density by State' captured-sheet='Death Rate by State' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone flipboard-zone-id='5' forceUpdate='true' h='4557' id='6' story-point-id='3' type-v2='text' w='16837' x='80966' y='34635'>
          <formatted-text>
            <run fontsize='9'>Death Rate % = Death/Infected</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{44A79766-1119-4F82-BDBE-4F7EF583F60D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Airport Per State to Positive Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State1 (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D3038513-041A-4A1D-B829-DFD6ABD9DBC5}' />
    </window>
    <window class='worksheet' name='Political Afflications and its Impact on Infection/Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Party(6):nk]' type='filter' />
            <card pane-specification-id='4' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party(6) (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{506A2545-3A3B-43E5-A3F8-91C2E5B1D6C2}' />
    </window>
    <window class='worksheet' name='Death Rate by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[Party (group)]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D732364-654D-4095-9ACF-A45179BBCC58}' />
    </window>
    <window class='worksheet' name='Deaths Per Gini Coefficient'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Gini:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
      </viewpoint>
      <simple-id uuid='{1497C8DF-4485-47A1-AA4F-B81F1243F789}' />
    </window>
    <window class='worksheet' name='Death by GDP and Pop Density'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8DE7FE10-ED05-48F7-AB1C-F5518CE74174}' />
    </window>
    <window class='worksheet' name='US Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4F0610E-E3BA-4CED-8831-372498677E79}' />
    </window>
    <window class='worksheet' name='Hawaii Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{17F2DF32-A3B6-47BF-AF5F-7A82DE31B089}' />
    </window>
    <window class='worksheet' name='Alaska Death Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group)]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3833707E-FCB3-4321-9E81-C6D6EA98CF37}' />
    </window>
    <window class='worksheet' name='US Mainland Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-01-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12CF59F3-AC08-40CF-9003-A07700D363FA}' />
    </window>
    <window class='worksheet' name='Alaska Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1430A37-D62C-4A13-B3C9-CF0D90F41B37}' />
    </window>
    <window class='worksheet' name='Hawaii Time Series Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-08-01 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:death:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:state:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[tyr:date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07815A29-B9E9-4B76-980C-B331F625311B}' />
    </window>
    <window class='worksheet' name='Total Monthly Death Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{CE1E20EF-C2A3-4A7E-8A6A-D4F0BB32F6BE}' />
    </window>
    <window class='worksheet' name='Total Monthly Infected Toll'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C1838E95-C246-4D38-BC48-D3BD1F44DBC1}' />
    </window>
    <window class='worksheet' name='Death/Infected/Population Metrics'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[State (COVID19!state) (group) 2]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state1):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F7DE0-FBC3-4B2E-BCD6-7D9A25099CCC}' />
    </window>
    <window class='worksheet' name='# of Airports within each State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[attr:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A3B6861-1B43-442B-94A1-1C04A970296E}' />
    </window>
    <window class='worksheet' name='Infected to Hospital'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[:Measure Names]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[sum:Infected:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6706D4C-D15D-4D55-B522-88BD3A0680D6}' />
    </window>
    <window class='worksheet' name='Medical Condition that Contributed to Death in relation with Covid'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Age Group:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:Condition:nk]</field>
            <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (Conditions!Contributing!to!COVI):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C985839-02A7-436E-9C51-FBB5B690285C}' />
    </window>
    <window class='dashboard' name='Economic Factors Dashboard'>
      <viewpoints>
        <viewpoint name='Deaths Per Gini Coefficient'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{CD636EFA-5D86-4B7F-ADC4-F57687B237EA}' />
    </window>
    <window class='dashboard' name='Airports Dashboard'>
      <viewpoints>
        <viewpoint name='# of Airports within each State'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[max:positive:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Airport Per State to Positive Cases'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{A0A73BE6-EA77-4AF2-A55E-C8722E2D6B7D}' />
    </window>
    <window class='dashboard' name='Death Report (old)'>
      <viewpoints>
        <viewpoint name='Death/Infected/Population Metrics' />
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1777F54D-B7AB-4DF6-AEB7-EE97E4599829}' />
    </window>
    <window class='dashboard' name='Death/Infection Report'>
      <viewpoints>
        <viewpoint name='Alaska Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death/Infected/Population Metrics'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Hawaii Death Map Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Death Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Monthly Infected Toll'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='US Death Map Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.1jvlmkl0m64u3e1dn904e1r0ax9r].[none:State (COVID19!state):nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{240C9E87-1CC3-4E69-A5B2-CCBBBB493FEA}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{67A894E8-08FB-49BB-9AEA-DD5295CA1228}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 5'>
      <viewpoints>
        <viewpoint name='US Mainland Time Series Map Chart'>
          <current-page>
            <multibucket>
              <bucket>#2020-12-01 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{351FF79C-F4B4-45B1-9734-FDEE4AA23B08}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='# of Airports within each State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZgUlEQVR4nO3d13dbR4Ln8e8NuBeBIMBMMYmUqJwsy5KsYFv2OK7H9vTZntnUe3b27NP+
      A/vP7NM+zMzuzvr0Tnc7jFPLSRrJbVuURFKBORMkSOR0Q+0DVnRToiIDAKI+50hHIgGwQNTv
      Vt26VXWVVColdF1HkqqRrus6pmmWuhySVBJqqQsgSaUkAyBVNRkAqarJAEhVTQZAqmoyAFJV
      kwGoAEKIUhdh25IBKHOZTIbvr33DwuKCDMImUHK5nJAXwsqTEILvrl+k0JAkMZ8mJBo43nsS
      0zTx+/ylLt62IFuAMjY2PUImEENRFIyAh3w+x2eXP+KLvo8oWAWgGBLZMjw7OQmoTBQKBW4O
      3KSzvRNXuEwtTrCgT2EEih9RbrlA0A5St7+G+EyKqakppmLjpN0EdsbFRw1nT5zF7w+U+J1U
      FtkFKgO2bfP1zc+J5ZdRPQpmwIMZMFAUZeUxuVQezaPhMfWV/xt+D6qq4tguuTmbt46/h2EY
      pXobFUl2gUrMdV2++/FrJqYmqG3xE2qpwVtjrqr8AN4ac6Xy3/u/qhY/Pk1XWV5a5otL/0wi
      mUAIQSqVwnEcoktRYvGY7CY9hOwClZDjOPx4+yrLxjxW1gHl8c95mI6jLWRiWS4Nfo3m6ty8
      3k/33p14moo/p85q4WD3ERrqGx4IVzWTXaASuHbzZ6LLi7jBAtTZ2AWbyGiUzkM7NuT1Xccl
      OhWjaWf9qq8n59Ow5OHscy8TDoXJ5XL4/X5UVa3aUMgAbCEhBEPDQ1ybu0Kw1Y/h86x8zy7Y
      6MYWNMgCsskcTlYgNBeloFFvNPPioXPouk48HufGrT6E7tJa18bu7t6VrtZ2JAOwhVzX5ePL
      v8PfrZW6KKsIV5CNWAS0IEl1mUC9D0VRcCwHbdHPhedf37YhkAHYIkII+oduMKMPb82RfoM4
      tou1IDjW+QJtze3brqu0PWNdpiaWRyuq8kNxhMm7Q6MveoUvLv9zqYuz4WQAtojruriqXepi
      PDNvyCClxkpdjA0nA7BF5iNz4HdLXQzpPjIAW6BgFeiPXMNXK8+1yk1ldUgrgBACRVEQQmBZ
      FkuxJQbmrqE2ONvuBHI7kAHYYJ9d+gTHKKCqCjmRxRPQ8DV4UdZzmVfaNDIAG0gIgWtaeHcU
      x/kN5MzMcifPATZQPp8nT7bUxZCeggzABhFC8MNPVxGKHOmpJDIAG0RRFM6feYn94WPkUwU5
      /bhCyABsIEVR2L/rIM+FzqAumQh3u4Vgu70fGYANpygKO1rbOHfgVfSoH9eVXaJyJgOwSQyP
      wbnDF/Av12MXKncKxHYnA7CJdF3n9KGzOEvy11yu5CezyTRNo8nbWupiSA8hA7AFGoLNpOZz
      FLIWju1iWw6uI88NyoEMwBbo6erhjYN/SbdzgMxth8ZEJ+nZQqmL9dS23xiQDMCW8Xl97Nu7
      n0DYz8T8GHqt3NWtHMgAbBLXdZmYmuDqzct89e0X2LaNoii8euINGv0teFIB8mPgj9WTnbVK
      XdyqJSfDbTAhBDNzM1y+/i0iZNHQGca1NTStOEFO0zRC4RDTw5NoYUGPdzfxzHKJS129ZAA2
      UD6fZ2RkmIG5PuoP1wBQyBbQszWr1gJ0tHWgGnB9sI/Jzjt42jTWtSuW9MxkADbI6Ogod5f6
      KRhZzLpf9vvxeD0Ugmm++PkTXOFQY9RiFxwSapTwAV/FLZLfbuRvf50sy6Jv4BqTsVFqd3nx
      q95V31cU5f8HwkYFcsRxbBev4kHV5ClYqckArIPruvz24w9RWiwaesNP/DxNlxW/XMhPYh0U
      ReHk8ycJ+GooZOUU6EokW4B1UBSFns7dtDa2MT07zez8FNOZcZp31T/+yVJZkC3ABvD5fHgN
      L/FsjIauUKmLIz0FGYB1EEKQTqcBaG9vp62h/YnmCwghcB2XxExGrhcoMRmAdVAUhUAgsPLv
      kK+Oh50GCCEQbvFPdtamLt7Gq3vfIrcg1wqUkjwH2EDdnT2khpLML82Q09Kojka9pxmPajC7
      NE0qk6CluZU3jr1FPB6j7+41PCF5DColGYANpGkax/YdR4jnyGQyaLqG1yxeF8jn80xNTxKs
      rcU0TDy6B0vLo/vK614Bj7b9Rrnk4WcT3Osa3av8AKZpsntXL82NzQDU1dWzp2k/Vk52gUpJ
      BqCEmhqasZJOqYtR1WQAHiGZTDJwux/XdVmILrAQjaz7NXO53Mq/NU1DkR9BSclzgEeYj8wx
      nO9n6OogWi2InMIr5psEa4LP9Hq2Y/PNpYu0trTRWN/A8NwdvA3yIygl+dt/hJaWVibuhGlr
      6iSRjbFUO8vF4U8I04Shejl95MxjXyORSOC6DuFwHaqi4mswmdTvMJNW8TTq2/bmc5VCBuAR
      gjVBXj3+xsp+//13bzDFKIqiEPQ9vhVIpVJ8eu13uK5Dt28fSsAlF4rj88gbZZQLGYDHuLeQ
      RVEUDu89iueuwe6eXnT98b+6n+/+gK/egzcYZDEzgTdgrqwMq0Tbca6fbH+f0r49+5+o8gPE
      EjEMv4Gmq/hrfXL+fxmSn8gmGRq/y2xkFt2o3CN+NZAB2ATxRJw7iRv0nGordVGkx5DnABss
      nUlzbfgHvM2exz9YKjnZAmywVCpJPBMvdTE2xzbcuEIGYIMNjQ/h1pTXtoeO7W7Mck05CiQ9
      zs62nahO6U98c6k8whXM31pi4vo0dkHOOVqLDMAGa9vRTsAKszC+VLIbYxRSFuF0K7GBLHhc
      ep7vxGPqCFewNBUnHkkCxZDYVnUHQwZgg6mqyulDZ2lTe5gbWsQu2Fu6Fbq7pNLrPUJDXQM7
      23oQSY2F0SWEKxi/PkN0LMbE9Rkmr0YY/2kG136Ksinbrw8kA3Afx3HW3V+uqanhQO8Bssk8
      c33LLPycpLD4y5G2kN2czXCzy3k6zd3MxCYZF7dYrp2l6XAIb61JYjFFfDyNm1B58/S7vHXm
      XbwiwMS1WRy7elsBGYD7LCxEuDFwfV2v4bgO3/74DZ2HW3F9Fv4uD4q/GKrUUoaFsaWNKOoq
      Vs6myeqgo6OTJTuCbupouoqmqwQbAnhrTBSfS29vLx7dQ3NzM29eeBsl7mH0pyny6QIzAwsb
      Xq5yJ68D3KelpZXl+DIXv/sjr5y7sGpT24exbZtEIkH/eB/xdIwDnYe5cPo1rgx/S8eB1pUp
      EEIIInej7DyxsRfIYvMJDNdHV0c3+VwOw//gNQiPqdN+oJWRwWF8hp/xyXFml6bp3d1Le3s7
      E1MT+Izi5l4Pe8+qR2V4dAiPxyBjpZiKTHDqwFlqa2s39P1sJSWXywnTlLMT12Nscowfp78n
      1FaDqqkY0RrOH32VQqHAVzc+xdNSnEwnXEHkRhxvi0ao9dnWFKwll8zTrRzg4L5DfHf9Ivn6
      xKpKPD+8SENnmFvfjKCkDA4dPUBP1y462jrxeH4Jy2J0ka8ufY7ZpaDaOqqroioqBT1PajmN
      r9bEH/YhnOIlgWQ0zXvH/xqv17tGqSqDbAE2wM6OnWiqyuD8DWLJOJ3hBgAMw2B/01H65q6g
      qir1ejPvnHuZH0euABtzrSCfKVCICNqPtROLxYipC6hpBdNvYOVtRn+a4tSesxh5g13nDnNn
      +A4FCnR39TxwpPf7/OzfeYiOjnZqa0MrM1czmQwT0+PcjPyEp0XHztvM98VIFhL8LvUhH7z8
      a9Y6iKYzaUzDfOLJg6UgW4ANJIQgmUyu6hIIIbAsC0VR0HUdRVGYmpnkRuoqZsBY18/LxLOk
      hgucO/EynW1d5HI5Lvd/x8z8FOGeAOPXZniu5wVOnji1cqTP5XIYhrHmQhzXdVEU5aFdoFQ6
      xdjUKJqmYeomn//4Mbte6CSQrOfFg+dXXtO2bf7Uf4VFMUeNUstLh18r22ng8iR4AymK8kB/
      WFEUDMPA4/GsVCxN01DX+at3bAc16uXEgdN0tnUBEF2KkigsE+4JEL2V5JVjr3P2xXOrujle
      r/ehq9BUVX3kOU9NoIbD+46wf/cBBIJwfQhN18jULnN18NLKLnejE6Mse+fwBBVGJ0ZWrYMu
      NzIAJTC7MEOhUBwKFULguquHXf/8uoFjr31L1fRCnhN7T7Oza+fK1/KFPGRVjLkQf/UXv+bQ
      wUObUn5FUdjd3csHZ/4GYzFIbDZJKhhlYOgmc5E5xpaGMAIe0vEsLi4Xb35GMpXclLKsl+wC
      lUAikeDzwd/jr/eixI3iFVlfjlBrECfvMHFzhta9TQRCPqYG52jb24zmWd2FyGcKFDI2rXon
      pw6eIZVKoes6pmk+shuz0YQQLEQX+HnuMrlEgZnxWXSfRjaVo+d4J9PXIvS+3EUgVs+ZI+e3
      pExPQ7YAJTA2PkoumUebDVBHE2cPvsyptpdwoypK3OBQ71FUS6M23kJj6MHKD2D6DQy/jqoU
      P0LHcTBN87HdmI2mKArNjc3sDOxBDQl6z3RhGAatwTZMv0FNsIZEJEnCv8ClG9+W3WbAsgUo
      gXQ6TTKVRFVVQrUhDMMonhzPTvLjnSv85flf4bouN0f6WPROr3lHGStnURtr5fTxF1mOLfOH
      T3/Pv37/19TU1JTgHRVbglujAwwlB0BzUZZMphenqK+tJ1vI0nqwgcR8kv31xzi852hJyrgW
      GYAyIoTAcZyVYcOvrn6G01LcY/Qeu1AchB+/Ostv3v9bHNvhf3/8D7heCxHV+c2/+4/4vL6S
      lX85tsyXF78gmUpS3xLGNEyGb4+Qc7PsfL6NoCfEG8feLZtRIdkFKiP3hkqhOCSZVhIPLKTP
      xnKokz7eOvMumqrxx2++IroQZVftPv7Tf/jbVfuRbjVFUaivq6e2NoTZCRPzYyzbi7T2NuGt
      NZi5ESFlx7k1PFiyMt5PBqBMZbIZMNxV/fnEbJo2tYe/OP8m9XX1fP79p/TfvUHT7joimZni
      Votb2P9/mBPPncCjGgSbAixMR1EcjYauMCZ+FsdjDC8Pks/nS11MQAagbM1GZsgkswC4rmBp
      OMnhxhO8cPQUs5EZ/jj8CYO3Bjj0xh5qm4NkrDTzkfkSl7qoob6BA43HsNI2Zo0BeQXd0Khr
      qCMYDJJ1MwyM3Ch1MQEZgCcmhGBoeGhLftat0QGGCzdp7K4DIDaT4MKhN9m9sxdFUYhE51FN
      hV2nOrHzNvHhDO+8+AE7WndsSfkeR1EU9vbuIzabpLGrDtu2WZ5McvL4SRRLJdQUZCo3Wmzl
      SkwG4CnU12/+3R9j8RhDqQGMmuKV42wihz9fS124bqV7s7tzD8PfTTL2p2lSt21eeeE1drTs
      KIvuzz2aqnF431E8wgC/y7kjLzM0cxvXEkz+PIfmU7g7eqfUxZSjQOVken6KqwOX8baraIZG
      btamO9TL4f1HH5i+MDR0l7GZUV47/3pZbrBbvMLt8uGX/wvNVMjHbObn52nZV09sMkVdey1+
      I8A7Jz/AMNY3J2o9yu83V+ZmZmZIJBMb+prZXJav+76kb/kKob1e3IJg4U9JDrcex2/UrFH5
      h5iemaa7fVdZVn4odoM0TeP4rpPkcjl2tfVSUxPAyQmcvKAwK1BqXT7v+4jZ+ZmS3WRctgAl
      ZlkWF/s/Q210UBQFu+Aw9NUUH7z9K9ra2tbs1liWtTJcWk7dnrU4jsPvP/sn6sP1zM9GcLx5
      XAcmRyfxN3rpOd6Bqqh4s0HOHbyw5rTqzVSeh49tTgjBxOQEfdevMTYxhuUrjvbkMwWm+yLs
      6dm3qvLH48WNthynuHb33szScq/8UJz5+v5bf0XQH6IuXMdg3x38AR+9B3ZjpRySi2likQRu
      Y56Prv52y2eOlu9KhW3Ktm0uD35L2reMMAXT1xZQNQgbDejC4PUTb9PR0bmqcodCxbvPD9wa
      4PDBwxVR8f+cqqq0NrdSG6zl7ugdfN0aynyAhpY6FseWCbUGcW0H02dueQsgA7CFhBD8y43v
      yTcmWe7LoNUJTM1kX8dBdnZ209DQ8MjVU0cOHdnC0m6sHTt2MDwyjNfjJTGXZvLmEM2hVrwB
      L3bBZmk6jt8MPHJN8maQXaAtYlkWf/r5B4Zn7rA4tkTIU88L7edIRFNk0zlmZ2fJZEo/Lr6Z
      GuobcIVg6Icx2g83gyqYu7tIaiaH6woUj9jyLpA8Cd5EruswMjbCVGKM6FSMnJvFzQoO7D1E
      V0cXTY1NWJZFX981AoEAi9EoL7/0cqmLvakWFxf4+w//Hl+dhx1N7XgVP5GFedzGPAdaj3Di
      wKktLY8MwCa6fquPGX0Y27KJDMR468V/RV19PR7ds2qZomVZRKNR/H5/RW8x8iSEEFy6+j26
      5qHg5jh74jyJZILB24OcfuH0ls8SlQHYJI7j8PHlf6Ih2ERv2z5CtaGVdQB/voyxGt3r5291
      f38tMgAbbGJqnBs3b3Bw/yGam5rx+/0rH7IQAiFE2V68qkZyFGgDCCG4fuca07NTmMLH+TPn
      KVgWhmmsOsJVyth9NZGHonVwXZdYPAbAxOQ4IxPDtLbsIBQK09TYhEeXt0kqd7IL9IyEEFy6
      9i1DE3dpDrTiMTzs6d5X9f37SlOWXSDLsshmswSDwbLrMuTzeUzTpP/uDZbiS/zbt39DNpsl
      FAqVXVmlxyvLLtDd4Tv8n8//gf6Bm6UuygohBCOjI3z97UUcxyGbyPP2uXcxTZNwOCwrf4Uq
      yy7Qvamx2WyWQqFAOBwuaVli8RiDtwd5/tjzKxtPSdtDWbYA90ZLFqOL2M7m32dLCMGHf/hH
      pqenVoYqr/xwZeX7wZogZ06dwev1ysq/zZRlC/Ckstks/3LlMqdPvUhkIUJXZxf5fJ7puSl6
      e/YAxZEay7IYGR+mp2sXs7OzzMxPk88W2Ld3H4qisLS0RG19EGGBZVt0dnSubFYlbW8VHYB7
      y+40TSMWizE3P7dSqe+ZmJygs6OTT7/8hKCvlngyhuUWeP7wCTo7u2Qlr3IVHYD7RZeijI6N
      cuL4CRRFwbIs5ubm6OjokBVdWtO2CsD97m3EKqceSA9TltcBNoqs+NLjyBoiVTUZAKmqyQBI
      VU0GQKpqMgBSVdvWo0BSdZmPzBOJPrhFvPJnf99PBkDaFhzH4catPmYDo5jhJ6/WsgskVayF
      xYWVi52RhQiLc1FyS4Wneg3ZAkgV6+tbn6MZKk1mKwGzBn8gwPjEMLU9viee+iIDIFWszrpu
      Rj0DzGjDCAELzjKa83RVWnaBpIp1oPMwVry4XsTKWuSSedKZDMJ98nsNyABIFSsYDBJww8X7
      K1suy6NJGnbXPnBr2UeRXSCpYimKgpkMkPIsYQY87H2nC2/o6W63JFsAqaJ1tu5EWKDqKr7w
      06/Xli2AVNFcxyU7byEUgbfORFVlAKQq0t7eTigXRPUoxCcShLtrHniM67hkY3kKSWvVDUgE
      MgBShfPoHgyfB1+dSWo5TXwmhZNzUYSCUASqouHx6ISaQ3h3PLjyUQZAqmiO6+CK4tXgHXua
      yacLGH6PvBAmVYdUOonH90s1NgNyFEiqIolMHN18tuO4bTkyAFJlK9iFpx75uSc2m5ABkCpb
      wc0/83Pr2kIyAFJly9rpZ36upqsyAFLlchyHxXRkXa8hAyBVrLnIHJ6G9W15KQMgVax0LoVu
      ru++wjIAUsVqCDViZdd3/wh5IUyqWIFAgGzEYXFuvjixB4qbPwh+2QRCFKdNG8baVV0GQKpY
      XtNLMir49Pa1Rz6uwePnjQ+OwhrTI2QXSKpoe9t3FSu2+vA/igKqpqLpD/6RAZAq2nIq/rA9
      r56IDIBUsYQQXB8fXNdryABIFSuVTjGyOPX4Bz6ihZABkCpWsCbIf371r9HEs/eBZACkivbq
      qZfoDXc+5lEPD4gMgFTRFEUh4A088/NlAKSKt7u165cLYWvI2Rb59Nqb5soASBXvg1feYU9d
      10O/nxIWX33WT3o5+8D3ZACkilcTqOG//c1/JYgXj1BRXQXlvhZh2c7x5Vf9xCOr1w/IAEjb
      Ql2ojg+ef50Oqw5voRiC+yXtAl/+sZ/IeGzlazIA0rag6zq/ev09AoEABd3F0dY+Kchic/HS
      IDPDUYQQMgDS9qFpGjt3d2M/pPLfY6mCb364w1j/PEoulxOm+eCOWZJUibLZLH/38T/yh9vf
      PHaOkOrKLpC0zfh8PoTCE02Qc1UZAGkbevvMazR5w0/0WBkAadvp3NHBf3n13+Dh8euFZQCk
      ben0sRf49yffe+B6wP1kAKRtSVEU3rvwNu2+pkc+TgZA2rZ0Xae7qQPNVVDctR8jh0GlbS2e
      SLC4uEAineJ/fv877kTHV40SyQBI21o6naZ/cID6cB3t7e3cHRvmv3/8d0znF3EVIQMgVQfH
      cVBVlWQyyfLyMtdG+vkfl38r9wWSqkMqlaKmpgZVVamrq+P9C+8wH1uUJ8FSdQiFQmiahq7r
      WJaFoiic6D0iu0BS9XIceYskqYppmiYDIFU3GQCpqskASFVNBkCqajIAUlWTAZCqmgyAVNVk
      AKSqJgMgVTUZAKmqyQBIVU0GQKpqMgBSVZMBkKqaDIBU1WQApKomAyBVNRkAqarJAEhVTQZA
      qmoyAFJVkwGQqpoMgFTVZADKxEJ0ganZyVIXo+rIvUHLwOjYCGjgCGfla7lcDq/XW8JSVQe5
      NWIZEEKgKL/c1nBhYYFPL33E+xd+RSAQQNflcWqzyACUISEE+UIex3b48P9+SE9PN7t6dtG+
      o6PURdt2ZADK3NLyEiOjw7i6zckjL65qKaT1kwGoAEIIcrkcl/u+50jvUZoam0tdpG3j/wGI
      cinRhjKUawAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Airport Per State to Positive Cases' width='192'>
      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
      jLddi6VkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Airports Dashboard' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WYwk15nv94stI/c9szJrr+qleu8mJVEURZEcakazYhbMcsd3LgwDNmzA
      wAUM2zAubMCWH+wHwxew7xgGDPvBsO+d8ewjaUaaGW2kREkkxa2bvdS+ZlVW5Z4ZmRkZux+K
      Vewmq5cii81uVvxeKivz5BcnTsY/zne+c74Tgud5Hj4+xxTx066Aj8+niS8An2ONLwCfY40v
      AJ9jjS8An2ONLwCfY40vAJ9jjS8An2ONLwCfY40vAJ9jjS8An0eOna11+qYDgNHr0OkZH9mW
      67p8cK2POeizuLBAq9PzBeDziOE5XHvzNd6+Ng+AIAgIwnsXsufhOA6u6+I6Do6zKxLP83Bs
      G8d1gb2yLo7j8NOXXka3LFx3VwZmv8Wrb15nYmoaz7GQP52z9PE5mEZpjvTpZ6iv3cDzztCt
      rrHpFaH8LtsmqGoCt1tldOoEnWqZzNRFnOYGfU/B1BqMzlzh5ls/xTUHpIanqDcblDY2KBZG
      iIVVlm7d4PSlp1BkiVQq6QvA59Hi2q01nvjKV9HXbep9+zYXxWH85BPMjKR5+eWXOXniBO5k
      kVd+egM8neeeew7HbPPqm3PYgz6ff+5rJCMqeqPK1PQ0yp4Vx0GRpH2rvgvk88jgeRZ906Fe
      LlEYLXLj3dnbPpXJ5tLvFdx1e9qVLeK5AooIhu3SqVeJprMo4TjJiLr7LVHAdjz2Vv1PnjjB
      wtwcnudh27bfA/g8OjiDPpefepaRfBIAZW2NUDJMgTAoU4Tfu3F7jsniwgKeFODymTEcI8Pi
      whxiIMSlmVE2wu8Pey89eYmluVnGJqaIR4JEMyOctGFubp5wLIHgJ8T4PG68++67XLx48Uhs
      +QLwOdb4YwCfY40vAJ9jjS8An2ONLwCfY40vAJ9jjS8An2ONLwCfY40vAJ9jjS8An2ONLwCf
      Y82HBDAYDD6UQXNYHMtE0zQM075rGc/z6PW6mNbdyxwG0xigaRqapuG49z6DdquB7eyW6fc0
      ur0+R7UixPNcul0N+71kjcPg2Bbdbg/3AeviWANand6hj+PzPtLXv/71r+/943ku3/x3/xeh
      0fNEvC6tAQQkAdM08TwXXdeRFQXPdej1dRRFwbEdTMvkrTdfJ55MowYCzL7+A9Y1kYVrbzMy
      fQJD7yHJMq7jYJkmoiSzcO0ttjt9ulqPfmOdii7vrt/u90CQ2Fm9xabmkYqHMfQ+CBKSKLIx
      f50dHZLREIbex0NEkkQ6rTo/efl7WHKcTCaB0e8jSjJzN97CEkOEgwH6vR6CJLM4e41YdpiA
      LPLNb/wViuixvqORS8cwTBtZlhnoPRwXus0atqjwxptvkM3mqVUrBINBRFHCdmwEz6WnD1AU
      GUEQePPVH9MzXTwkApKAYdoosoze7+EiIIkCvV4PWVGwLYOBYaEoCp5t8PJLP8bDIxhN4NkG
      jgciHvZ72U+u62I7Lq5tYTkurtFkYb1JNhlGH5hIksCrr79OJpOjVqsSi0bpv9d2uC6mMcDx
      QL5tPfxx547l0O3SLKe/8lus37xK7kSckj3MS9/+Wy49/RxLt95iYnyCtg52t0Yqk8YQgqy9
      +w7nv/gM5a0S6aExYtEIgiCQGyrg1DeYffctPEml1zPQayXyE6e5cOEsqVSSrZVNMqfP0lxd
      oiVLFBMKc3MLlGstptMyZddGNSrsdFx0vccLX3mGZr1Co+URNGqUGiaG1uTLz79AKjvE+NgI
      EydPsnzjDUwpRLPVQTIa9IgSVVwWFleod/oUksr+OYdjCXLZDMulKi+9/BMyMZl4foSr1xd5
      4soF+tUtstMKpVKJEydnWF1bZmtlkdOf/xJXX38N0TWJJ6IQKnDh9Bia4fH5s2fA81iav8na
      0jwT56/wzrUlPv/EBZpby8iROL2BS6u8wvD0Wc6fO01vZ5n4+AXOnB6iubnI2xsd7G6TqeEI
      7255fP5Egh+9tc7zz1zg5s0lZCwuPHEegK3SGuurK6RGzlAqlZicOsn68ipur0Gp49BtNkmr
      Lk6ySGunwi9+9bmHe5U9wtzmAnlcn99Ab5bZruzsu0HDYyc4NTlCNJnh9OlTWLqGKwSYmTmN
      3mlTHJ/m9PQ4uaEi0+Oju5Y8j1qlwsUvfIluo8JA15EliVgqz+WLZ5EESOSHee4rzzJ7/R0y
      2RxjE5M0y8tYYpDBoEcmk2VsYoJ+s05X15EkGQ/IZHKMTUxg9DQmT86QDMsYzp0uQ7s3YGbm
      DKJnk8nlmZycZHNlEUkNofe7d5Tta236tsJTl6YJxPLMnBil2Ze5PDPG/Nw8HhCMxCkWh8ln
      dtepX75yllf+8dvkJs9R3dlhYIEovpef6uzmptqOzdLKKvGQRMuJcfFkgbm5eSrVKv2+jqLI
      XLp8iZ21edoDl2AyS69WxnUd2vU6YyfPkIsq6I7EpSeeJBENc/bCZZJBqNbbSAEFy3IAh6XF
      NaIRFd10KQ4XKeYzu+3Q7DA9c4ZYQMSVgpyeOUM0qODzPu+7QB5IaoizZ2YopqIIkRThcJh4
      RCUWi3Lr+tt0uiYXLj9JMiIxv7zB+UuXCAcDRGNR4qEAsytbFPNZJCXAyMQU8XCAoaEhGvUm
      mXyRXCZJNBYDoNuqc2t2gdGJE4wMD7O6uMDQyBidZoPC8AgTkxNsLC4wfe4ChtYikcmTSycJ
      R6OsLSwwdeY8m4uzRHOjFDOJ3ZORZcLRGIVckps3bjA2NcNYIcfc/CIjY8O0WhrF4RGG8jki
      0RiSKBBLJJkYG0WQwwiDBqWmycXTI5TLO2QKwxRyGSKRKILRRTMhk0qQSA1hWhYzJ8bJpVO0
      ezqjI2OEgwFy6Tg3bs4iqRFU0UEOJ8lnk7QadfLDo5yfmabR7FAoDtPvthCDSSZGhpADYRS3
      z+LKBuMzF6iu3EJNDzM2lCEYjhIMyATUEPFkmqBkIwYijBQLBIMhgoqHJ4cZHi4SC0CtY5DP
      pBg/McXizeukhicoZJNEYjFURd7/DXwOkQ+wtV1muFD8pOvj4/NQ8RNifI41/jyAz7HmSAXg
      3Cf27brufcscxt4HbbvvbYx01LYPW963fXDZwzgbh7G9t2HWR7H9UHuAw1b0k/TODmv7MOV9
      2x+fh2Xbd4F8jjUPdV8gz/M+UWX7fHZxPZefLP8IQYBnpp5DFI7m3v1Qe4DdjU6Fh3lIn88I
      P1/7GdlojnQ4yxvrrx2ZXX9nOJ/Hgogapdat4HkemUj2yOz6LpDPY8H5wiUWqnMIApzMzRyZ
      3YcqAN8F8vmoCILA6fyZI7frR4F8jjUPfR7Ad4F8HiX8KJDPscZ3gXyONb4L5HOs8V0gn2ON
      7wL5HGt8F8jnWOO7QD7HmgeeCbYGfVY2K0QDoDsSsjtg4Ihg6QTjWSZGC59kPX18PhEeWABK
      MEwsrKKIHtvbDTKpOEHBQgilwDX3N266l4vjvLfBkyg+WMfjui62/WA7x+0d90Gzwg5j+7Dl
      fdsHlz2M+/tR6vKg9m+3/cACMPsazWaLbDZDOp0mGZYZeDEwugTTOaT3dhuT7rHr2J4LJMsP
      dljbth+47N6F/6DiOoztw5b3bX+YvRvfg7rAh7HteR6CINzz2rub7Qc+20A4xrlzZ+94b3c3
      ntSDmvDxeeTwo0A+xxo/CuRzrLmrAJZWNrh+a+Fh1sXH56Fz4Bjg3Zvz/PXff59CPsv05Bjh
      UPBIDua7QD6PGgcPggWBXCbFf/QvfhdJOjovyXeBfB41DhTAmVNTnJ858cAhRR+fx5UDr3BF
      ljEMg62trY/9uKTb8V0gn0eNu97i5959ix9+90cMjvBgvgvk86hxoAA8z2J7p0mhOOSvl/b5
      THOXmWCJbDbD9LmLBI7wYL4L5POoceANXhBEMgmV737/Rxz+YZ93x3eBfB417roWqNbsEpMF
      7HsV8vF5TDEMA8Mw7n5t57JJSi3Ld4F8Hnscx0HTNGq1GtVqlX6/j6qqjI6O3l0AjaaG1G+y
      tFnh1Ej+SCriu0A+nzSe5zEYDKjX61SrVTRNw3VdotEo+Xyey5cvoygKirL7uNi7CiCgSJy8
      9Dmm37v4rUGfUqVJIiSy09JJhiQGjgRWj2A8RzGffjhn6ONzG5Zl0W632d7eptVqYZom4XCY
      dDrN5OQksVjsQ3kFtyfaHCgAzzWR5CA729ucmplCYjcjLKi06RsOsaCChYCMCeEEttHDcRJ+
      Rphv+55lP25GmOd59Ho9arUatVqNfr+PJElEo1FyuRxTU1OoqvohWx+0c/+MMEEmFFLoler7
      b5l9jUqlSj6XQdMdEiGRASEYaAQTfkaYb/vefJSMMNu2abVaVCoV2u02lmURjUbJZrOcP3+e
      cDiMJEl4nofrukeXESYIIn1DR6s12LufBsIxLl++BID/uGyfo8SyLHq9Ho7j0Ol06Ha7NBoN
      JEkilUpRLBY5e/bsvt9+lBwogEG7Rq44QeGkx9Ef0uc4s+fGVKtVarUavV5v340pFAoMDw8T
      CARwHOdQvdFH5cAj9JoNXr66xMmxYUzgaLIBfI4jhmHQbDbZ3t6m0+lg2zaRSIRcLseZM2f2
      3ZhPiwMFEEwkySXD9GyXDw8pPjr+PMBnm714e7VapVqtYpomsiyTSqUoFAqcO3cORVEeqVD4
      gQIQZYVEIkF5YwcTjkwE/jzAZwfP89B1nVarRbVapdvt4jgO8XicfD7PlStXCAaD+0GJww6C
      HxYHC0BSGRkd5fTMmSPtAXweX26PyNTrdWzbJhAI7IcfD4q3f1pYjsXVzbcYS00wFLv3joUH
      1lhv1/jO919havIETz/7xSMbCPsu0OOB67r7A9V6vU6v10MQBJLJJENDQ5w4ceKhDlQPyz/O
      /h1n8ud5efH7/Pq53yKiRu9a9sDaJ4vjPP3EOdbL7SOt2O0ukOu53Nh+l4gSZip7EoFHq2s8
      ThiGQaPRYHt7G03TcByHWCxGOp3mzJkzRCKRxyo91rBNMpEsqqxiu/eeqLurfFVVRQ4EPrHL
      8vW1n6FICtudTQRBZCpz4hM6ks/t7MXad3Z2aDabDAYDAoEAyWSSkZERUqkUsiw/cr76YfiV
      M7/OKysvc2boPIlQ8p5lDxSAOehRa/bIZTMcZYDqdhdoYOnkY0NYjoVhG0d4FJ89PM+j3+/T
      brepVCpomgZAMpkkm80yPj5OKBTav9gPOxP8qBJRo/zymV9/oLIHnq1rWywuLOC4CqfPnT6y
      MYAgCPtd6bPTz/OTlR8RCUSZyZ+9zzd9HgTLsvYHqo1G446B6smTJ4lEIp+JC/woEbwDR6Ue
      g4GxO2kRjT6wG+Q4zj0nNfYWwwUCD5Zl4K8FuntZ13XpdDo0Gg0qlQqDwQBRFEmlUuRyOVKp
      1KEHqo/aWqDD7A59pGuBQCAYPPr5Xz8K9NExDIN6vU65XKbb7eJ5HpFIhGw2y8WLFwmFQo/V
      QPVR4aH2h7e7QD53x/M8NE2jXq9TqVTo9/vIskw2m2VsbIx0Oo0kSXe9m3qeR6NfJxG89wDQ
      51NI933Q9frHBc/zME2TarXKzs4O7Xb7jrv73rLfvRvHg7gGP1z4Lo7n0OjX+e3zv4/8EH5m
      x3V4Z/NNspEc4+nJxyasfeiW6TRrVNs6qYjCwJXB7BKMZ0kn7j7ZsIfv/uz6wu12e3+SaTAY
      IEkS+XyesbExLly4cM+7+4NQ61X4/St/xD/c+hY9s4sa+OTn83+4+F1GE2Nc3XqLkBImHxv6
      xI95FBxeAJ0OHgq9gYXn9BGUEL1Ok0Q0dN+sn73PP4kMpU8iI2y+egvLsTlfuHjP8o7r8Pbm
      zxlOjDIcH72jrK7r1Go1KpUK3W4XQRCIx+PkcjkuXbqEqqp4nneHa+g4d9+M5kHq/eTIU/z5
      2/+WYmyEaCD2UDLCDNMgokRRJRXDGhyYhfUoPiPsLlGgu9OqV1gv10lGFAxXxrN6hOI5xobz
      DxQFsm37wLS1g7hXd69bfd4uvcFM/iyZSO4jRYEkWWK+cgvDNrhYvHLHXffW9nWqvSohJYgo
      SFwuPsl6e5V3Sm8ykZ5kvbnOUKzAlyaf5ds3v8nZwnneWH2Nz+efRmt00TRtPz81k8kwNDRE
      JBI5sH0etQjTR7Ft2gavrLxMPlrgfOHih3qwxywKdHeSmTzJzEfbJeIoXaC/v/ENLg1f4W+u
      /QX//hf+Q2RRwfVc3t54g3Q4w2Rm+r5+6HxllnKnTEyN8cbGq3xh/Ev7n5mOSTQQJaSEaOlN
      YHf2+vcu/yF//ON/zX/yzL/kB9e/y8+7r3Pj6g3MtMPs9hzjl6cZK4zvZzA9zjOqhyEgq7x4
      6mufdjUOzUN/RNL97tBXN9/iz97+t/zjrb+7Z7lqt8L//fr/yVzlFvPVWQB+tPQDQkqYWzvX
      Kbc371sfyzGJBCJE1Simbd7x2aXhJ3Bcm7dKP2ezXeLm1nU6tQ7f/OE3eOf1q/zxn/yv/NNr
      /0hEjfIf/9Z/SnQ6xD/7jX+PLz75NENDQwQCgSO/+D3P5ScrL/ONd/8SbdA5UtvHlYcek7yf
      jz5XucUfXPkjPKAzOHgxXtfQaOkNJtPT77kja8DuMtioGiUoB7Fdm43mGv/fW/8vf3X1TzEd
      80N2zhcuISBQ61Z5evJZLMek1qviOA6NRoP4IM3C1SUS9Sx/9U9/weX8k9TEHf6Lf/5fYQ8P
      +Je/95+xbM6RjCX5pTO/ykz+7Cd6x19rrCIKEi+e+ho/XPzuJ3ac48RDDYM+iAs0kZ7ir6/9
      GYqosNxY5LsL3yEZSvG1mV/bv7hUOchocoJSa52oGuXZ6ecB+IVTv8jPVl8hFy0wlpzgG9f/
      it+59Af8eOmH/GD+n/jamV9DFN7XvCAIfG7sKXRdZ3VtlT995f/B1C2aeoOR/Ci//vnf5Ozl
      MyRyUc4mZ5iZOUN5oUQ0GEWVVVKh9H1XGx4lyXCKn62+gotDLvp4RFkedQ49CL4XDzIIdl33
      wOz+gaXz5sbrTGVOAlCIF/nLd/6U37/yz/mHW3/Hl6efIx5M7JfXLZ0drcxYcgJJlA4cBC9U
      5/jLd/6Elt7iXOECM/mzPDn81H6Oarvd3s9RlcIiW9YGyXiS2cpN/uCJP+K1tZ/y1VO/zHpr
      leHYCMFAiMXqPKuNZYrxYcqdLZ6dfp6gErrjXD6pgaqHR7PboG/3GUmMPlBv86gMsD8zg+CP
      w15FD+LbN7/J58ae4n/78b/mK9Mv8O6WyFhinL++9mcEpABRNbZf1nEdbpSvkQyl7jmmSIcz
      iJbEF5PP8tO3XqEd72KPQyKRIJ/Pc/78+f2Yu+d59Jc1NlsbKJLCd25+ixdP/xKyJDOdObkf
      NjuZO83J3GkAzhcvHV3jPAACAvFggrSceajH/SzzyCwNdDwHSdxV8PMnv8q3bvwNXz31KyB4
      SKKM57m8sfEaiVCSrXaJXHSIpdo8qqwylpoAYDAYsLlTolFvMujtxqIDWoifNV7h+aef51cv
      /iaytHvKH7zDCILAcyde3K2LuxuH36tP19CwbIuU7G//+FnjkXGBuoa269+6Du1Bm8+NPcVE
      cmr/In158QfkojlKrQ022xs8O/UCt9ZuELBCRJwolmVxdftNdLlPw6vyX//Gf08qvHvBakaH
      79z8Fq7n8tWZXyYfHXrgLnazXeKnKz9C8ASeHP8C0++5aPfiUY3Vf5q2fReIe7tAUTXGL838
      6h3vbbe3WKjN8bmxp+h2NQL9IKWVTQRb5n9//Y+5PP0EgViXF5/+KpIk8dPv/ZD//Bf+Fd+6
      8Tfc2rnOFye/jCzK3Nq5wRcnnyETzvLK8kv86rnffOA6r9aXeXriyyhigBs71x5IAD6PD4+M
      C7SH67m8ufY6Vs/mpWs/YCpygu/94H/kVy7+BlVnhysXrnBi+DT55Sy/du43+fN3/h1KQGFu
      +yZBJch/951/hSgI5KND/PXVP+N3L/8h54Yu8Hc3/haA50++eKj6fGHiab5z85vYjs2vn/+t
      T+KUfT5FHvpy6Bvb11huLnKheJm5yi1CcpAvFL9EtVKjXq/z5urrpCIZTGVAIC7z1a/8ItIS
      fOmJ92dpPc8jE8nyF+/8CV+ceIaV2hKl9gbJUIqwEsZyLZ478SLfuvE3WI5JLBjnnz35L/A8
      b9+vf1ACUoDfuvh7n5l0QZ87eahjAN3s89dv/jlfHnmBf/MP/zNfGX2Rtt4iGA3yzNlnyWaz
      vLb5E8aSE2x1SriOi+VZPD3xZWLB+F3tLlTn2Gpvcm3rbS4NX2FbK+N6LqdzMzw5+tSBfue9
      LujN1gbL9SW+OPElArJ63/KHsf1xyz+uto/lGMBxnP2Ye6vVoq/3mV2dw+o4DI8Po47JRK0Q
      hViRsldiJDjCcyd+gVdXf0IqlOZs/sIDNcLJ7Gn6Ro/pzEm2tTInMqf43NhT++HNHa1MNpJD
      Eu9vq2to/HT1xzwz+RW+feub/PbF3z+KpvB5RDlSAZimyfb2NpVKhV6vhyiKZDIZstksp0+f
      5qXl7zGTPE3P7DIengABzg6dZ6O1znTsBC8vfp8XT3+NL783s7sXe++bfX6+/ipnhs4duNOX
      IAhcHL7CxeErH5oX+PbNbxBRY1S0bX738h/e1wXyPA9RkAjIqp+8cww40rVAuq7jeR4XLlzg
      hRde4IUXXuDixYsUi0UcwaFn9PiNs7/DenOVqBql1qvyw8XvAaBIAVzvbpNk3+B0/gwvLXwP
      wz7cs+u7RpfnT7xIQApgudZ9y8eCcT439gWubb3Nrx0iWuTzeHKkPUAikSCdPniyKCgHUWWV
      /+Nn/4ZMJEuz32CucpP/9pf/B/6Xl/8n3i2/w2hinL7ZJxwI3/Fdz3NRJOU9l+Zwdfrc2FP8
      xTt/wsncaVTpwfIQJtPTTKanD3cgn8eSjzcI9hxuXL9OKJ5lemLkgSbCrm2+zZZWYr25hiIp
      nB26wPfmv8N/+Qv/DWVti7be4nNjTwHvD1a6hsarqz/hXOECw4nRA20ft21RHjfbj+og+GMJ
      wHNt1kplcF3GxkaxbXu/Mnv7gN7+eu/zrqMhCzJBOUhjUMdxHH609ENEQeA3zv0OISWMIAhY
      lrVfUc/z9htvL4Vwb5sVURT3U+L2nhl1UJnbX1uWhSRJB9oB7ngtSRKWZSGKIpIk7acs3u31
      7Ry2/EF12Gu/27eVOah9D3p9+3u3/39Qm97eTvdquw/W437lXdfFdd39/YwepF329o+6X9vt
      vd5bYXBQmQ+26d51JYrixw2DetQrO4TiGcJB5b49gG3bOI5zYEqk67kI3Pn8AH9jrM+O7Ue1
      B/iYYwCBTP7e+6/fUfoeGWG3r9P38XlYPNSr7l5rgXx8Pg2OfCLsXlt6wG4vcL8ye3ied6iy
      t/89StsfpS6+7Ts57I3vsHU5jP3bbR+pAO7ng+0Nih7UTz/MVoq3D/aO2vZhy/u2Dy77Sf0+
      e4P5j3KeR7oWyMfnceOhLW/cWF3ERCUZCWA6AsXCAXsLuQ4LiyuMjGRZWNogm0nRbGnkh/LY
      pkFxePiOnX6atR3KNY2Q4oISxuy2CAbjBKMyaiRDMnJntKm0uoSFRF/rkEhladRrZPIFRBzy
      QwUk8X3rnufy7tXrZLMJNN1FFS08JUJUcXGVGEPZOzee3VhdgkAUQ6ujxpJ0alWi4QRqMkQs
      niUSeL93dM0eNxfWyWWS7NTaZJMhOrpDLhXDtFyKxdsT3j221lfxXJ162yaTydBotsgXCzgH
      tEm/XWOpVCEeCdPVTRIRBd0WSUVVLE+iOJS7w/by/BxKOEq33SSWzNCs1UhlckgyZHNDKJK4
      X3ZlcZ58YYTlpSWSmQzNtkYqFqJneuRSUQzTYbi4GxTpdZo0uyZhaYCt5mmXlwhG47SaTaKp
      IaKKSyxTIKiIgMv8/CKTYyOsrCyhhFN0+33SEQXdkUnHQxiWy/B77WINemzsNEhHVTYqLRJB
      AVsMYvdbhJMpJFsimEyQit05oXoQD20QLMhBAhKsL80hhWIHFxIlkrEIeq/LyOgYlWaHkVyM
      0sY6uiN+aJsrVQ2SSiVQ1DCy0yWSGsbsN5lf3SQW+uAzCDxC4RCm1iYzNk1tZ4sTY0NsbVeo
      d3qIH+iaS0uz7NQa9GyBaFBGVMPIgsutW7PEEx9emSpJEv1+n2AkDnqVxNBJes0yy1s1wsqd
      rmG/UccUBMq1FmPJCB1XIhJU2FyZAzXywZYjm0sz0KE4eYJypcbUcIKNjS16pvuhNnFsG9M0
      0QyHfCzEQFAIKiKri3MEwh9ud1mRqWyVSBbGaNfKjI8OU6nssNPUkO9wKQRSyTidXp/JiRG2
      Kx0KuSS66RFTZTZWFhAC79c9Ek8hiS7pdBLHNgnFsvRrFUZOTdPcKVPaaaLKe7UXSSRiSIpC
      KJJCFCETj+CICkFFYG3+Bkrk/RuOEowQUmXC4TC2ZSEqIWTPIZLIYA86zM6vEY/euVHB3Xho
      LlC1XMIUgyTCKqZlk06nPlTGc23mZ2dJZPO0Gy2KxRzb1TbFoQy2ZZFMpbn9Oi2X1uhbAuEA
      CIEohlYjHMsSCss4nkLijkZwWVteRokk0Ft1ssURtrbKFIsFBM8hHEvcdrfbpd1q4dgG2sAl
      KFi4gSixoIxp7f6wt1Mpl9AdCcnRCcaztKslkskCalTBE4PEgu+ngXquxeLCEql0hnqnx1Ai
      RGvgkk1EMS3rQ8tJOu02kUiIxYVlhkeKbG7XGS7mcCyLRCrNbR0XRr/Dyvo22UySVtcgFZHo
      2zKpWOjAdi+XVpHDSbr1HVJDRXa2yu/1hh5qJI4q77WJy+LsLOFkFq3VpFDMs1NtkU2E0QyX
      dCKGZZmk0mkEdjdRXivXyMVVOqZCUBgQSeWolbfIFEcIiy6oUcKqDDjM3rhFOBKlZxhk02la
      mk4qIjNwZRLRMJZl7reL0deYX14jnUrSG9gkwxK2GMLqNYmmswREBduD1ANs2OyPAXyONf7s
      k8+xxhfAMaH/3lJ1nzvxBfAQ6TR2+Nu//VvaPQPXdVldW9tfKHb9xrto20t862IQjTwAABe8
      SURBVB++y1q5tf++bQ2obKxRKldp9wb7s+mu51HfXOYnr73JwHJxXQ/Xcd7//Lb98l3X5aWf
      /Jy/+fvv+yL4AH6W90Mkns5TGMoz+85rVDo6eqdGdWuMV6+v8vmLJ7CjHn3L4+bVn3PdNHHQ
      SeWH6KyVEZJR+oZIJBqhszlL7sTniDldLj/zFV77/rfY1Dys5g7poTy1rkdW6TL1xFe5cGKY
      7//oVb770s/4D/7wt7FtB0Xxf/Y9/EHwQ8Vjs1RCcE0qHZuobGF5IppuMzyUIhtV0cQEsl5j
      br1GLqFgIxMJhOj1msSyw9RrDRS3TzBVpJgIcG12hWBABjmAo7cJRRL0LYhIBmpyhInhLHOL
      q/T6fZ68dO7TboBHDl8APscafwzgc6zxBeBzrPEF4HOs8QXgc6zxBeBzrPEF4HOs8QXgc6zx
      BeBzrPEF4HOs8QXgc6zxBeBzrPEF4HOs8QXgc6zxBeBzrPEF4HOs8QXgc6zxBeBzrPEF4HOs
      8QXgc6zxBeBzrPEF4HOs8QXgc6zxBeBzrPEF4HOs8QXgc6zxBeBzrPEF4HOs8QXgc6zxBeBz
      rPEF4HOs8QXgc6zxBeBzrPEF4HOs8QXgc6zxBeBzrPmQACzTwLBs2o0KfdO955c9z8O0rI9d
      iW6rQbvTotHu37OcaZr3qg2maaG1Ggws577HdB0b27n3+X34EA5Li8s4BzxWzTRNPMeg1ugc
      zuYB1Gq1O/63Bl1WN7bA89hYW0E37QO/Z3RbNDX9rnYtXaPRbFGttz52HT8rfOB5mR7vvPUG
      lqAykpSRBg5vra4SiSUIYpEdGWd7Y51YOodWK2F5MhubZZ68eJa2bnLq9Bm06gblSoNUrkCz
      sk0qN0StUgZJpZCKsNPQyCYjbJQbjI8X2NmpERYsnIBKs2MzPjmB2W1yYmqCxaVFXDGEKhg4
      osr1q2/xpa+8SCqqsDC/RCSVpVndoTA2SSLo8J1/epWpkTSOGiabK9BvVghEUpyYGGZ+9iYE
      YniGhj6wUKUBZT3KRFqhpTvkYgE0EwJY9PUBY1NTbG5skkknqVRrTJ0+h9BZ5+pCGVGw6fQt
      MpEQ680WX7pyke98++955ukr/PzqOuMTw8RVaPUdLp6fYWnuJmIwga23GQxM8rkMS2tbDI8M
      0261mJ6aYGNthXRxgtrmGuVai6+9+DxLC7PojoTdXMdJn6bQbfDzd27wBQQarQ4jhRyzi2sU
      Cnm63S6FVISuGGVjeR45GAWri2F5XLh8hdb2Oquri0jxEVRJZGtjheLoBI3KFlIoQVRxqTS6
      ZBMhOoZLLhGhVK5QLOQoVxqcPD1DNKh8OlfpJ8gdPYDnuezsVNnZ3qantelpLeR4kUG3zcnp
      Aq++9BKhoSm21pcoV9tcvHCOYrFIQAK938e2beaW1pkuxJm9eZ1qz6JeraBboHfb3Jq9hWP0
      2FhfJzt2AqPXpblToqPv3tGCkTirt95GG3g4jkW/b7K6usTmTpPpyQly+QK5dAJT72M5FsvL
      a1iWQa+nE4xEKBSGiYZUxkcKrMzfYmWrTqNRxzM6zK6UaTYa1NsacdmDYJjRkTHKm5ucnjmB
      1u2ztrpKvdkmHYF33rzJ0IkZNleXkEWPSq1FPBanODJMuVIn5mnMr24yOnUSQVIYGiqQTSdI
      ZQtozRqzs3P0Gk1MwLZstG6XerPDeDbEzdlFQtlx1hZnEWydre0atmty643XsEN5YmEV1zGp
      tvo4nRpyNMnIcJFgKEpxeJjS1hanJtLcujELkQxba0uIjsFOtUp5dQE5NUK7UaGt9VE9nb4F
      88vrnJoex7NNtK6OZZq0atssb2zTbNTRNI2tjTX6lk2v1+PWjRuATa3ewRjoDIyP39M/itzR
      A9j9Fuc+9yxhp0WjPyAeSxBVE6w1V5ld2ORLLzxPaX2ZoZFJcraJLCuoEjhigIAk4Lge44Us
      s0vr5MZO4PZa5IeG6PZ0cC1ChSya6ZGWIZ2OUW5tkMzkSCTTqKEAISKYNZfxyQk818B2PPK5
      IeIhiZWNLfLpBNVGB9W1QFTIZiIoooPj2ECAaMhDCEZR1SAj41P0Ow2S2TyCGmN6JEskmccy
      +0RVhXgsykZpm6GRcSKqhGnZ5PN5krEw4ajMzPkxyotzFEYnaHX75FJRkC2ySQ85ZNHqWZwY
      C5FNxgDIpRPUWgOy6TjYIrl0HIcgEhCJRBl0DaxBj5WKyrkz0wjRDAX1BC3dJiS52IEwIydy
      9DrbhKJxRClAOqaiO2HySZWAIoIA2XSKuCowv1rj9JlTmEocJStT10zS0QBxIUB9ex3ddBkb
      zhNSQBFhcnSIjZ0OqVQO27LxLAkxEGGskCWWztNt7JDN54mEw3S1PlOnTtLSdNKpOJ5roGsN
      Nvp9xorZT+Ey/eR4oOcE7+zsMDQ09EAGW/UKO/UO0yemUaTDjbFd26RUrjI2NoJwqG8+Hhym
      HT8qjjVgeWWNVH54X5w+d8d/ULbPscYPg/oca3wB+BxrfAH4HGt8Afgca6Svf/3rX9/7x9K7
      XL16Dc3YnQmWFJWAItHpdFGDKlq1xHbHJhKUMU0TxzKxXQHXten2dNRAAK1VY6PSJBkJsF6u
      ILguogC9/uB9W6qK59m02x0URWGg97EcD9c20Q0LrbaBKUZRFRHbtul3uwiSiNbVcR0D2xVQ
      ZJFup4MnuqwsbhAMB5EE6PZ0JFHAw8V2wHUdBv0eriAiiyKdThtBUpAkkWtvv0G93SWdTiMK
      oLXbCLKCOehjWM5uJMrz8DyXdruDqgYwBwMcoNftElBV9F6X5dV1sukUlu3gug62aaCbFtXN
      TQKxCIIg4tg2pjHAcQVkWcIY9DEtl/LqHKu1HoVsCvBYmp+lqQ1IJxMYgz76wEISoNfrISkB
      jH6PpZU1stkM/Z6G6XgEFJmluZvsVGuokTiKJOC44Dg25kDHdFy2SyVCsQgCIrbtYOg9PEFC
      kkT0fg/HFVhfuEG5bZBLJ8BzWZyfpdUzcA2N5bVNIpEQiwsL2Mjo7W2aPYhHQwA0qmVu3JpD
      dA1KdZ1ISMVzTAaWg4CHaZq4joVpu6wv3mS7NSASkHAFCc91ME0Tyxjs1wmg1WqzU95EkAOo
      qsKg18NBoK9pCLKCbRr0dQNVDbCytIQoK7vXYKeDHFARhfvHEu+YB1BCUdLxBMNT49x483Xa
      rR7hiMxA10kVTxExO3SdADeuvkludIqNlSVQQoQkl5DssR3KoAYkDNMBPCzbolKp0u22UEUJ
      V1Wx9T6p4jTFZIByaZUNQUU3TIKKzHAuydz8EsOjQ2Bu0Q8G0bsalVqDs2dOUKl3aW5vMjlz
      FlVUuHpjlrPnTtJstOgZPcKKiCwJdA2PaDTIwPIIiC6V7Tqnz58nGA9RqezQ6m7w+ScuYlg2
      geDuxI9gdXlnrsTFMxOsbdYBm5AaICnLkMnQKK+xVQ1QWW8yMZ5C0w0UWcIWwniOAcDa2hqe
      55KMhrg+t8LEcIFmaQW1eJLq2iLNagNBDfPUk5eYX1jEcwVEz2ZkemL3B/A8DMNExMIDtHaT
      2VtLJHNporEI5s4OpuFgu7sTh61GnYX1bZ7/8tN0ezr5fIZqtYqXCFNv9XAsg2hIZmG1zHA+
      S3VzmVhunI2lZbR+H0UN8cS5KRZXNvBcB8myKYxmADC7DaRYDkdrUBl4zEzkeO3dW1y6/ATl
      9SWmx/OslAf71046V6Te1Chk4izPVrB6Lcx+C8OViQVE4oVxKusL2EKAaFCkmJJY3KgguCYD
      rcbk1DRzS1sEw0E+f+UiADvVCoOeRjydB7vP3OIGU9PDVHd2aK2sI9oDXDnA55+4Qr/XRRZM
      1pdtDFxC4QTnT0/eVwB3dYGi8QSpWATbtpHVCLGISjgaAzzCsQzFXArHdsik04QicbKpGKbp
      IIgCHwyshmMJ0vEIlm0jqWFikSCN7S10y6GvD0hnc4QCATZKJWyzj+1AemiY1cUFCiMj5JIR
      NssV8ASKw0NslDZBDFDMJihtlkmls4RDKh4gCALZbJLNSgevWyOWGqJQzLJR2mLQbVBt9tD1
      3fUynmPS6xvgebhikGImQqm0hesJOLaDbRlUaw2q25sMbBe932d0bBJFAkSFZCyEi4DnuSCI
      CN4AKRChVCph9nVsQJQE6pUddNPGtl3S6cwdbRMKR4nHo3iei2FYZHJ5jH4XDyiVStiGjiOo
      FIaGwDVx2V2DhWdTKpXp9/U97aBGU4wOpRHkIEanQiiepLSxxaCv477XNrXKDoZl4Tgu6XR6
      vx4CEI7EiMUiuI6NKyp0mzV0y0LyHDbLNXKZJDvbm7hI9HtdOp0OhmHguHf+4JlcnmBAxrYd
      UqkUwXCC0eEstm2TSqcJR6LEouH3SnskM3kyiSiO65BOp2k0Gvu2YtEI3t6skCDg9ppsNbro
      uk4skSQWjQAgSTKeB4IAniCRTsbve/HDAfMAlmUhKwr2e4vcJEmk1eqQTCYRBGi3O4QjYQKK
      gt7r4ggSqiIjCoAooXU6hCNRFFnEtl3A229gQRLptDrEk0kEz6Gj9QiFQ4iiCJ6HbRnYDgSD
      Ko41YG2rxukTE7RbbSKx+O4dUu8hq2HUgEyn3SIUjSF4uw0pCh7dvkE8HmWgG4gCKKpKt9NC
      DccIyCLtdodgKERQVTFNE1kUcBCRJZF2q0kknsToa2zuVJkaHWZguoTDKt1en3AoiCBIKLJI
      s9kilkii9zrIgRChoIplDhAkFWvQw3IhFFSRJZFWp0skEsYxBziCQjQcxNB72EgEZAlZUcBz
      MU0bxxrgSQEioSCDfhfTgaCqoigStuNi6D1EOUg4FKCnabiiTCwSxjRNAoHA/u9oGgMkRWXQ
      13AFmWBAQRIFOt0e4XAEa9BDUIKEg7tuHHIARRSQFAXPsbFdcEwd5CCqBFpvQDweReu0CUdj
      dNstbE8gGgmjBFQkUcCyLBRJxHIBz8VzLHTLJRxUkRUFU+9hOAIhVUGWFfrdDrIaRhQ8FEWh
      p3UQFJVup00+n8eyLCQRtJ5BPB5B73YRld12CYbDSOLu/VtRlF130XRIxKJ0Wk1CsQQBWTq8
      AHx8jhNHGgWyLAvXsdG6vTved2yLw648vieuTbc/+NDb1t7SbM/Fsh26nTbOA8h70O1imAPa
      mo5r9tH0+y/8siwLx+jSHRy89LrX697/wECn036/7p5Lu6Pd8bnnOu/1pO9j6F3ut+Lb81ws
      +8PLpm1zQE83Dq5Lu8NR/Ey7ixV3LbU7d18e3t47d12779L7PfZ+Y89z6fX6H/rM81w6mnbQ
      Vw/kjiiQ5zksL8zT6ZvUd0r0LaiXS3QNF72vYXW71NtNNksbbFfqDEyHZmWLertPMhHhJz/+
      McFQmLm5W+iWh93vsLq5Q2d7iVIHCukIlWqDzY11ZByaHY319Q1iiTR6u8by+haCZ7O8soaI
      w+LKBqYDMVXg3ZuzCHisrq2hBEPousHO5jqt7oBeu0at1eHGtXcIJ9K43Qo/vboERodKtYYn
      ypTWVjBdkVhI4J1rs3R6OpY5wDZ0WvUmqALV+oCEovPGrTUc20bv9zAGOpWdMlubWwRUlaXl
      ZQzD5O233iIW8Li+WsG1bTr1bSoNDV1rUG338Bwbo9dhfXOHZDaN1qiytLiMJDgsrG1hWS7N
      yibzKxtMjI7w2k9/jBAIsTQ3S6dvIHsWSytrWHqT6wvbDA8PUS2vs1raISwLGEaPxbUtelqT
      7XIZSVZYWV7G8kS21pZotxq8O7dKQPQo79RIptJ0GjsszM9jobC9uY5hC8QjCteu3aDdG6Br
      HRRZYGlxCdOyEANBWo0GwYDM0uICui0QCyvMz87heh7ra2volstOaZVypQ6uyfpWlYC0u3Bv
      cXGRaqONoTWptft0WxVaPYtOrUyl2aVaXqdWbxEUB3QcldLqIpYnEouIvPPGDXqmha13WN7Y
      xrMHlCt15q5fRQnHiYYDNJtdVpZmaXR0sukkP/vxywRCUeZnr9MzHCy9w/pmhWw2w90CQnf2
      AI6Fbjpsbm0iCgJ6v48gCvT1Pp1Oh35bo90bMD6eJ5ocolPbplTeptvVEEWZ4sgY+XSCwsg4
      2Cb6YEB9c4twOs3E+BiCKNFubGPqPZbKLXY2NxBch25/wHatyZmZU9jmALPbolSpUxyfZKB1
      8BwTOZSgU93BkwQ67RbtWoVSpYXW7dIzLKYnJxgeGSWfThCLJxgdHycUDHNqaoSVpSU6AwdN
      08C1CMdzCK6BprUZ9LpY7p13n9GJaZyBTk/r0Na6WLbHzFSet67OM3lqBr3XZWx0jGQszNjk
      SWy9x8bGBt1uF1EU6ff6aFobURSxjD6W7THQdRy9wfrWDoXxU/S1JqYnUsilQBDIFYqMDmXJ
      5IsEJBdd19Hb29hKjLHxCWTRQ9cH1EtbtLQOvZ5GMj+K7bicmhpj/sY1itNn0VpVTFdkcnyM
      sfFxwqqMOdCxHIdKrcnpk1N0mxWyoyfpdxrg2gSjabAHuMBgMMAxu3QGFsuzN3BEFdsysBwo
      bW5gtGsEMyMozoDs6BR6twWSSjwk4iJhDXQ6WoetzS1Gpk4RCcHGxg69bpdWb8DYSA59YLK5
      uUUwmmAqH6HSMWmVN+jaAl1NA2wisRz2oI+uD6hsblFttpiYmGCoOEYxnwEcNK2LGokjew6C
      IDBUHKOQS5MrjCK5DqWNDdyBRv/g/KEDBOC5uB6kUylESUIQRSRJQhREVEmg3tNJxuPISpBY
      WCWdzTFcyJNIJACIqDK1do9YNEI8Hsd1XBLpFIlkjsrmOiAQCYcYmz5NPKwyNjqKqKhEwyqF
      bJrZ+QUMyyEYiZFOJgkqMvF4DEEKkM0kGR4bRfTE3dizGmM4lyCZSBANBljd2CKsylQbbQhE
      cLQ6gUgUSQ4wPjlJVJVIJOIgKsRjIeLxBEFFotLsEo3HURWVeDSEqISJBhXiiTjZWAApksLo
      a8yu1vjCkzOsLswSS+VQZI+OKRINSsQTcUZHRkgkEoiiiCSJxOOJ3fYTRQTAcV0C4QTpdJqQ
      DIlkCtExGVi7PloyFqFUaRCPx4jHE7iuSziWIh5L0GuUsT1wXZdEJkU0FicSTZCI7A6451dK
      nL10hfLyLWKpHPlcDlEJYnVbmA5IkoSAQCYZZXljh6HhMWqlRcKJ3ShQpbyBHIyQiMdxHQdZ
      jZBM7n6WS8fwXBcPgXQyhZrIMahvYckhaqUVwtEU8XicSCyBLAlIkkQ4GqNYHGJjeQElkGBk
      NE88ntitl+DhOi7pdIqgLLBSGzA6lGV4fIyI5O1fS+XSGmo0jus6JNMp0pksAVkkHlV3exsk
      YvEoiXiceGI34hOLBNiut4jHYsQTcUZGR1CjSYL3GAs/loPgZm2HQDRN5BPOUNoul8kXCnQ1
      jVg8/kgu0e50OsTjDxbyOxDXptMzicfCd7xtmzqNzoB8NvUxa/hRsOh0LOLx8P2LfkweSwH4
      +BwVd8wEe55Hu9UgFElg6hpSIIws7cZ3Bc9BUIJ4toHtisQiQSo7GxhOnLGR1G4MPRrjzdd+
      yuTZJ0goDiub2xSGR6lvl7BckUI2QSCeo9usIgIBxWV1q0UqlWZitIBjDbh+a4kLF8+wsrCA
      I6qcPjn1SN55fT4b3JkU7/S4fn2B85fOs7K4iKQEsXSN8ZMzLN66hahGmB7JcmN+jfGRLKGw
      iu041DdX0YQg5UqNQDhGKhZmbWWRM2fOYnZrdKJ5hiMW1baD0yvjWgaS5xIKCxTGpunsrNFu
      qwTUMGFVwbWN3fCiWWPgTBG6/3yGj89H4gPzAAr5/O7yAvAQBJFYOkc2GQVPIJfLsLFRwjIM
      LNfFssz95Qe2ZSGIMtH/v327x2kYCMIw/K53/LN2IlKEAyAk7n8epDSgCAQJCrEX2/Fml4I0
      iAYkOs9zgOm+4tPMLBeUhVAXwuN2yxAMx7dntk87Vutr/O6BenX5K02R/esLY0iIFWKYeD8c
      aPvI+qommBym4ceqXan/8q0DpJTo2iOVa9hs7rm5vcMaEBGG3pOMYFLgnDJcleN9j3M11mb4
      rsM1C1I8IyKXWS1V3RDDiZAMjas4jQNSlMTz15Vg232wWC4RmxGmkc735EWJiQFbODITsZL/
      6rJPqb/SEqxmTR9i1KxpANSsaQDUrGkA1Kx9AiGz4ibNR9vWAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Alaska Death Map Chart' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Alaska Time Series Map Chart' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 5' width='192'>
      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
      /oA0EjULvlEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Death Rate by State' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death Report (old)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Death by GDP and Pop Density' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='67' name='Death/Infected/Population Metrics' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death/Infection Report' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Deaths Per Gini Coefficient' width='192'>
      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
      wsZOz/3/ASO3VJiMzAlhAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Economic Factors Dashboard' width='192'>
      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
      2VXW+nuh4p2tYCSOt66G2RUfwfBaWQ9+uHvJRQoKq4Hy1zfUWqjRq0Ti69TV6PAt3SEaz5at
      vs3hpJBNk0wmKRQKTAwNoLfUl62+vb4ek9FItgBKLl32+sZaK067hXgiQUFR8Jf597MXKh4A
      u6WGuXACj6sRu8WEUuYOl6WuDjWXwewof/1cOsHy8jJKoUA4kaKxuY1aY/mWdKyFgyyvBLHW
      1ZHJZOg+0UMyslq2+osLC2TzedRcmqyiK3v99fAKy9EUNquFXCZDQ5l/P3tBzgGEpu3ppngh
      DhoJgNA0CUCF5BNBfvvZRQLR5Kavr8XWWFic36dWifvJOUCFpFduMp7ysjr2Cb+f8/Pi2bOM
      3Z5HzafwNpqxu9pYXZzm3Fs/pN66+3oqURnVt3ijSuhNdSwND9N1qAudvY3s+jqtzS5M+jwu
      dyN6VPLWGlYi69RbHfvdXM2STwChaXIOIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0
      TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0C
      IDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0
      TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0C
      IDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0
      TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0C
      IDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA0TQIgNE0CIDRNAiA07b8BMxethgqrT+wA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hawaii Death Map Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAJvklEQVR4nO3daXAT9x3G8We1uuUby0dtg4GUEhswV4rbQBMIJZDCdEpChmnaDsP0VScN
      7/uyrzuZyZTp9EXSJkOaIZRkMjmaBsJpsDHmsLEBE47YCGMDNj6QrGMl/fuCXARqy/KuZfv3
      fF4a6af/DPu1dle7lhYMBpXdbgeRRHa73Q6Xy5XpdRBlhC3TCyDKJAZAojEAEo0BkGgMgERj
      ACQaA5ggSikkk8lML4O+h5+AmWB4eBiH6+oRDEcRjhiIGgkY8QTC0ThCEQORWBxGIgG7rmP7
      5tWY99icTC+ZvqJFIhHFD8LSk0wmUddwEu8daoWeWwFN00Z9jhHsxUtrq1G7fPEErJBGwwDS
      oJRCIHADb31wCD1RH1yerDE9PxoawPrFxdi47qmUoiHrMIAxikSjePeD/6Lh8iC8ecVpzzGi
      YdSUati+dRNsNh6KZQoDSJFSCieazuDd/WegZZdDM2GjTcTjKHMP4ZVtv4Lb7TZhlTRWPAhO
      gVIKf/3HHlzstcGTO9O0ubrdjqu9cXT39GB2ZaVpcyl1DCAFnx2sw+UBNzw+839L5zui3Pgz
      iDufo7h95w4+argKh8v8jT+ZiOPHVRWmz6XUMYARKKXwxp7P4MwttWR+qL8Hq2qXWjKbUsMA
      RnCsvhFdYa9lpypnFjjg9/stmU2pYQAjcDp0ANZs/IlEHEt+VG7JbEodAxjBsqVLMNx3w5rh
      SlmUFo3FtA7AMIxxXYBmt9vxWFmeiSv6lqbZEIkZlsym1E3b06A3u3vw2q7/ACqJn6+Yj7VP
      r0xrzuOz/DjakYSmmfu7QrPZYBgMINOm5TvAl50BvPr2ARjeMhi+CnTd6kt7Vu3yGoRvXUY4
      OAClzLucWdM0GHFeHp1p0y6AS5ev4bXdR5H0FAIAEnEDZUXp78aUlpbib39+GS9vWoglxQYc
      wesI9feMe50JI4acbN+459D4TKtdoHPn2/H6R6dhzyr85mfBgTv44dyacc212Wyorq5CdXUV
      lFK4HujCzj1HkHAXjv7kRzAiIayodGPTs6vHtS4av2nzDnDyzDm8/knzAxs/AGjxCPyFM0x7
      HU3TMGtmOXb8eg208J0xPz8a7MfGpUX4zQvP8SrQSWBa/A8cqW/Crs/bYffmP/RvuV4dHo/H
      9Ncs/0EpdmxdDTWcegTxUB+2ravCs2vSOyAn8035AA7UNeLfxzrg8OZ+8zOlFML3+uEcDuD5
      Z5ZZ90luRRl2bH0KJXoftMEODHZfQWiwF0YsAqXUA+tRodv44/O1eGLpIkvWQumZ8vcD/P2t
      vbg0lAVN06CUQuhuF+aXerH2p4uwsLpqQu+4ikajCAQCCNy8ha5bfejuC+J2fwgOu45XfvsL
      lJSkfwMNWWPKB3C4rh7vnbwNh8uD+OAN/On3G1FSPLk2NKUUb32cpKb8LlD1/HmI3OtF3Ihh
      zeJZk27jB8CNfxKb8gH4/YXIcyVhG+7B+md4cEljMy0+B6gs8mHOrHLeV0tjNuWPAQAgEAig
      uLgYTqcz00uhKWZaBECUril/DEA0HgyARGMANKkopdB46iwGBwcn5PV4DECThlIKR+qbsPd4
      JzwYxh9eXI3Zleb9IbJH4TsATRrHG89g7/EOOL05SHhL8Oruo2hpa7f0NRkATQoNp5qx+8gV
      OL9zUaMjy493Pj72wIWFZmMAlHFNZ1vxrwPtcPoevnNvCNlobTtv2WszAMqo5tYL2LXvPJy+
      h+/lAAC3LxcHT7RZ9voMgDKm7eIX+OenLbD/n40fuH8h4YWuIO7evWvJGngWiCyVSCQQiUQQ
      DocRiUQQCg1jYOge+vqHsK+5BzZvwagzkokEnqzUsOWXG0xf37S4GI4mn7/sfAOdfTHEkwoK
      OuLKhqSmw+5wwe50weF0Q09h4wcAm66jvrUDmzcmoOu6qevkLhBZYt3TP0HcmQePfy68/krk
      FM1Enr8MWXmFcHuzodsdY5oXcxWi6XSz6etkAGSJRQuqUFPmNO0UpsuThcNNF02Z9V0MgCzz
      uxc2QA11mTbvWq+B7u5u0+YBDIAs5PV68dL6ZYiEzLmux5tfgv11TabM+hoDIEstX1qD+YXK
      lF0hm82GpvZuxGIxE1b21UzTJhE9gqZp2LZlA5JDN80Z6CtGXcO37wLRaBTtly6lPY4BkOVy
      cnKwZc1CRMPBcc9yuDz4sPE6Tjff/3T4bEsbdr6zD6FQKK15DIAmxJO1yzEnx5xdF91bgDf3
      ncehY4041XYV9oK52P3h52nNYgA0ITRNw/YX1yM2YM5ZIYc3D+83BNDSOQSbruN0RwgX2r8Y
      8xwGQBMmPz8fm3/2OKLh9HZXvs/hyUa2//73LLuzZ+Dtj4+P+QCZAdCEWr2qFuXeYUtmh+x+
      fPDpoTE9hwHQhNI0Dc+tqkE4aP49v7rdgcNtt3A9kPo3ezIAmnALqqugR9L/3raRuHKK8Ob7
      B5FIJFJ6PAOgCafrOhbNLXrgZ0opGLEI7t29jcHb1xEODaU1W9M03InnYN+h4yk9npdDU0as
      XFaFc3sOwp+XhYIcN4ryfPDPmIGZ5QuQn5+Pa192orHlMi4E+gHPDLi92SnP1h0u7N3fhJUr
      liA7e+Tn8YYYyoivL40Y7U/HRyIRtLSex4mWK2i/MQCbrxAuT9ZDj4sbMYQHelCaa8fCOSVY
      sWwhKsrLRp3PAGjKCIfDONvShsZzV3Dp5hCUIxta7B5mF/tQM68cTyxZhIKC/DF9HwMDoCkp
      FBpGZyCAWRUV8Pm8ac9hACQazwKRaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMA
      JBoDINEYAInGAEi0/wFT4MdTR032UgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Hawaii Time Series Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Infected to Hospital' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcbUlEQVR4nO2d2VNcaZqfn5NJLkCyJCQIEAKExCK0UkKIVSpNV3WPXT3V23RHT/SEHQ5f
      +A/xjSN8b4fDNw5H93SPZybsmuru6tq6qyR2IQkJqcQqEIhkE2uS+znn8wWVFBJIkGQmeUi+
      J0IRGSLPe35n+eU53/J+ryKEEEgkxxRTvAPGw08yRnxjCCHiEiNWkqUjst/Itts/x90Auq7H
      HEPTNBkjjjHicePF4ziSpWNpaYmvvvpq695MqAEkEiPh8XgYGBigra0Ns9m84+/SAJKUxe/3
      09PTQ2trKxaLZdfvSANIUpJQKERnZyeNjY2kp6e/8XvSAJKUQ1VVOjs7uXLlCjk5OW/9rjSA
      JKXQdZ3e3l5qampwuVx7fl8aQJIyCCG4f/8+xcXFlJSU7GsbaQBJSiCE4PHjx9jtdiorK/e9
      XVoCNUlSEH8wzL92DmM2mfiwtQarZWfX4mEjhGB8fJxwOMw777wT1bbyCSCJitsPp7hVf5pr
      50ro/uZFsuUghMDtdjM/P099fX3U28sngCQqqkrz+PP9CXRdcONKebLl8PLlS0ZHR2lvb0dR
      lKi3lwaQREVliRNXTgYmRcGRYU2qlrW1NR4+fMjNmzd3HeXdD9IAkqjJzrQlWwJer5e+vj7a
      2treOMq7H2QbQHLkiIzyNjc3v3WUdz9E9QR4OTfDwrIHh8OOx6+SblLBZifdZMVkT+eEyxmT
      GIlkL3Rdp6Ojg4aGBhwOR8zxojKAPT2dwMYUwnqS7HQrQrGBCDHx7BkXr11H0zR0XY95yquu
      66iqKmPEKUbkesQyVT0exxGrDiEEd+7coaamhuzs7APr2a5DiSYjLOBdx/1ynYKcdFZ8KnYl
      jGLLJMNqI6yp5OZko2nagRskEVRVJS0ttuaJjPEdkRvOZDr4G288jiMWHUII7t69S35+PmfO
      nImbjuieAJnZVGZmA5CVG5MGiWTfCCEYHBwkKyuL8vL4dr3KRrDE8IyOjqJpGrW1tXGPLQ0g
      MTRTU1MsLy9z5cqVAw107YU0gMSwzM3NMTk5SWNjY0JufpAGkBiUlZUVvvnmG1paWmJqvO+F
      NIDEcHi9Xvr7+2ltbY2552kvpAEkhiIQCNDd3U1zczM2W+KnXEgDSAxDOBymq6uLq1evxmWU
      dz9IA0gMgaZp9PT0UFdXh9N5eFNqpAEkSScyyltRUUFRUdGh7lsaQJJUhBA8fPiQvLw8Tp06
      dej7lwaQJA0hBENDQyiKQlVVVVI0SANIksbk5CQej4dLly4lbKBrL6QBJElhdnYWt9tNQ0ND
      0m5+kAY4dISA53OrjEwvxWXN/aPI0tISQ0NDNDY2JnSUdz9ENcy2vryIe2GZnJwsNgIq6aYw
      WDPIsNjQTSZceXKO9F5MzK7wZGKBrAwb674gDTX7W8EsVdi+XHksubzxIioDBAN+AgE/Znsm
      6WnKZkaY6ufp8BhXmltkRtg+Yqx6/JxwZuDMSmdybm1f8VMlI8zn89HT00NzczNms/lA8eKd
      mRZVRtja0gLuxWVysrPxBVXspm8zwiw2VKAg3ykzwvaIoeuCO4+mCITC/NU7p7Gk7X2uUiEj
      LBQKcfv2ba5evRrTQFe8M9OiMsB+kAYwXoxkG0DTNDo6OqitraWgoMBQqZmyESxJKLqu09fX
      x+nTpykoKEi2nB1IA0gShhCCgYEBXC4XZWVlyZazK9IAkoQghODp06dYrVbOnj2bbDlvRBpA
      khCePXuG3+/n/PnzSR3o2gtpAEncefHiBXNzc9TX1xv65gdpAEmcWVxcZGxsjKampqSP8u4H
      4yuUHBnW19d59OgRLS0tMXeFHxbSAJK44Pf76evro6WlBas1uXUDokEaQBIzwWCQrq4url27
      FvNy5YeNNIAkJlRVpbu7m0uXLu1ZlNqISANIDkxklLeqqsqQo7z7QRpAciCEEPT391NUVMTJ
      kyeTLefASANIoiZSlNrhcERVlNqISANIokIIwdjYGKFQiHPnziVbTsxENa/Us7rEC/cCBYUu
      vEHt24ywzQoxqq6Tm5OVKJ0SgzAzM8Pi4iLNzc2GH+XdD1HnA0xPT29+EIACiBDTE3Ncun6d
      dIuymWUT44nRdT3mUUQZ4zsilziW66LrOisrKzx58oS2trYDlzmKh45Yz+d2HVEZQAsHWF4P
      oPnXWPZFcoLTsZutKBYbRYV5MiHGgDHikRCztLTEwMAAN27cOHAub7ITc3bTEVUks8VOQb4d
      yOVwF7CTJBOv18vdu3d59913DZHIHk9kI1jyVrYXpbbb7cmWE3ekASRvRNM07ty5w7Vr18jM
      zEy2nIQgDSDZFSEEHR0dnD9//lCXKz9spAEkOxBC0NfXR3l5OSdOnEi2nIQiDSDZwcOHD8nN
      zaW8vDwl+vrfhjSA5BVGR0cBqK6uTvmbH6QBJNt4/vw5S0tLXL58+Vjc/CANIPmWubk5nj9/
      ntCi1EZEGkCyNcUh0UWpjcjxOlrJDiJFqdva2hJelNqISAMcYyK5vC0tLYdSlNqISAMcU8Lh
      MB0dHTQ0NKTsKO9+kAY4hmiaRldXFxcvXkzpUd79IA1wzIiM8lZWVlJYWJhsOUknqlaP0FVe
      vJijwJXDmk/bqhBjS0tD17UjtybMcSOyXHl+fn5SilIbkagSYmYmRlhTrWRYFdDF5vNDD7E4
      u0LVpctkpVtkRpgBY0Qu8fDwMOFwmIsXLx66hu06jJQRFtUTwJ6eycLsHMLuQNPFt08AO/ku
      Fz6vj1xHHoDMCDNYDF3XmZycxOfzce3atQPdgPHOxDooSc0Iyy86SX7R0V0D5rgyNzfHzMwM
      ra2tx2qUdz/IRnCKs7S0xNOnT4/McuWHjTwjKcz6+joPHjw4UsuVHzbSACmK3++nt7f3WI/y
      7gdpgBQkHA7T1dVFY2MjGRkZyZZjaKQBUgxN0+js7Dyyy5UfNtIAKURkufIzZ84c2eXKDxtp
      gBRBCMGDBw9wuVxylDcKpAFShLm5OWw2G1VVVcmWcqSQBkgBVldXGR4e5vz588mWcuSQBjji
      eDwe+vv7aWpqkqO8B0Aa4AgTCATo7e1N2XU7DwNpgCNKOByms7Pz2Gd0xYo0QBR4fEF+3z3C
      8NTLpOrYntGVm5ubVC1HHWmAKPhD9ygt50/xcHyedW8wKRqEENy9e5eKigqZ0RUHopoOresa
      Pl+AdLsNVReY0MGUhtmkIIRI+QlXVouZl2s+QmGNNPPh/3YIIXj48CFOp5Py8vJD338qElVG
      2Ip7ghmvCUeaijeoYVU0SDOj+lTyT5ZS4MxC07SYp93Go8xSImKENZ37I7OcLsql0Lm/9+54
      6hgeHiYUCkWd0RWPTKx4HIcRdex4AnhXF+nouY85LZ2b791ge0Ecc7qDkHsCf44Li9mM2aSA
      SeALBVEU01bgKOvuvVWkkWKkmRQaa0uijh0PHZOTk6yvr9PQ0BB1vHjsPx5xjKhjhwEycwso
      L85nZGp5x4aZjmzKKqvJddjxhXTSUFEsdk6VmtHF5i9/PF6FZIxXcbvdWxldB3m6xiMVMR7H
      YUQdu7YB1tcWWJn3o8GrTwCLDVfe5tzybOvrW6X2+3+yWFpaYnh4mFu3bsmMrgSwwwBC6Dhy
      iymv9MouoiTj8Xi4f/8+bW1tKd/BkCx23ONCqExPuXHk5kTXRSSJK4FAgO7ubtra2lKuNKmR
      2GEAk8lK0Yl8VhYXUZOhSIKqqnR0dHD9+nW52FiC2fVHPjvbzlrAKl+BkkA4HKanp4fLly/L
      jK5DYIcBfOseQkJBR5PN2kMmFApx+/Ztrl+/TlZWVrLlHAt2/Mjrqo+Hj0YwoaMlQ9ExRVVV
      Ojs7qa+vlzf/IbLjCeDIO0FVxUnC7OjnlCQIXdfp6emhtraW/Pz8ZMs5Vux4AmjhEBaLBc+G
      j/iM20nehhCCe/fuUVJSQnFxcbLlHDt2PAGCfi+ayUphYZZsBEfByzUff+obw5Zm5sO2GmyW
      vTuRhRA8fvyYzMxMTp8+fQgqJa+z4yplZDu5fPl4Vw05CJ2D03zYUsOLxXWeTCzyTvXev+Zj
      Y2OoqsqFCxdkOmOSkD/ycaKuwsUfe0bpH3ZTWbL3D8j09PSxK0ptRORgb5yoKs2ntCAbs8mE
      1fL2DuT5+XkmJiaOZV1eoyENEEfSbXtPWYgUpW5vbz+WdXmNhvz5OUQ2Nja4d+8eLS0tcn6P
      QYguJVILc/f+I0oLnSz7VNJNYbCmY8WMNSubIpdsPL+JYDBIT08PTU1NcgkTAxGVAdxTE3i8
      PnxqHtkZNlBsIMK4p+c4V1+Epmnouh5zxo6u66hqbFPxjBQjGAxy584dLl++jN1ujzpmrDoi
      1yOSCHIQ4nEujKgjqpxgAK/Xi6KHWfWp2E0qii0Tu8WCqqlkORxxydk0QmG5eMUIhUL09vZy
      9uzZAw90xaNIHhirOJ1RdEQdKbIIU4acrrInQgj6+/spKyuTo7wGRTaCE0RkCZPc3FzKysqS
      LUfyBqQBEsTw8DCKolBdXS0HugyMNMBrjM8s83/+8oRx985VMfbL5OQka2trXLp0KY7KJIlA
      GuA1Ogen+XFbLZ2D0wfafm5ujunp6QNXZJccLtIAr2EyKQxOLGwu+hUly8vLPH36lObmZjnF
      4Yggr9Jr/OLWeTKsafz83eiqrWxsbHD//n2am5vlFIcjhLxSr2G1mDlXsVlhcb8DLn6/X47y
      HlHkEyBGwuEw3d3dNDQ04HA4ki1HEiXSADGgaRrd3d1cuHBBFqo4okgDHBAhBL29vZw+fVoW
      qjjCSAMcACEEAwMDsih1CiANECVCCIaGhjCbzbIodQogDRAlk5OTeDweLl68KAe6UgBpgChw
      u9243W4aGhrkzZ8iRDUO4F1f4fn0LNk5WWwEIhlhGWRYrIg0K4X5qdsT8vLlS4aGhrhx44Yc
      5U0hojKAPSMDPRwmqIHDloZQLCBCjDyd4HJzc8pmhHk8Hu7du8eNGzeA/Q+QxVvHQTFiJpZR
      dESVEeZZXcI9v0SeM4eNgIrdFAZbJplWO2FNIz8vN+UywlRV5fbt27S3tx9orX4jHIsRM7GM
      oiOqSFm5+dTkbi7eWhCThMMlpGqsrPspdGZG9e6uqip37tyhqalJFqpIUVJ+LlBY1fjtF4MU
      52chhOAHjWf3tZ2u63R0dFBfX092dnaCVUqSRcq35ryBMHlZ6bzXUMniqm9f2wgh6Orqorq6
      GpfLlWCFkmSS8gbIybSR47Dzn//X1wRCKg9GZ/fcpr+/n+LiYkpKSg5BoSSZpLwBFEWhrqKA
      63Wl/McP6vlmcvGt33/y5AkZGRlUVlYekkJJMkl5AwDkZaez4Q/xm88HqS17c/N9bGwMn89H
      XV2dHOg6JhzZRrAQgt93j7K2EaCyxEnLhTdPSjMpCj+7eW7Xv+m6wP3Sgx5cZ25ujtbWVnnz
      HyOO7BPAFwzzbGaZUydyGJvZewUHRVG2/m3nn756Qu/gKP/9t3+iublZ3vzHjCNrgKU1P95g
      mO7H06jawUcWV9fWydKWqbnwDopyZE+H5IAc2VcgRYHLZ05wtjSfydnVA8Xw+/3YA3PM2sq5
      WnsS0wFWgpAcbY6sAUoLctjwh1lY8fLe1egLzIVCITo6OvjpD9+Pe11eIQSCzbaHxNgcWQMo
      CpwrP9ggVWSKw9WrV+N+8/sCYf75628QAt69Us5Jl0yUNzLH7qU3UpS6rq6OvLy8uMcfnn7J
      1epifv5uHV/ce4bHFyLGybGSBHKsDBBZrvzkyZNvXK5cCIEWw3Td2jIXD0bn+G//7y4FuZn8
      a9cIS2v7m4IhOXyOjQGEEAwODuJwON5YlFrTdf7hi8f87svHDD6bP9B+0m0W/v77l6gqzePG
      5XJqSvNYWPXGIl2SQKJqA/g8q0y7F8hz5uDZlhGWabWjIsjLzUmUzqjQdJ3n82uUFuZgs6Qh
      hNgqSn3x4sU3bje7tMFJVxY3r5TzD1885lxZ/oE1fO9qJZ/0jOLIsNJYJ1eOMCpRJcTomop7
      xk0YExZFIBQFRIip8RmuNLdgT/s2yybG3g9d12NKmvioc4S8LBtT8x5++b3zzLpnmJmZobGx
      EUVR0HSBSVF4XaYQ8C+3nxJWdd6pLqLqpBOTyYSuC1AO1qsT67HEI0bkEsdyXeJxHEbUEdUT
      YHnezbo/RE6mlY2Aht0URrFlUH2ulo31NTILNhuVycwIUzUdbyDMB01nebk2ytz8AlNTU7S1
      tWEymXj6fJH7I7MIAT+/VceD0TlUTafl/ClMJoVffu+7J4SqqiytB/hT3xgAH7bW4MyKLjFG
      ZoQZW0fURfL2IlEpkboueD6/ygmngwz77jV2n7lX6Hw8zcziOq6cdM4UZiA2Zmlvb9+qy/uP
      f37CT2/Ucm94lqmFNSqKcrFb09jwh3bMJ1JVlc/6J2iqK8UXDDP2Ypl36ytiPpZokQZInI4j
      Mw7wSe8oOZl2vn74nL/73gVslp3SB8bm+NmNc4y7l1lZXSO49PyVmx/gWm0Jv/3yMdY0MzVl
      Lta8ATRdx5K2u2mb6kr5uGsERYGftNcm7PgkyeHIGGB1I8j7DWdYWvfhD6q7GuD6uZP889ff
      oKsqLhZ492b7juXKK0ucVJZsFvQWAp5MLKBqOpfPnth1v3nZ6fz7v74c/wOSGIIj8wo0v7LB
      Vw8mOV3s5J2qYhQFzOadj9JwOExHRwcXLlygoCC21H0jvL7EI4YRXz2MouPIGCDC1PwaXw9M
      IoAftdWQk/ndL7ymaXR1dVFVVYXL5Ur6jWeUGEa88Yyi48gNhA2MzfFhWy0t50/x9PnLrf/X
      dZ3+/n5OnTpFUVHRnnEWV7183DXMzEtPIuVKDI6hDCCE4PHEAp/efYY/uPvqX03nS/moY4je
      pzNcqjyxtd2jR49wOp1UVFTsa1+f9I5x41I5X/Q/i2nqg+RoY6hG8NK6n9EXyzSdK+GPPSP8
      7Gbdju8U5mby737wXaNUCMHIyAiKokS1XLlJUVjxBABQkNOWjyuGegJYzCYCwTBL6/5de3le
      RwjB5OQkq6urUS9X/uP2Wl4srvPjthqZCHOMMVQjWAiYebnOi4U1GmpPkrZLL892ZmdnGRsb
      o7W1dUfDygiNT6PEMGLj0yg6DPUKpChQWpBNkTNjz5t/ZWWFoaEh2tvb931CdV0QDGuA4KsH
      kxS7srh85oRMhD/GGMoA2/EHw1gtZsy73NwbGxvcu3ePtra2Hb8GL9d8fNo3TrrVzIdttVtG
      0nSdf/rLN5jNCuMzK/yHf3OFu0NuTjgzKc6Pb1aY5OhgqDZAhLtDbn7fNcLvvnyyY8WHSFHq
      5uZm7HY7QsD8ipfxmWWEENx5+JwftdVQVpjN0NR33aQrngA5Djt/e7OOYFhjfsWLNxDaV1tD
      kroY8uqPz6zwq+9f4ov+Zyyt+TiRt5lXGwqF6O7u5urVq2RmZgKbI8T/8+N7BEIadRUFVJY4
      +VPvGB5fkOL8LGaXPLx7pYL87HQ0XefXnw/ys5vnCIY1Wi+WRT27U5JaGMYAy+t+5lc2qDnl
      4mpNMb/+fJCcTBuFzs0bfXtRaqfTubXdmjeAEHD2pJOvBybx+IL84tZ5xmeWCGuCojwHXw08
      5/2GSn7YXJ2sw5MYlKgMoIYCrG0ESLfAqk/FblLBmkG6xYqmazgcmQcS4fWH+LhrhHPlLj67
      O857Vys4V/Fd8WkhBH19fbsWpa4qzae23MUnPaM01pWS47Bjt6bhzLLzdGpzxThH+u7TpyWS
      6J4Aigl/wIdvQ0UXgrAC+DYYnV7k3DtXD1wjzOML4HTYqC518knv8o46UAMDA+Tm5lJSUrJr
      faifttfQUF3E3SE3teX5WNMUygo3i1p4A2HqygsOVFfKCPW94hHDiLW5jKIjqnEAn2eVx0Nj
      FOTn4g0K7KYQii0dizBjycyiuDDvwOMAfU9neLG4zntXK8mwmUlLS9sqSr1XLu9uRNtffHfI
      zcjUS86eyqOx9iSKohiiDz8eMYzY/24UHYYaCIugqipms5nJyUkWFxe5du1a1H310Z6oX3/2
      iF+9f5HffD7Ir96/KA0QZw1G1ZG0blBV09nwh974ujQ7O3uoRamzMmz8oXuUzHRrwvclMQ5J
      6QVSNZ3fffmYDLuFElcWTXWlr/x9eXmZ4eHhqEZ5F1e9fHZ3HJsljQ/baqJ29oet1ax5g+Rk
      2uTI8DEiKU+ApTUfJ5yZ/KS9lvFv1/b3+IJ81DFEx4NRBgYGaGlpiepR1zk4zY9aa6k+lc/T
      Pcog7YaiKOQ67PLmP2YkxQCFzkyCYY3ffD5I8/nNlRj+0D1KU20Rn//5NrUX6rHZbFHFrC13
      8YeeEQbG5qgozk2EbEkKkpRXIEVR+GHLq4NSGTYzH33yBYVl1eRkR7+icm2Zi1OFOVjMJqwW
      c8xdZZLjQdJHgoUQvFhcY/H5U2rPnafubDmZdguqpvP42QIFzgzyszOwW/eWmvmG9YIkkjeR
      dAP8458f88VfblNcUsqJsBlXbgaqqvLHnlFMisL//vQhteUuftxWuzUtQiKJF0k1wOYUh36a
      62sRNidef3jrb75AGLNJ4WJlIfXVxQxPL0kDSOJOwgzgD4b5qGMYVdP5t01V5GXvnHX55MkT
      rl+sYHw1jYocCx80f5fTm+Ow82BkloVVL+l2Cz9qlauySeJPQgyg64JPeseoLHFSfSqfjkdT
      Oxq9Y2NjBINBfvHBuzu6HnVdMLO4znsNlTwan+eXf3UhETIlksQY4KuBSQpyMviXr7+htszF
      rfpXC1K8ePGChYUFmpqadu13VxQYn1lm2eN/4/IoEkk8SIgBvIEQpQXZmM0mVE3nZEEWvd+8
      4PddI1w45cDkf0l59SV0sftAhGCzX/8HjWf5tG88ERIlEiBBA2HvN5zh075x/qalhstni3jm
      XuH/3h7i+++U8tlXXTxcsPDl/Qk+7hzeXZSicKv+ND1PXvD9a5WJkCiRAAl6AtitafxNaw2D
      4/Os+4L8pL2WsyVZ/PHzr9EcpVw8W0J2po2OwSmE2Fyj5/W1ecpO5FB2whgllySpS0zToX0b
      6ygWO2kmE0LoWK3WV6ZDTy+s8eW9CdJMgvDSBI7C0yhpNp5MLDC34uW//Kf3GBidpbLEyanC
      7252I0whTqUYRpyGbBQdMRhA8Gx8DKEINlZ8lJ6twpmVvjUFQQhB35CbPIed4Sf3CVld/OTW
      FQBCqs7jZ/NMzK0TDIX5xa060symb+tx6WiahsVieUVopPaYoiiv1CETQuz6efuJev07kXjb
      Y+/2ORwOYzabd/3OXvuPfNY0bfNEv7Z/IcS+tWyP+zYtW1fmNR3ba2K9SeteOt50TaI5J9uv
      4W773885eds12a+W7fuJyQBjw0NgSSPsDeEsPsmJ/Bw0TdvaSTCs8V//x+9wFZXy9x+0kJVh
      fUVESNWxpJm2VuaM/L+maVsZYfu90V7//DYD7HZCtu8/8jmSmLPbBYvFANFq2V4Y7m1atq7M
      AQywl47t12QvHW8zALB1sx9Ey+vX5CBa4pYRFg4FwZSG2bQpwGw2b70CRYpSu1yuN9blfRNG
      eG1IpRhGfPUwio6YIlmsu09ZjixX7nA49r1cuUSSDBLSDTo6OooQgtraWplgIjE0cTfA3Nwc
      y8vLXLp0Sd78EsMTdwNkZGRw7dq1mKt5SySHQdzv0uzs7JiXRZFIDgv5My051kgDSI41cZ8L
      FBk0kTGMEyMy1BPLIoDxOg6j6Yi7AUwmU8wNYEVRZIw4xtg+YposDUbV8f8BpODGgKigjggA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medical Condition that Contributed to Death in relation with Covid' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Political Afflications and its Impact on Infection/Death Rate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dd5Ac+XXfvx2mJ+eZnbQRu1hkHHAZ4B2N05EyRVFMLqpoUqSCLZVKUpVt
      lcslW7QklmhVUaWySsFVlizLlqhIMRxFmoo83pHgRd4Bh7QLLBabw+zkmZ7u6fjzHwtMT8/s
      LhbAJuz8Pn+g8Hv7+tdvuvv94uvXDCGEgELpUtjdNoBC2U2oA1C6GuoAlK7GcgBC8OI3voQ/
      +MM/wFe++RJMuYhLE3P3VBkhBFffOo8/+vOvbLWdFMq2wN/5DwFw6cY0fu7f/SI4EHzvm3+G
      v/7OTXz0Ix/BycEwvv73L+LxZ9+L4QiLyeUaZueX0RMN4InHH8OFC2/j1OlHAWICriBI4+Yu
      /iQKZfM0ewCGAT78/vfgf/7+7+DL33wJZ9/1DM78wPvxA2dO4ytf+zt8/Mc+hVf+4RuoFBfw
      wj+9gufOPYvZ65dRqtdxdWwSDACG5XDs6FEwu/iDKJR7oekAhBjQuAB+/ud/AfmFCTAsC6km
      wiQmmuukZLWnePLMM/A4efzge57Bn/z+7+LgY8/uivEUyoPCtv43O3MN/+f/fgHvff9HwAQH
      0Oco4NUL1/GvPvRD+Ks/+wLOvu8DCEUyGM5EAQD+ngNgXV48figJADDqefzh//rfMA0Vf/P1
      f9qN30Oh3BPMg2yEvfKtr8MIDuPZx49upU0Uyo7xQA5AoTzs0H0ASldDHYDS1VAHoHQ1/N1V
      KA8DpVIJe20653K50Gg0dtuMDlwuFxYXFwHQHoDS5VAHoHQ1dAi0z9DVBhYXFsC7fJAbDYQD
      HtQkDTxRwLmD8PImcqUaEpk+eJ3W7ZckCZqmIRgMolwqwgSLSDgEAJifm0O6txcswzR1OY6F
      IDjBMJsPfJmemkJfbxomK8DBdR6nSRLgdsOQaljOl5Hp64OD7dQrFoqIRCMghECWZbAsC5fL
      ZSkQgrlb10F8PehPRDa0ie4D7BPuzAGIoWMlX4BpAi4nC7ACCABdVUAIgUvg4PZ5cHN8CiWp
      gWTYjYpsQnBwCHic0MEj6PeCEIJquQCGd0KSZcjlAryRBNweD+RqCd5AEMTQoRoMWFOBwxNE
      fyZps6l1DmA0Knjz7TEMDPRBMgn8gol8UQFggAMDwSOASAoc8QSchopYTw+W5qYhaQBjKOAd
      TpimjqVsGQNDvZCKWaiMC2AYREN+SGIVPA+IDYJEaghuvQTdF8TS9DxC0RiS8YjNrjtzANoD
      7DMURYYsNxAKBVATGxA4FQYjwAENDk8QAqtjcbGA/sE+eCsiPA4WniAPGCr8wSCIJkPnPHBy
      BB6Pp1lvxe+Fy+uHKDUQj8fA8C6wREdDB4L+nrvbpXN44swTqObycLl9CLkM5Ao5pFNxVMQ6
      4tEwXBxBrqYiGglibnYOPq8fjEEQ8icAADwMsA4P/D4fBJiAwwNNkeD3+cESEw6XC/GUDzA5
      8IIPnMMFn1uAz+dd1y7aA+wTtmoVSNc0sDzfHO48CHQViLLj6IqM6ekp1Bvaujqatv7feIdj
      Sx7+zpPKkNRVB5XFKsrVevNPpq5BN8muOAsdAu0zDEWFamoorizjnflF9PanYZosOKKCFxyQ
      GiaUehVDo4fhFnbw9usysqU69HoFHGeCZVhcu17FUDoGTapD98URYGUsLGhwOHgoiooDIwfA
      bYcztkAdYJ/B8g5Ew1GYmoZUOg1T18DyLjDG6t9j8QRkJ7PzLy2xPBwOgnhPDCoIWF0DI3jA
      MDp8oRBEw66b6glgJ8bmdA6wT1hvDqBpGhwOxy5YROcAlD3Abj38DwvUAShdDXUASldDHYDS
      1VAHoHQ11AEoXQ3dB9gn2KIh9wg8z99TtOhOwfM8IpHV4Di6D0DpaugQiNLVUAegdDXUAShd
      DXUASlezbQ6gKMp2VU2hbBnb5gCqqm5X1ZTdhJgQxfqGKvVaDYa5urioK3XIqrkTlt0XdB+A
      YuOFr3wRvkgSmVgEid4+1MpZXLo2g7NPPw6e41BYmIQneQBTV8aQySSgaxqKpRoyqQQYhsH8
      zDSSmQTGryzhsZOjmBifwOCxk7jw6kuQhSga+TkcPnka5ZqE5anrOP7okyiVaxgdGcJubBlQ
      B6B0kIkHMH7lbbx26Qaee++7EQmWMHHlTTjCQ2BlBYXrl9DQWEzNTKOvJwxVaeDGbB5JH4uG
      TJCrToNlV99wkU0CF89i+NAx/OO3z6Mn1gO5ksf5Ny7hyMAgZq5fxGKNxdDwIIRd8ADqABQb
      zz3/PgQDHvCcE75ID2KRMJCuorBi4tChA5CyDJZLdVy6OIYPfuB9iAY9uHFzFodifhRFAzcu
      jeHU4WGUFSc0MQuHN776+SwGOHn6MSSCTogNA+966mlkYl6oJg/XSh78Lm0Yb9tOcK1Wg9/v
      346qKXsARVHgdDp324wHhi6DUu6L/bLIQYdAm+T6tctQTR79vQkY4CHXyjAZFtFoBMVSFSGv
      AElnwBITqiyCYzkUGzqSkQDkeh3xVAYOjrY3ew16RzZJIBxD0O3A+MQEctkFGIYBTTNwbew6
      TEXEzcUiBLYBTTNRLOaxlK0iFougsDgLjXNhjRSXlD0A7QE2iYMx4YgmcDQahqQBoYAPAJBK
      xlAo1TASWe0B4vEgYDbgD0VRq9XQO3wIxXweJgG4Xf4NlE5sk2BCCERR3JKKJUmy5Zak7C/2
      y/219QAMw2zpyg1dBdrf7If7S+cAlK6GzgF2mEJVxn//61eb5ccPpfCRdx/ZRYu6G+oAO4yq
      GbgytdIsp6K+XbSGQodAlK6GOgClq6EOQOlqqANQuhrqAJSu5h5XgQimp2cwODiIciGLUt2A
      k1HAuvyolCpIp3r2xeYIpXu4JwdoiBVkizUMDgKirIFnDJiME1q9CEmUMTvbQKpvEEGvC4Zh
      QNf1u9ep6vjk515olh8/lMJ//uS77vmHPCyYhmErE0I2dZ32Gpu9v3ude3IA3TDB6DJWihXw
      jImybECADN4TwuBAFLVaGaqqggt4wXEceP7u1XOG/X0chmE2ddzDCsvZQ+Ie1t+72fu717mn
      X+ALRvDkk0/eLgWRbPt7OBrdGqsoyJcl/PbfvNYsP3kkjQ89c3gXLdqfPPwuvE9RNN22Y5yJ
      07nVdkBXgShdDXUASldDHYDS1VAHoHQ16zqAYRioF5Zx/tW38PCv9lIoa7PuKpAuV/HWpauQ
      4abdBGXfsu6zLRVzmM7W8cjRYezd3L4UyoOxbg8Q7h/Fp/tHbTJVquHK5cs48MjTqC5OoiRp
      cDI6GAeHpUURo4cHkE62b49RKHuXDTfCLrz+T7h8qYaP/fRH4QbA8A4E/F4YugHCCQh4OTAs
      B2Ka6O/lkcsuQdWBvlR807Eixj6Jjdksm40FMsy9fV26IhYoFMkgM7BiJXQiJhh3CC5Wg78n
      grJkQIAK3hOCgyVQJBG8JwiO42gs0DpsNhaIY/d2zNC+jwUiRMWVS+MIpvqaSg6nB8NDA02d
      Hrf9mP2QLZjSXazrAAwjIJP24/z5i3ji7BNwr6dI2XOUxQb+7vWbzfJobwSPHUrvokV7lw16
      AANwxvDooxz2Y15XWdHwwvnrzfJAIoizx/t20aKtoyI28FffutIs//CZg9QB1mFdB5i/dAE6
      b2Ayq+DsTlq0QzRU3faQPHuyf984AGXzrOsA8eGDKE/N4tGTQZjo3pgJTTcwPltolkM+J/p6
      grtoEWUrWdcBXL4gOENFtaFiW76h9JBQrSv4zB+92CyfOzWA//CjZ3bRIspWsq4DSJUClksV
      eNzb29o5eA7/5odPAwBev7awrefqZsq1Bv7uDWtifKgvikdHU7to0c6jZ1egF/LNsjA4uL4D
      uAN+5OeX4AkoMAA47uOEU1NTEAQBmUxmXR2GAYZSYQDA+Eweqm6sq0u5f8ptE+MfOTu65x1A
      fPk7qL/8crMc/vSnIAwO3n99L76I6tf+tllO/PpnN14GPTiaxvjNWnMjjJgGZmYX0D/QD71R
      a26Ece4g6rUywqFQcy+AEILp6WnwPI9cLodcLodCoYD+/n643W5cunQJx44dQ6Vaxc3pRaT7
      BtC9Mw3KWhi5HJRrY82yKUlbfo4Nt/JS/QdRKl9vzgF0VYWb11GRDVRzRZimAYnlYBSzmFuU
      kEkFkRkYgZNnYJomjh49CtM00Wg00Nvbi7m5OaRSKfA8D8Mw0Gg0UKvV0Dd4AD5/EMiVd2zL
      f7MhGO165gPatxOhEIZpD18kJumozzTNB/odOxEKYbZ9wdc0Hszm9voMw9jYAZZmxzA/W8Od
      S6eIJdxarmDUL4MxVFQlHU5GA+cO4eTRHiyvrGAll8dgbxLT09Mol8sddVYqFVvZ5/Pj5Qur
      6/E35wvwuAX884safv1PvtPUOTIQw4/94Mn7+c3rUpMU5GeuNcu3+DzOn9c67a037HqOAs4n
      7v8ToYWqbKvvpquE81G5Qy9flux6njLOhzfXAmaLou3YCV8VQX3ZLvNXcT5w/5/DOnXq1KZC
      IYimgdz+pKo6MwtHfx843+ZSwrNtX45nOfaBwi/a6+M4buONsFKhCs3LN3eBfbE0zsRWN1Si
      wYPobzsmEk80/z88PLypLHGyouH3vnU7+4G7F8cOp/Hud59B7CVrsnLgSAbnzj1717ruhVJN
      Rux8ybL3aD/Onevc8ShUJPzx9yxHHjk2gHPn7n8VaKkg4k9fsxqBg8cP4Ny5Jzv0FnJVfOGN
      aoveMM6de2JT55hZLuMvvm893KMnDuLpx4fxl29ZskMnRnHu3KP38xMArH4I/eLFixgZGYFv
      gwfaqFSgr6ze35XP/Qbiv/Sf4D7Z2ZjVv/NdiC+91CyHP/Wp+7btXljXARYuX0DPiWfgGr+K
      OgDvjphzb0gNDf/tC99tlo8NxfGJ95zYRYu6B0IIFhcX0Wg0QAhBtVqFqqpwuVxgbre0giCg
      ms2ilM3ig89u3IDp+bbxfr2+rfbfYV0HiB04iNLULPypNPZqiJthmrbcOX6P8ED1VSUFn//z
      7zXLj4wk8PyjQw9U515GVjTcXLB6wVjQjZDP1SFLRTt7ck3TcObMGSiKAlEUV/PFlstIJpPI
      5XIAgNdffx2H02n0OJ0dw4+9woYbYSdOdFdrqut2h4oEdiYEMF+R8NtftLLAPXE4jScOb3/s
      zlJBtG3yffBdozh3atAm+9Azh/BT7z/dcez4+Dg0rXPOlM1mm//v6+tDaXYW6tQUVi5cQD27
      jNCb34ezWOw4rn7lKsQV69jwm29CnZ1FvVX2xhsQVlY6jhW//RLq37VGAuGf+HEI/e0DdEC8
      ds1WX+T117cvM5xpEly+ZW+dB5Oh7TrdQ037d8PSMT82N9rfPU6ePLmpOV7lha+hMnY76DDe
      g/gTj0OdvIXKX3+xqdPzy/8FyvFjqLQMgXqeeAKK34/K2Lgle/JJuI4e7ThHeSWH6vUbLXpP
      wXX4UKfe0jKqE9ZmYOKpp7bPAXTDtLUkj42m8Cs/8S/uuz7DMHFtxpoYB7xORPyuB7LxYUNR
      ddyYt1rPaMCNdGx3UiZqCwvIfvFvmmXP2bPwv+f5XbHlQXhoXumRVd3mUE8f7cUvfHRvt5PZ
      ooif+a1vNMvPPzaEj507dt/15cqS7Rr80FMj+NkPPf5ANt4vptywTVqFkZFdseNBeWgcgLI2
      DVXHRFuvQAHEF7+N+vnzzXL4J39iTT3qAPeBqhu43hIiHfa50NsT2BVbVkp1W6/w/qcP4n1P
      Du+KLXsJvS2Mgkidm43AvX4gQ5EwvZTHyGA/lhdmV9OiQAMrOFEqSujrTyK2wTcCTJPg6nSu
      WfZ7BCTCW7vDoBsmxlrmCkGvE/2JrY1orYgN20P33OlB/PQHHsXfvmJNxIZSIQzRSf+e554c
      gHd64HWuxoXqhIXPxYNh3DBNBQJnYnlpETphEQ8H1oxlkRW1Y2L8iz/6VIfeWnE6nTJzTb1a
      3f5wnjnWi5/5wGn85Oe/3pS963gvfur9p+7rvCYhMAyzQ69at0dbPnd6AP1tOf0JIWvGAnVe
      K3PN69cRz0MIzDWP3VwsUPuxpknWPHat+BuTtOutHadD2upbPa9dZpgGTLMtTsc0Nx0L1HkO
      Y+1z3GssUDuqLCKfL8Dh8sLndqAssRCIAoc3jHA4BlmsgBeE1bQoa6T14NZICXL/MnaL69uc
      jGUYcBx7V7317FsrLUrntWLXvn5spy3smse22ceucSzLdhzLssyax1YlDf/w5mRTdrg/hj6m
      XW/tOB2mrb7V89plHMuBZdvidFh2zVgg8asvoPrlrzRlPb/6X9c4B7f2Oe4lFmgtBLcPJ04c
      v10KINQ22qFfiNyfFKuyrXf78LOH0bdPEgDSAHxKV0MdgNLVUAegdDXUAShdDd0Io2wZ2vwC
      in/8x81y6BOf2EVrNsc9OQAhJhYWl9GbSUOVN34pntJ9mLLc9lLL/b9yuVPckwPkFxfg5Aiy
      VQ2N0vovxXuctGOhPBzc0xzAKTiwuJSDqSurL8XXFTTECkwuiJNHB6FpGlZy+btXRKHsEe6p
      qQ7Ek3gkfnsHJLLxS/EUysMAQ4gVIEEIgShuzbhNkiR4PJ4tqYuy99gv99fWAzAMs6XhDDQ0
      Yn+zH+4vna3uMDVJxTdetcKmh9NhPHlk/dyplO2FOsAOI8qqLbDsvY8foA6wi9CdYEpXQx2A
      0tVQB6B0NdQBKF0NdQBKV0MdgNLVUAegdDX3tQ8gVoqoyAYMqQydc8GQq3D5gigXCsgMje5Y
      VmXK5lkuiPi9r7zRLJ893osfPjO6ixbtDe7LAXyBEGryCojgBm8YEAJh6KUFRPtPQBJLCHqF
      HfmG1MPIZr8RttXUG4otA/VAIrDnvxG2E9yXA1SKeRSKFcRCHpgOLwypDF96FKXsLaSHRlfz
      AnHcA33Pab+yVl6gnbhOa+UFepDz7pf7e1+/IBjtQTDa0yKJrf4b3t6PalMoWw2dBFO6GuoA
      lK6GOgClq6EOQOlqNnQA0pZOmkLZb2zoACvzt/DFL34Js0s00wNlf7LhMmh2pYAzT52Bx0uT
      XVH2J+v2AISomJmex9TCIsKBh//lZwplLTYYAhEMDg5CqddhrK9EoTzUrDsEYhgnZLmKm2Pj
      eOa95+DYJgNkRcPHP/vlZvmJw2l85tPv3qazUSh2NpwDxONxHDvtoqkjKPuWDVeB6pIEwbFd
      bT+Fsvts6ACaWsaNyzN4+INeKZS12WB0QxCLpdF3tAH6egtlv7KuA+RvjWO6ZEAr56EAoDsB
      lIed8l/+Fapf+9tmOfHrn11/CMS7fTCkMjgHffQp+5d1HSCU6sNQKg7B56WrQJR9y4aT4Joo
      Qswt4dZ8dqfsoVB2lA0bd4fDAVbwYqB37S+/lPJZSAYHF6PDHYyhnF9GIt0LjtkWWymULWdD
      B/D5vHAHVHDr/H1xcRHJvmGI1TpKuYvgQ/1YWFpBJhHddNYAY40sCQ1FxVfPWzn0M1Efzh7v
      vfuveQjYrawQhmk/r2maXZcVwmwL7zcMY4NVoKnruDhxE6OHzqzjAASRSATzC/PgTQVOtxeF
      7CIy/UP3lBWCM+xGMQwDkzC2HPpPHcng3acG71rXwwDNCrF7sIx9aMJx3PoOwLs88Lg8mL5x
      FYMDz64RC8Qg1TuA1P5omCldyroOEEr14blU307aQqHsOA9XH9ZFKKqOG/PFZjkScCETC+yi
      RduLnstBz+WaZWFgAKzXu+3npQ6wR8lXJHzmj15slv/lk8P4uQ8/sYsWbS/1734XlS9+qVnu
      +cwvw3X82Lafl2aFoHQ1u94D8ByLjz9/HABwYWJpl62hdBvb6gCTk5NwOByIx+MwTRP5fB7x
      eBy1Wg2yLCMajSJfLKFeLUFw0phTys6zbQ5ACMHKygo4jkO9Xke5XIZpmqhUKohGo5iYmIAs
      yzBMgvzSDAKRtXebKZTtZFt7gNOnT4MQAk3TcPDgQUxPTyOTyYBlWYyMjEBRFJRKRUST/eAd
      AlCubac5XUO2KOJ3v2x9DOPMsV4cH+rZ4IjuZdscIJfL452bi82y3y1gIBnC3NxcU8ayLMLh
      CF78xncBrH5FfSQTwc2bExCL1nwgv2zixg0rNOJhJleWbL9tZZHHjRuhDr1sqd6m58CNG5tL
      P7+Yr+G1t95plt1mBV5Ss9WXXXDhxg3f/fwEAEAisT967G1zgFA4gj952WqFHhtN4b3vfrJD
      T1Y0SOzqzWK9QDSZxsjIQfgil5o6sWQGo6P743M+/oIIX2S8We5J96/527y5KnyR63fVWwtn
      oAxfZMJ27NCBYZsskdl8fWtRq+2P3nrXV4E2i6xo+NyffrdZPjoYxwffNYof+9xXm7Izx3rx
      S598ZjfM2xGqdQX/7zXrIT6YieDxw+n7rq9Uk/H3b0w2y4f6onh0NLXp4y9cuID+/n74fD40
      Gg3U63WwLAvTNOH1elGpVBCJRJDP5zEwMACG2Xthwg+NAxgmsX3jyucWdtGa3aFaV2xBgj/0
      1MgDOkDDVt8H3zW6aQe4s6AxPz8PVVWh6zoEQYDH44FhGJiamkIikcBrr70Gl8uFVCoFp/Pe
      3i7c7O6wvrICPW/lrxUGB8F6PJs6x0PjALtFpd7Ab/7FK83yqZEEPvbc9u9Q7nVM08TZs2dh
      GAZUVYUgCMhms0ilUigWi8hkMnj99dfxyCOPQBRFOO4jvU795e+g8iUraVrPr3wGrqNHO/TE
      l15G9SvWSKDn134VrsOHNnUO6gB3QddNW88TC9L9CgDIZrNg2c5AgpmZGQCrc4QDBw405wo3
      b97csD5xcck2r6jMzEBdWoLYIqtOz0BYIwS71qE3DYHtHG7VlpftelPT1AEo90cmk4Hfv3VJ
      kytXrqDSUl/PwAAUWbbLBgfgWmPiXr74Dqo2vcG19d5626aXGBrsDgeoiA18+jdeaJafOdGH
      X/jok3jhvLXKMpAI4uxxGv49uVDEL/6Pf2yWP/TMIXz4mcP4hzetyfLh/hhGktsfqbkTdIUD
      rEVD1W0TwGdP9lMHWIdiVbZdqw8/exh9IlD6/G82Zf4P/gjCn/jXu2HeA7FlDmA0Krh4dQqZ
      gSEkY2tv2JgmwdVpa1bv9whIhB++liRXruPf/ubXm+XnTg/i33/s6V20aO9SP/89iC9aYd2h
      T34SRFWhXL3alHmffXbLz7vWytBabJkDEENFNJmGpirr6qi6YYtxf/xQGv/x42e2ygQAgG6Y
      GJuxfnjQ60Rwk1+4qUoKPv/n32uWHxlJ4PlHh7bUvq1mpVTH73zp9Wb56aMZnBzeO7u0ej4P
      5dpYs2zWRaiTt2yrO85Dm1uxuRfEb7+E6letYW/is7+2pt6WOQDniUEoLyKZymxVlfeF1NBs
      Tnb2eB9+9oOPberY9hWfSODBVnyyRRE/81vfaJaff2wIHzvXuYRakxR841Vrg2s4HUYmtrkJ
      ZkPVbTb3J4J7ygG2GvGll1H/znea5fCPf/qB6mNIy6cgCSEQRfGBKryDWK9jKltvlv0eAb1x
      P8ZmChvKAh4BmZgfY7N2WTrmx3irzOtEOuqzyYJeJ1JrySJejM8VbbJkxIvrLbKQz4lEeHOy
      npDX9rpi2OdCPOSxy/wuxINu3Jgv2WSxoBsTLbKI34VowI2JhbvIAi5E/G7cbJFFA26E/a5O
      mc+Jm4tlmyzkc2KyRRYLuhH0bk4W8Dhxa6lV5oEfCvislTCNi0bBxeO2pVHTNGEWitBzloPy
      fX1Ao2Hb4FpT1t8PyHKnTJKh59tlkm24w/cPAFLdJnMMDICIdegFuwxkm6hWq4QQQurVErk1
      M08IIcQwDEIIIaZhEE3TbTJFUYiiKDaZWCmRUqXWlJmmSTRNI5qm2fQIMYmq3l1WKZeJaRKb
      rFYukOm5RZusWi6SclVsq8+iqVcqkJn5tmNLeTIzv3RXWXkNWwxdJ7pu2GSqqhJJkuy/o5gj
      swvLd7WvXMiRucXN6K2QucXsXfVauXN/S/ksmV9aadEzyeLcDCmUq817ZslqLTJCDF0jumG2
      6U236ZlkYW6aFCs1mx2aqhKzxTbTNMnC7DQpVsQNZe2/a9tfiZyZvIaxm6sRoHdah/Hxa7h8
      7VpTZuoqvv/WW5icnrXpTY5dxPfetvSIoaFULGIlX7TpvfP9V/HSK2/aZBe//wpeeuX7Npmu
      iLhw4SJWipWmbGL8Cm7OLNjtu/I23rg0bpNdfudix3mvj13Grdkl+7HXLmNqbtEuu3oJ0/N2
      PVWq4OLFC8iVxaZsbOwaroyNNfXEagkX3nwV1ybt1+/q5Xcwt7hsk126+DbyxbJNduXyRcwt
      Zpuyeq2C1157HW9dfMd+7DsXsbCctcneufA28qVKh6xwW3aHixcvYim7YukpZbw9NoOV5dWN
      MoZhLFl2uUVWwjf/+VVM3LzZIivirbE5rGRbjm0U8fbYHLLL1sYbUcq4PDaJ6zenLFmjgAvj
      1rEAYMp5XLg+i5WVlVUZIViZHcMbF8dx7cbkam4kbCPE0BDLjMAXN5syRa6DZRgwrHVqlhdw
      aHgQ04s52/GR9DCOpFpiXRgG+eVZzJcNpJOr8e2mriLVN4yYad/5SyRSYGr2bGiMw4P+/l7E
      ItYq1eDIEaQMezuQ6juAXpd9DB7wCrg1M4+eWKQpGzn6CEzTnthrePQoNGIloZLqNaQHR8Fw
      9tiluqQgke5FPGSFJLucArSWNGS+QBjp/gPIZOzJlw4dPQ69LVOTx+XAcq6AWGQ1tFpTFYwe
      PmbT8/qDSMSC0FgrTkZVFRw+ehw601afk8dKvohYONjU41mCheUcomHr+h0+cgTgW+JueC+e
      efIENLPlmgoBnDoyCH8oZskcPgykAvAHwk1Rsabj1JFBeFtkCnHikcP9CLQeK/iBxhjCvSea
      IsYVwqnDAwhE4k0Z6wzh5KFB+IO37xnDIN47gsXcRcTiR1Z1sI0wnAOaqkAQrIvrdHsBMGCI
      Pa0eIQReb1t8ui7h9betsGiWc8DlcsHntS44ywuQ6jVUq/aWSZLqkBvWipRUq6Inj5AAAA3G
      SURBVGBx9hYWCvYw3rm5uY60gQ25AWKaNlk+n4OsaJZpagO3Jm+hIkpr1Gcd6/H6Ua2Ukc+v
      2PRq1SIWsvYPkHs9Xng99mVhpV7GleuTNtnsrP0cAKDogKk1mmWH4ESj0YDDYW/jypUaAj7r
      HMIdvbYQA8UAdEWy6UXCYbhc9hW1XK5gO0cul8eVK1fAtWbAU6uYXSrDJC026zJEBVAVuSmK
      +J0oVGRkW+YWTgeLWk3G1PT0qoAQrMzegMz64RKsx5c0KpjNVuznMHXkVrJoaNb9NeQyFMYD
      l2PVvm0fAjUkCZpmf9jDAXdHC5YrlKA07A9TuZhHXVbtx0YT6E/bVzncbjfcHvuKDcvxMHXr
      gfX4g2B5J6DZz+HiCabmlptlQ1MRDEc6Qnd7kr2IejmUaqvH84ILLsGBarlk0xNYgpn5ZZvM
      VOsQFfsD63K5bXlCNU0FWBYMY78lDY3A1K0HW1NVZDK9HfZ5XAJMXUVVsq6XLEnQdbtzR0JB
      VGr2hQ5JkqC32EJME4FgEMGAPQ+RrOjweV02Gc9ztnPEI16wgh/FkrUgANaJgE9ApVK1ZMQE
      AUBg/Q7F5BH2O5FKJVvOQMByHMT67QUVhkFPug+qXEGhYF17hnNCaZOB5RGNxuAWLGfkXEF4
      eB2SvHpNt90BZFmC2SGT0WhpnU1dQzQaQzgSten1Do3i6MiATVatlFEs21v7XC4Pj9se/sqA
      QSxmry8WDYPj7UORYLQH8bB1ozmHgGJ2Hrfm7BkqDBNw8CwkqaXFCgU6PiASjvUgGrY/OJFY
      AvGwfXOQ4V04MjLYLDscAhpiGVXRqr9WKWLgwEEcP3qkKVMaEhRtjaS0DAcnT1CTrOsqS2Jz
      bN+sU6yh0bJXo6oKIpEImJYHUdcUzM1MoViqQjPMlmNFOB326yfVRSyvtPRuDj98DhNCqx7n
      gNvBQxBaZIIXPgcDb0vD5eRMzC8XgNZRpaGjWBFx4ljL8jHLIZVMwetx2WTpZMpWn6nWUKo1
      sLxi9bSmJqGuAkpj9TpvuwPEexIwdHsrLtYV9GVaW3GCW9PTKJXsrWm1XEa5WrXJOBaoidby
      KiEEiUTcNtwBgKooweu2t1YMw8AwrIfH0FWwnAC32/4Qh6I9iIWsh9jQVHh9PoRiaWQSllOV
      SgUYrb262sD0/FLz4t5BEITVFr4Fl8BDlOx6DC8g4LduIMMwmLg+jmLLxNMXCEGRJVQqZdux
      c7NTkInbtn/gdLoRClq/Q6yUEIomEAtZr2AKghO53AqmJ64gW17t3RxON0LhGCBlMZezegu3
      k0M239KyA4iGw/D4WuZLagWzORH11jfG5CKWRA25liVNqCLqGgOXq+Ue8W6kogGomtVzw+FB
      Muq3ZISgmF2EYjCQZOv6KaoBj1uA2+1u6jUMB7wOAz09PU1ZoSyhNxlFOLI6z9h2B5BkGbJs
      v9HxhN0pWF5AJp1pTmzvEAiGEAnZ35ct5rOotQyLpGoJS9kcSmW7o/REQyi0yAgxIWsmIkHr
      ZnG8gPnpCUzcmm3KVhZnMDUzD7OlReQcApaXl8Bx9stVrZRRb3E8XnAhFgkh2fa+bK0mImnr
      1oHZmVuYW7LPCyqlApZzViPg9gZw4sRxxKNhmx7DMNaNvs3B0UPIJO3nDYcDtobBFwxjfnIc
      Uwv23s3t8SKZTEHgraGC3+dG76FHcSBpOZBqMNAV+72sKxqUunWd8+UGTh4eRDJlvVijsF70
      R33ozbQsaDh88LsI6pI1vIOhQlIN24MNQ4WstMgYBpFkP0IuBr47c0ZCIBbnsZATMTc/b7tO
      yUw/PE6+eWw8FoNYrSB7u1fYVgfILs5hOVdAKGS/gZLU6RROB4u63LDJZiev4o1LVsSmXK/B
      F83gxOhgU8ZyPCKRqG11BgDqUr05zgMA09CRXZyHpLRMiHQVmYERHD5ohTt4fAFkenutiwag
      XiuD452otPVGiWQKvrZJITENaG1585cWpnHpmvVSvyRWEY0lEI9aNi/PTUHnPOhNWqsYHMdh
      bmoCl8cmbPVpqrKaRaOFasU+ARSrJTR0BvFIqEVWRt/IERwctAf9KbIMpy+CsM/6LbIkd3y7
      Id6TQCJh2VctF2Boin3FhwFKxQKMllz8TgcHxuFGpKVXhS6j1iC2eV+uWEHQ77H1WgBQkxXw
      uG0LISjkC+AFwZqQMwyi6RG4zBpiPcmmzOP1we/3w9myCGNqEjhfrNmTb6sD9CSS6MukQVqW
      CuV6DZzDAZ/XvsyYnZ3AzQVrB9c0TQwdPoUnjo80ZW6vH6qu23sKhlldM255AaJeLcFkXeiJ
      WY7H8QIEQYDP67bJGJioVa3umuN4OBwOWwvr9YfgdvIdD0SlJjWXHa3jHbYVqXqtjFTvELwu
      64F1ebwYHj1iazl70n0Ie/jm2nvLD+yY8OaWFzA2MdUsL8xOweH2oVy2hkW+QBhetwBFUZof
      hvAFQshkMki0NBaK0kA0FrOdQ1UVRKLRjvMamgJZtnqUQCiKYrFoG1YSQkDaPkQBhodUWsJM
      6zI350LAwyEQtK5fsVqH1Ggg6LPmcybDw8lo4ITbMoZBrCeJdDoNf8u9JEoFEnHDJaz3OZdV
      WIcbhlSGfnvZfFsdQGk00H4t3F4/xFoVhaJ9CTDSk0bYY7VAakPC1MQ4FnLWTW1IIoJ+P7K5
      gq2+dDqNVI+1TszxDnA8D1/bypDLwaBQqaMdpWXM6fb6kUwmbT2Koanw+QMIBuwT2f7+/o5l
      Ro/HbXOeeq2CbKGC/l4rRoplOVTLRQweGG7K8itZCN4QErG24Q7HIxq2HhJD13Hq8adxZNha
      HBAEASzL2ieeWH0YnRxBWbR6wm9/6x9x8aoVnKY2JMiqhmLL/EsQnCiVSvalTADTN8ax2LLK
      UqsUMXLoCHpbhnfxRBqPnDqNaNBa0h67dhk3ZpZt86eVpTmoJg++ZVgZDwcR8PlQaxkWTdya
      gc/rRrFo3yNq+6Eo1jQMpCMdH8Fox1RFjE1MYW5xdRi4rRthLq8f+vwtTBYMZFKrrbZUqyGd
      6UWuaJ/EFSsiEj3WGNHl8cHrFlCuazZZ0nP3XDYujw8Hhjr1fH4/NPsoC6JYh+DY+DIUVpZw
      a3YRoXgaqYTlaLOzs4in+pvl7MI0pmeXEO6xHvae9AB60vaVLAColEvIlkQcOXhgVS+VQSGX
      hdrey5Ty0Ot687xTk5MYGBlFdfF6syeMJzOIo5PJ8WvQvHE8+7hlzyOPPAINlqMQkwCEwYGh
      waasVi6CMCwajQYAayNs5OhxmJzVSBECEFVCQWGR3CDv1pETj6J/oAxRkhHye2//3n6UxEnb
      fkYk1llJ2O+BrGhIxDd4+f92r3BXCEFZVHFwMINoZLWB21YHMA0d3lAccd0aYtQqRdQNQGzb
      QIpGo+BaNmMaYhm8P4HBwNak0hCrJdQVAo/L3kp63B7obXsN7bh9AWR6GZgtl0vXVKQzvdCJ
      ZZ/HF0Sml7XprUcgEIBcsvdGlXIRCpzN3kyslhGKxFEQLfsODA9hYWEW6b7Bu57j4JETMFt2
      oOu1Cm7cnIbD5Wr2NIFwFIGwfbnYH4qgeOH7yNc19KZWJ9aNughVN+D32ZebCWlf5F4bb8A+
      VJy4OYFiqYxEb2fj0ErPFn+CSG404PX54Ljdu22rA8xP3UJ0YBhCyRrrJnoHYJommLYXqmVZ
      hrOldZlfysLrD2JxeQX9vfef+uMO/O1hUes6sVyvgbAcqneJgOV5Hg6HALZlD6GwsoiFXBWp
      llCNO3qb+bj40tIieF/MJguGIlBbwijqtTKW8xUMHbAm6SwvoCFLcCsNoG1Tqp25uVkk+w40
      y15/EJlEBA3c3b5k3wBUxtITq2WohEddFBH0rV7DQCiCQCiyXhUbMjQ0BJNMd+y4bzeVUhGS
      BoTjqz3GtjpA3/AIlhbmkWjz4rWyCXAcj2q1CtxucUYOrr4kkUpuomvbBGsNi9xef3PMvxF3
      9FrpSfVClieRK5abw5O19NYj4PdDhr13G792GULIms8kMoNIZAZtOmKlBBNsx0rTWkRjMfC8
      fRxfEWWYzMY9HiFkNXuC27pPwXAEuclbaPgiSCfXGnDdG7zgxqHDR+6uuJUwDI49Yn83ZFsd
      gGFYpHv776pnGDpcbjd0bHxj9hKFlRXwngBSzo1b4bWo18qo1upowHqIJbGKaDwBnd24dXa6
      XCiVy9BM2Cb+ayFLEhxu+5JiwOeFK7Bxqy1WSmB5HmzLpNrlDeDk6cew93K7PRh74qX4+alb
      iA+MoDz58CTAjSXvf1hWr1XAufwYaAnVEJwCHIILbtfGGc0cTjdi0SiGh0c21AOAxaVF1A0W
      yZ7V89QqRRTKNaS8ncl4W6lVSnC4AwgErB6zfUVov7AnHKD/wDAWFzuHSvuVnvQA2tc7SoUC
      XB4fhE30KIzewNUbkzh+aHhdHV2RkUj1IhK3doclsQ6322Vb9l0LfzAEoybDwd97NreHjT3h
      AAzLIbOJodJ+Jp7c/LvUDZ3ARGNDncnpWXhcDvj91t6FoutgYcLh2Divqj8UhX/jTmLfsCcc
      gLJ5xGoZXrcTeXHjSXBvJoWaKEGq1+Bxrj7N/QN7O8PFbkAd4CGjXi1hpShi8MDGD7PXF4DX
      t3+/K7xV2LJCbCW1Wm1Lc0dS9hb75f7S7wRTuhrqAJSuZtscwPb6G2XfsV/u77bNASiUhwE6
      BKJ0NdQBKF0NdQBKV/P/AZV24M01CJNFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Death Toll' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Monthly Infected Toll' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Death Map Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='US Mainland Time Series Map Chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
